webpackJsonp([1],{

/***/ 606:
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(765)
}
var normalizeComponent = __webpack_require__(1)
/* script */
var __vue_script__ = __webpack_require__(767)
/* template */
var __vue_template__ = __webpack_require__(770)
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __vue_script__,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources/src/components/Dashboard/Views/Calendar/Calendar.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-39eba39d", Component.options)
  } else {
    hotAPI.reload("data-v-39eba39d", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),

/***/ 607:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_is_frozen__ = __webpack_require__(151);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_is_frozen___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_is_frozen__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_own_property_names__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_own_property_names___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_own_property_names__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_typeof__ = __webpack_require__(4);
var require;





;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && __webpack_require__(41) ? define(factory) : global.moment = factory();
})(this, function () {
    'use strict';

    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_own_property_names___default.a) {
            return __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_own_property_names___default()(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function some(fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);

            if (m._strict) {
                isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;
            }

            if (__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_is_frozen___default.a == null || !__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_is_frozen___default()(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }

        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
    }

    function absFloor(number) {
        if (number < 0) {
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (Object(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_typeof__["default"])(arguments[i]) === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2);
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + new Error().stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;

        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\d{1,2}/.source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default.a) {
        keys = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default.a;
    } else {
        keys = function keys(obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L'
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years'
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({ unit: u, priority: priorities[u] });
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function func() {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1 = /\d/;
    var match2 = /\d\d/;
    var match3 = /\d{3}/;
    var match4 = /\d{4}/;
    var match6 = /[+-]?\d{6}/;
    var match1to2 = /\d\d?/;
    var match3to4 = /\d\d\d\d?/;
    var match5to6 = /\d\d\d\d\d\d?/;
    var match1to3 = /\d{1,3}/;
    var match1to4 = /\d{1,4}/;
    var match1to6 = /[+-]?\d{1,6}/;

    var matchUnsigned = /\d+/;
    var matchSigned = /[+-]?\d+/;

    var matchOffset = /Z|[+-]\d\d:?\d\d/gi;
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi;

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/;
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

    var regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return isStrict && strictRegex ? strictRegex : regex;
        };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function func(input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    addUnitAlias('year', 'y');

    addUnitPriority('year', 1);

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
    }

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if ((typeof units === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_typeof__["default"])(units)) === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function mod(n, x) {
        return (n % x + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function indexOf(o) {
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
    }

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    addUnitAlias('month', 'M');

    addUnitPriority('month', 8);

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);

        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months) ? this._months : this._months['standalone'];
        }
        return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        for (i = 0; i < 12; i++) {
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }

            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);

                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }

        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    function createDate(y, m, d, h, M, s, ms) {
        var date = new Date(y, m, d, h, M, s, ms);

        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
            date.setFullYear(y);
        }
        return date;
    }

    function createUTCDate(y) {
        var date = new Date(Date.UTC.apply(null, arguments));

        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
            date.setUTCFullYear(y);
        }
        return date;
    }

    function firstWeekOffset(year, dow, doy) {
        var fwd = 7 + dow - doy,
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0,
        doy: 6 };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);

        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays(m, format) {
        if (!m) {
            return isArray(this._weekdays) ? this._weekdays : this._weekdays['standalone'];
        }
        return isArray(this._weekdays) ? this._weekdays[m.day()] : this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort(m) {
        return m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin(m) {
        return m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }

            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            mom = createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }

        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    addUnitAlias('hour', 'h');

    addUnitPriority('hour', 13);

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    function localeIsPM(input) {
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null;

        if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                __webpack_require__(769)("./" + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {}
        }
        return locales[name];
    }

    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                globalLocale = data;
            } else {
                if (typeof console !== 'undefined' && console.warn) {
                    console.warn('Locale ' + key + ' not found. Did you forget to load it?');
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale,
                parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            getSetGlobalLocale(name);

            return locales[name];
        } else {
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            getSetGlobalLocale(name);
        } else {
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        for (; i < 7; i++) {
            config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
        }

        if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            var curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/], ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/], ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/], ['GGGG-[W]WW', /\d{4}-W\d\d/, false], ['YYYY-DDD', /\d{4}-\d{3}/], ['YYYY-MM', /\d{4}-\d\d/, false], ['YYYYYYMMDD', /[+-]\d{10}/], ['YYYYMMDD', /\d{8}/], ['GGGG[W]WWE', /\d{4}W\d{3}/], ['GGGG[W]WW', /\d{4}W\d{2}/, false], ['YYYYDDD', /\d{7}/]];

    var isoTimes = [['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/], ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/], ['HH:mm:ss', /\d\d:\d\d:\d\d/], ['HH:mm', /\d\d:\d\d/], ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/], ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/], ['HHmmss', /\d\d\d\d\d\d/], ['HHmm', /\d\d\d\d/], ['HH', /\d\d/]];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            return 0;
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        hooks.createFromInputFallback(config);
    }

    hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {
        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
    });

    hooks.ISO_8601 = function () {};

    hooks.RFC_2822 = function () {};

    function configFromStringAndFormat(config) {
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];

            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }

            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;

        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            return hour;
        }
    }

    function configFromStringAndArray(config) {
        var tempConfig, bestMoment, scoreToBeat, i, currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || format === undefined && input === '') {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {
            input = undefined;
        }

        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other < this ? this : other;
        } else {
            return createInvalid();
        }
    });

    var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other > this ? this : other;
        } else {
            return createInvalid();
        }
    });

    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function now() {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
            }
        }

        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false;
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        this._milliseconds = +milliseconds + seconds * 1e3 + minutes * 6e4 + hours * 1000 * 60 * 60;
        this._days = +days + weeks * 7;

        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
            return null;
        }

        var chunk = matches[matches.length - 1] || [];
        var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();

            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    hooks.updateOffset = function () {};

    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months
            };
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : match[1] === '+' ? 1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign)
            };
        } else if (duration == null) {
            duration = {};
        } else if ((typeof duration === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_typeof__["default"])(duration)) === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        var res = inp && parseFloat(inp.replace(',', '.'));

        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = { milliseconds: 0, months: 0 };

        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;

            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val;val = period;period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add');
    var subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function calendar$1(time, formats) {
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) && (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units || 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;break;
            case 'month':
                output = monthDiff(this, that);break;
            case 'quarter':
                output = monthDiff(this, that) / 3;break;
            case 'second':
                output = (this - that) / 1e3;break;
            case 'minute':
                output = (this - that) / 6e4;break;
            case 'hour':
                output = (this - that) / 36e5;break;
            case 'day':
                output = (this - that - zoneDelta) / 864e5;break;
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;break;
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');

            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');

            adjust = (b - anchor) / (anchor2 - anchor);
        }

        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }
        if (isFunction(Date.prototype.toISOString)) {
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
    }

    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment';
        var zone = '';
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        var prefix = '[' + func + '("]';
        var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
            return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
            return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {
        if (key === undefined) {
            return this.localeData();
        } else {
            return this.locale(key);
        }
    });

    function localeData() {
        return this._locale;
    }

    function startOf(units) {
        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                this.month(0);

            case 'quarter':
            case 'month':
                this.date(1);

            case 'week':
            case 'isoWeek':
            case 'day':
            case 'date':
                this.hours(0);

            case 'hour':
                this.minutes(0);

            case 'minute':
                this.seconds(0);

            case 'second':
                this.milliseconds(0);
        }

        if (units === 'week') {
            this.weekday(0);
        }
        if (units === 'isoWeek') {
            this.isoWeekday(1);
        }

        if (units === 'quarter') {
            this.month(Math.floor(this.month() / 3) * 3);
        }

        return this;
    }

    function endOf(units) {
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond') {
            return this;
        }

        if (units === 'date') {
            units = 'day';
        }

        return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON() {
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    addFormatToken('Q', 0, 'Qo', 'quarter');

    addUnitAlias('quarter', 'Q');

    addUnitPriority('quarter', 7);

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    function getSetQuarter(input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    addUnitAlias('date', 'D');

    addUnitPriority('date', 9);

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    var getSetDayOfMonth = makeGetSet('Date', true);

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    addUnitAlias('dayOfYear', 'DDD');

    addUnitPriority('dayOfYear', 4);

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    function getSetDayOfYear(input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    addFormatToken('m', ['mm', 2], 0, 'minute');

    addUnitAlias('minute', 'm');

    addUnitPriority('minute', 14);

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    var getSetMinute = makeGetSet('Minutes', false);

    addFormatToken('s', ['ss', 2], 0, 'second');

    addUnitAlias('second', 's');

    addUnitPriority('second', 15);

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    var getSetSecond = makeGetSet('Seconds', false);

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    addUnitAlias('millisecond', 'ms');

    addUnitPriority('millisecond', 16);

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }


    var getSetMillisecond = makeGetSet('Milliseconds', false);

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function ordinal(number) {
            var b = number % 10,
                output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
        }
    });

    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds;
        var days = this._days;
        var months = this._months;
        var data = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        return days * 4800 / 146097;
    }

    function monthsToDays(months) {
        return months * 146097 / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            return units === 'month' ? months : months / 12;
        } else {
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;

                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds = makeAs('s');
    var asMinutes = makeAs('m');
    var asHours = makeAs('h');
    var asDays = makeAs('d');
    var asWeeks = makeAs('w');
    var asMonths = makeAs('M');
    var asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds = makeGetter('seconds');
    var minutes = makeGetter('minutes');
    var hours = makeGetter('hours');
    var days = makeGetter('days');
    var months = makeGetter('months');
    var years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        ss: 44,
        s: 45,
        m: 45,
        h: 22,
        d: 26,
        M: 11 };

    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds = round(duration.as('s'));
        var minutes = round(duration.as('m'));
        var hours = round(duration.as('h'));
        var days = round(duration.as('d'));
        var months = round(duration.as('M'));
        var years = round(duration.as('y'));

        var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days = abs$1(this._days);
        var months = abs$1(this._months);
        var minutes, hours, years;

        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        years = absFloor(months / 12);
        months %= 12;

        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
            return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
    proto$2.lang = lang;

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    hooks.version = '2.22.2';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',
        DATE: 'YYYY-MM-DD',
        TIME: 'HH:mm',
        TIME_SECONDS: 'HH:mm:ss',
        TIME_MS: 'HH:mm:ss.SSS',
        WEEK: 'YYYY-[W]WW',
        MONTH: 'YYYY-MM' };

    return hooks;
});
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(3)(module)))

/***/ }),

/***/ 613:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_define_property__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_define_property___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_define_property__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_symbol_iterator__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_symbol_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_symbol_iterator__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_get_prototype_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__ = __webpack_require__(4);






(function (global, factory) {

	"use strict";

	if (( false ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(module)) === "object" && Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(module.exports) === "object") {
		module.exports = global.document ? factory(global, true) : function (w) {
			if (!w.document) {
				throw new Error("jQuery requires a window with a document");
			}
			return factory(w);
		};
	} else {
		factory(global);
	}
})(typeof window !== "undefined" ? window : this, function (window, noGlobal) {
	"use strict";

	var arr = [];

	var document = window.document;

	var getProto = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_get_prototype_of___default.a;

	var _slice = arr.slice;

	var concat = arr.concat;

	var push = arr.push;

	var indexOf = arr.indexOf;

	var class2type = {};

	var toString = class2type.toString;

	var hasOwn = class2type.hasOwnProperty;

	var fnToString = hasOwn.toString;

	var ObjectFunctionString = fnToString.call(Object);

	var support = {};

	var isFunction = function isFunction(obj) {
		return typeof obj === "function" && typeof obj.nodeType !== "number";
	};

	var isWindow = function isWindow(obj) {
		return obj != null && obj === obj.window;
	};

	var preservedScriptAttributes = {
		type: true,
		src: true,
		noModule: true
	};

	function DOMEval(code, doc, node) {
		doc = doc || document;

		var i,
		    script = doc.createElement("script");

		script.text = code;
		if (node) {
			for (i in preservedScriptAttributes) {
				if (node[i]) {
					script[i] = node[i];
				}
			}
		}
		doc.head.appendChild(script).parentNode.removeChild(script);
	}

	function toType(obj) {
		if (obj == null) {
			return obj + "";
		}

		return (typeof obj === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(obj)) === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(obj);
	}


	var version = "3.3.1",
	    jQuery = function jQuery(selector, context) {
		return new jQuery.fn.init(selector, context);
	},
	    rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

	jQuery.fn = jQuery.prototype = {
		jquery: version,

		constructor: jQuery,

		length: 0,

		toArray: function toArray() {
			return _slice.call(this);
		},

		get: function get(num) {
			if (num == null) {
				return _slice.call(this);
			}

			return num < 0 ? this[num + this.length] : this[num];
		},

		pushStack: function pushStack(elems) {
			var ret = jQuery.merge(this.constructor(), elems);

			ret.prevObject = this;

			return ret;
		},

		each: function each(callback) {
			return jQuery.each(this, callback);
		},

		map: function map(callback) {
			return this.pushStack(jQuery.map(this, function (elem, i) {
				return callback.call(elem, i, elem);
			}));
		},

		slice: function slice() {
			return this.pushStack(_slice.apply(this, arguments));
		},

		first: function first() {
			return this.eq(0);
		},

		last: function last() {
			return this.eq(-1);
		},

		eq: function eq(i) {
			var len = this.length,
			    j = +i + (i < 0 ? len : 0);
			return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
		},

		end: function end() {
			return this.prevObject || this.constructor();
		},

		push: push,
		sort: arr.sort,
		splice: arr.splice
	};

	jQuery.extend = jQuery.fn.extend = function () {
		var options,
		    name,
		    src,
		    copy,
		    copyIsArray,
		    clone,
		    target = arguments[0] || {},
		    i = 1,
		    length = arguments.length,
		    deep = false;

		if (typeof target === "boolean") {
			deep = target;

			target = arguments[i] || {};
			i++;
		}

		if ((typeof target === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(target)) !== "object" && !isFunction(target)) {
			target = {};
		}

		if (i === length) {
			target = this;
			i--;
		}

		for (; i < length; i++) {
			if ((options = arguments[i]) != null) {
				for (name in options) {
					src = target[name];
					copy = options[name];

					if (target === copy) {
						continue;
					}

					if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {

						if (copyIsArray) {
							copyIsArray = false;
							clone = src && Array.isArray(src) ? src : [];
						} else {
							clone = src && jQuery.isPlainObject(src) ? src : {};
						}

						target[name] = jQuery.extend(deep, clone, copy);
					} else if (copy !== undefined) {
						target[name] = copy;
					}
				}
			}
		}

		return target;
	};

	jQuery.extend({
		expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),

		isReady: true,

		error: function error(msg) {
			throw new Error(msg);
		},

		noop: function noop() {},

		isPlainObject: function isPlainObject(obj) {
			var proto, Ctor;

			if (!obj || toString.call(obj) !== "[object Object]") {
				return false;
			}

			proto = getProto(obj);

			if (!proto) {
				return true;
			}

			Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
			return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
		},

		isEmptyObject: function isEmptyObject(obj) {
			var name;

			for (name in obj) {
				return false;
			}
			return true;
		},

		globalEval: function globalEval(code) {
			DOMEval(code);
		},

		each: function each(obj, callback) {
			var length,
			    i = 0;

			if (isArrayLike(obj)) {
				length = obj.length;
				for (; i < length; i++) {
					if (callback.call(obj[i], i, obj[i]) === false) {
						break;
					}
				}
			} else {
				for (i in obj) {
					if (callback.call(obj[i], i, obj[i]) === false) {
						break;
					}
				}
			}

			return obj;
		},

		trim: function trim(text) {
			return text == null ? "" : (text + "").replace(rtrim, "");
		},

		makeArray: function makeArray(arr, results) {
			var ret = results || [];

			if (arr != null) {
				if (isArrayLike(Object(arr))) {
					jQuery.merge(ret, typeof arr === "string" ? [arr] : arr);
				} else {
					push.call(ret, arr);
				}
			}

			return ret;
		},

		inArray: function inArray(elem, arr, i) {
			return arr == null ? -1 : indexOf.call(arr, elem, i);
		},

		merge: function merge(first, second) {
			var len = +second.length,
			    j = 0,
			    i = first.length;

			for (; j < len; j++) {
				first[i++] = second[j];
			}

			first.length = i;

			return first;
		},

		grep: function grep(elems, callback, invert) {
			var callbackInverse,
			    matches = [],
			    i = 0,
			    length = elems.length,
			    callbackExpect = !invert;

			for (; i < length; i++) {
				callbackInverse = !callback(elems[i], i);
				if (callbackInverse !== callbackExpect) {
					matches.push(elems[i]);
				}
			}

			return matches;
		},

		map: function map(elems, callback, arg) {
			var length,
			    value,
			    i = 0,
			    ret = [];

			if (isArrayLike(elems)) {
				length = elems.length;
				for (; i < length; i++) {
					value = callback(elems[i], i, arg);

					if (value != null) {
						ret.push(value);
					}
				}
			} else {
				for (i in elems) {
					value = callback(elems[i], i, arg);

					if (value != null) {
						ret.push(value);
					}
				}
			}

			return concat.apply([], ret);
		},

		guid: 1,

		support: support
	});

	if (typeof __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol___default.a === "function") {
		jQuery.fn[__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_symbol_iterator___default.a] = arr[__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_symbol_iterator___default.a];
	}

	jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (i, name) {
		class2type["[object " + name + "]"] = name.toLowerCase();
	});

	function isArrayLike(obj) {
		var length = !!obj && "length" in obj && obj.length,
		    type = toType(obj);

		if (isFunction(obj) || isWindow(obj)) {
			return false;
		}

		return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
	}
	var Sizzle = function (window) {

		var i,
		    support,
		    Expr,
		    getText,
		    isXML,
		    tokenize,
		    compile,
		    select,
		    outermostContext,
		    sortInput,
		    hasDuplicate,
		    setDocument,
		    document,
		    docElem,
		    documentIsHTML,
		    rbuggyQSA,
		    rbuggyMatches,
		    matches,
		    contains,
		    expando = "sizzle" + 1 * new Date(),
		    preferredDoc = window.document,
		    dirruns = 0,
		    done = 0,
		    classCache = createCache(),
		    tokenCache = createCache(),
		    compilerCache = createCache(),
		    sortOrder = function sortOrder(a, b) {
			if (a === b) {
				hasDuplicate = true;
			}
			return 0;
		},
		    hasOwn = {}.hasOwnProperty,
		    arr = [],
		    pop = arr.pop,
		    push_native = arr.push,
		    push = arr.push,
		    slice = arr.slice,
		    indexOf = function indexOf(list, elem) {
			var i = 0,
			    len = list.length;
			for (; i < len; i++) {
				if (list[i] === elem) {
					return i;
				}
			}
			return -1;
		},
		    booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
		    whitespace = "[\\x20\\t\\r\\n\\f]",
		    identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
		    attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
		    pseudos = ":(" + identifier + ")(?:\\((" + "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + ".*" + ")\\)|)",
		    rwhitespace = new RegExp(whitespace + "+", "g"),
		    rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
		    rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
		    rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
		    rattributeQuotes = new RegExp("=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g"),
		    rpseudo = new RegExp(pseudos),
		    ridentifier = new RegExp("^" + identifier + "$"),
		    matchExpr = {
			"ID": new RegExp("^#(" + identifier + ")"),
			"CLASS": new RegExp("^\\.(" + identifier + ")"),
			"TAG": new RegExp("^(" + identifier + "|[*])"),
			"ATTR": new RegExp("^" + attributes),
			"PSEUDO": new RegExp("^" + pseudos),
			"CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
			"bool": new RegExp("^(?:" + booleans + ")$", "i"),

			"needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
		},
		    rinputs = /^(?:input|select|textarea|button)$/i,
		    rheader = /^h\d$/i,
		    rnative = /^[^{]+\{\s*\[native \w/,
		    rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
		    rsibling = /[+~]/,
		    runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
		    funescape = function funescape(_, escaped, escapedWhitespace) {
			var high = "0x" + escaped - 0x10000;

			return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);
		},
		    rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
		    fcssescape = function fcssescape(ch, asCodePoint) {
			if (asCodePoint) {
				if (ch === "\0") {
					return "\uFFFD";
				}

				return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
			}

			return "\\" + ch;
		},
		    unloadHandler = function unloadHandler() {
			setDocument();
		},
		    disabledAncestor = addCombinator(function (elem) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		}, { dir: "parentNode", next: "legend" });

		try {
			push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);

			arr[preferredDoc.childNodes.length].nodeType;
		} catch (e) {
			push = { apply: arr.length ? function (target, els) {
					push_native.apply(target, slice.call(els));
				} : function (target, els) {
					var j = target.length,
					    i = 0;

					while (target[j++] = els[i++]) {}
					target.length = j - 1;
				}
			};
		}

		function Sizzle(selector, context, results, seed) {
			var m,
			    i,
			    elem,
			    nid,
			    match,
			    groups,
			    newSelector,
			    newContext = context && context.ownerDocument,
			    nodeType = context ? context.nodeType : 9;

			results = results || [];

			if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {

				return results;
			}

			if (!seed) {

				if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
					setDocument(context);
				}
				context = context || document;

				if (documentIsHTML) {
					if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
						if (m = match[1]) {
							if (nodeType === 9) {
								if (elem = context.getElementById(m)) {
									if (elem.id === m) {
										results.push(elem);
										return results;
									}
								} else {
									return results;
								}
							} else {
								if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {

									results.push(elem);
									return results;
								}
							}
						} else if (match[2]) {
							push.apply(results, context.getElementsByTagName(selector));
							return results;
						} else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {

							push.apply(results, context.getElementsByClassName(m));
							return results;
						}
					}

					if (support.qsa && !compilerCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {

						if (nodeType !== 1) {
							newContext = context;
							newSelector = selector;
						} else if (context.nodeName.toLowerCase() !== "object") {
							if (nid = context.getAttribute("id")) {
								nid = nid.replace(rcssescape, fcssescape);
							} else {
								context.setAttribute("id", nid = expando);
							}

							groups = tokenize(selector);
							i = groups.length;
							while (i--) {
								groups[i] = "#" + nid + " " + toSelector(groups[i]);
							}
							newSelector = groups.join(",");

							newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
						}

						if (newSelector) {
							try {
								push.apply(results, newContext.querySelectorAll(newSelector));
								return results;
							} catch (qsaError) {} finally {
								if (nid === expando) {
									context.removeAttribute("id");
								}
							}
						}
					}
				}
			}

			return select(selector.replace(rtrim, "$1"), context, results, seed);
		}

		function createCache() {
			var keys = [];

			function cache(key, value) {
				if (keys.push(key + " ") > Expr.cacheLength) {
					delete cache[keys.shift()];
				}
				return cache[key + " "] = value;
			}
			return cache;
		}

		function markFunction(fn) {
			fn[expando] = true;
			return fn;
		}

		function assert(fn) {
			var el = document.createElement("fieldset");

			try {
				return !!fn(el);
			} catch (e) {
				return false;
			} finally {
				if (el.parentNode) {
					el.parentNode.removeChild(el);
				}

				el = null;
			}
		}

		function addHandle(attrs, handler) {
			var arr = attrs.split("|"),
			    i = arr.length;

			while (i--) {
				Expr.attrHandle[arr[i]] = handler;
			}
		}

		function siblingCheck(a, b) {
			var cur = b && a,
			    diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;

			if (diff) {
				return diff;
			}

			if (cur) {
				while (cur = cur.nextSibling) {
					if (cur === b) {
						return -1;
					}
				}
			}

			return a ? 1 : -1;
		}

		function createInputPseudo(type) {
			return function (elem) {
				var name = elem.nodeName.toLowerCase();
				return name === "input" && elem.type === type;
			};
		}

		function createButtonPseudo(type) {
			return function (elem) {
				var name = elem.nodeName.toLowerCase();
				return (name === "input" || name === "button") && elem.type === type;
			};
		}

		function createDisabledPseudo(disabled) {
			return function (elem) {
				if ("form" in elem) {
					if (elem.parentNode && elem.disabled === false) {
						if ("label" in elem) {
							if ("label" in elem.parentNode) {
								return elem.parentNode.disabled === disabled;
							} else {
								return elem.disabled === disabled;
							}
						}

						return elem.isDisabled === disabled || elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;
					}

					return elem.disabled === disabled;
				} else if ("label" in elem) {
					return elem.disabled === disabled;
				}

				return false;
			};
		}

		function createPositionalPseudo(fn) {
			return markFunction(function (argument) {
				argument = +argument;
				return markFunction(function (seed, matches) {
					var j,
					    matchIndexes = fn([], seed.length, argument),
					    i = matchIndexes.length;

					while (i--) {
						if (seed[j = matchIndexes[i]]) {
							seed[j] = !(matches[j] = seed[j]);
						}
					}
				});
			});
		}

		function testContext(context) {
			return context && typeof context.getElementsByTagName !== "undefined" && context;
		}

		support = Sizzle.support = {};

		isXML = Sizzle.isXML = function (elem) {
			var documentElement = elem && (elem.ownerDocument || elem).documentElement;
			return documentElement ? documentElement.nodeName !== "HTML" : false;
		};

		setDocument = Sizzle.setDocument = function (node) {
			var hasCompare,
			    subWindow,
			    doc = node ? node.ownerDocument || node : preferredDoc;

			if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
				return document;
			}

			document = doc;
			docElem = document.documentElement;
			documentIsHTML = !isXML(document);

			if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {
				if (subWindow.addEventListener) {
					subWindow.addEventListener("unload", unloadHandler, false);
				} else if (subWindow.attachEvent) {
					subWindow.attachEvent("onunload", unloadHandler);
				}
			}

			support.attributes = assert(function (el) {
				el.className = "i";
				return !el.getAttribute("className");
			});

			support.getElementsByTagName = assert(function (el) {
				el.appendChild(document.createComment(""));
				return !el.getElementsByTagName("*").length;
			});

			support.getElementsByClassName = rnative.test(document.getElementsByClassName);

			support.getById = assert(function (el) {
				docElem.appendChild(el).id = expando;
				return !document.getElementsByName || !document.getElementsByName(expando).length;
			});

			if (support.getById) {
				Expr.filter["ID"] = function (id) {
					var attrId = id.replace(runescape, funescape);
					return function (elem) {
						return elem.getAttribute("id") === attrId;
					};
				};
				Expr.find["ID"] = function (id, context) {
					if (typeof context.getElementById !== "undefined" && documentIsHTML) {
						var elem = context.getElementById(id);
						return elem ? [elem] : [];
					}
				};
			} else {
				Expr.filter["ID"] = function (id) {
					var attrId = id.replace(runescape, funescape);
					return function (elem) {
						var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
						return node && node.value === attrId;
					};
				};

				Expr.find["ID"] = function (id, context) {
					if (typeof context.getElementById !== "undefined" && documentIsHTML) {
						var node,
						    i,
						    elems,
						    elem = context.getElementById(id);

						if (elem) {
							node = elem.getAttributeNode("id");
							if (node && node.value === id) {
								return [elem];
							}

							elems = context.getElementsByName(id);
							i = 0;
							while (elem = elems[i++]) {
								node = elem.getAttributeNode("id");
								if (node && node.value === id) {
									return [elem];
								}
							}
						}

						return [];
					}
				};
			}

			Expr.find["TAG"] = support.getElementsByTagName ? function (tag, context) {
				if (typeof context.getElementsByTagName !== "undefined") {
					return context.getElementsByTagName(tag);
				} else if (support.qsa) {
					return context.querySelectorAll(tag);
				}
			} : function (tag, context) {
				var elem,
				    tmp = [],
				    i = 0,
				    results = context.getElementsByTagName(tag);

				if (tag === "*") {
					while (elem = results[i++]) {
						if (elem.nodeType === 1) {
							tmp.push(elem);
						}
					}

					return tmp;
				}
				return results;
			};

			Expr.find["CLASS"] = support.getElementsByClassName && function (className, context) {
				if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
					return context.getElementsByClassName(className);
				}
			};

			rbuggyMatches = [];

			rbuggyQSA = [];

			if (support.qsa = rnative.test(document.querySelectorAll)) {
				assert(function (el) {
					docElem.appendChild(el).innerHTML = "<a id='" + expando + "'></a>" + "<select id='" + expando + "-\r\\' msallowcapture=''>" + "<option selected=''></option></select>";

					if (el.querySelectorAll("[msallowcapture^='']").length) {
						rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
					}

					if (!el.querySelectorAll("[selected]").length) {
						rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
					}

					if (!el.querySelectorAll("[id~=" + expando + "-]").length) {
						rbuggyQSA.push("~=");
					}

					if (!el.querySelectorAll(":checked").length) {
						rbuggyQSA.push(":checked");
					}

					if (!el.querySelectorAll("a#" + expando + "+*").length) {
						rbuggyQSA.push(".#.+[+~]");
					}
				});

				assert(function (el) {
					el.innerHTML = "<a href='' disabled='disabled'></a>" + "<select disabled='disabled'><option/></select>";

					var input = document.createElement("input");
					input.setAttribute("type", "hidden");
					el.appendChild(input).setAttribute("name", "D");

					if (el.querySelectorAll("[name=d]").length) {
						rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
					}

					if (el.querySelectorAll(":enabled").length !== 2) {
						rbuggyQSA.push(":enabled", ":disabled");
					}

					docElem.appendChild(el).disabled = true;
					if (el.querySelectorAll(":disabled").length !== 2) {
						rbuggyQSA.push(":enabled", ":disabled");
					}

					el.querySelectorAll("*,:x");
					rbuggyQSA.push(",.*:");
				});
			}

			if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {

				assert(function (el) {
					support.disconnectedMatch = matches.call(el, "*");

					matches.call(el, "[s!='']:x");
					rbuggyMatches.push("!=", pseudos);
				});
			}

			rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
			rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));

			hasCompare = rnative.test(docElem.compareDocumentPosition);

			contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {
				var adown = a.nodeType === 9 ? a.documentElement : a,
				    bup = b && b.parentNode;
				return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
			} : function (a, b) {
				if (b) {
					while (b = b.parentNode) {
						if (b === a) {
							return true;
						}
					}
				}
				return false;
			};

			sortOrder = hasCompare ? function (a, b) {
				if (a === b) {
					hasDuplicate = true;
					return 0;
				}

				var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
				if (compare) {
					return compare;
				}

				compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;

				if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
					if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
						return -1;
					}
					if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
						return 1;
					}

					return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
				}

				return compare & 4 ? -1 : 1;
			} : function (a, b) {
				if (a === b) {
					hasDuplicate = true;
					return 0;
				}

				var cur,
				    i = 0,
				    aup = a.parentNode,
				    bup = b.parentNode,
				    ap = [a],
				    bp = [b];

				if (!aup || !bup) {
					return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
				} else if (aup === bup) {
					return siblingCheck(a, b);
				}

				cur = a;
				while (cur = cur.parentNode) {
					ap.unshift(cur);
				}
				cur = b;
				while (cur = cur.parentNode) {
					bp.unshift(cur);
				}

				while (ap[i] === bp[i]) {
					i++;
				}

				return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
			};

			return document;
		};

		Sizzle.matches = function (expr, elements) {
			return Sizzle(expr, null, null, elements);
		};

		Sizzle.matchesSelector = function (elem, expr) {
			if ((elem.ownerDocument || elem) !== document) {
				setDocument(elem);
			}

			expr = expr.replace(rattributeQuotes, "='$1']");

			if (support.matchesSelector && documentIsHTML && !compilerCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {

				try {
					var ret = matches.call(elem, expr);

					if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
						return ret;
					}
				} catch (e) {}
			}

			return Sizzle(expr, document, null, [elem]).length > 0;
		};

		Sizzle.contains = function (context, elem) {
			if ((context.ownerDocument || context) !== document) {
				setDocument(context);
			}
			return contains(context, elem);
		};

		Sizzle.attr = function (elem, name) {
			if ((elem.ownerDocument || elem) !== document) {
				setDocument(elem);
			}

			var fn = Expr.attrHandle[name.toLowerCase()],
			    val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;

			return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
		};

		Sizzle.escape = function (sel) {
			return (sel + "").replace(rcssescape, fcssescape);
		};

		Sizzle.error = function (msg) {
			throw new Error("Syntax error, unrecognized expression: " + msg);
		};

		Sizzle.uniqueSort = function (results) {
			var elem,
			    duplicates = [],
			    j = 0,
			    i = 0;

			hasDuplicate = !support.detectDuplicates;
			sortInput = !support.sortStable && results.slice(0);
			results.sort(sortOrder);

			if (hasDuplicate) {
				while (elem = results[i++]) {
					if (elem === results[i]) {
						j = duplicates.push(i);
					}
				}
				while (j--) {
					results.splice(duplicates[j], 1);
				}
			}

			sortInput = null;

			return results;
		};

		getText = Sizzle.getText = function (elem) {
			var node,
			    ret = "",
			    i = 0,
			    nodeType = elem.nodeType;

			if (!nodeType) {
				while (node = elem[i++]) {
					ret += getText(node);
				}
			} else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
				if (typeof elem.textContent === "string") {
					return elem.textContent;
				} else {
					for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
						ret += getText(elem);
					}
				}
			} else if (nodeType === 3 || nodeType === 4) {
				return elem.nodeValue;
			}


			return ret;
		};

		Expr = Sizzle.selectors = {
			cacheLength: 50,

			createPseudo: markFunction,

			match: matchExpr,

			attrHandle: {},

			find: {},

			relative: {
				">": { dir: "parentNode", first: true },
				" ": { dir: "parentNode" },
				"+": { dir: "previousSibling", first: true },
				"~": { dir: "previousSibling" }
			},

			preFilter: {
				"ATTR": function ATTR(match) {
					match[1] = match[1].replace(runescape, funescape);

					match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);

					if (match[2] === "~=") {
						match[3] = " " + match[3] + " ";
					}

					return match.slice(0, 4);
				},

				"CHILD": function CHILD(match) {
					match[1] = match[1].toLowerCase();

					if (match[1].slice(0, 3) === "nth") {
						if (!match[3]) {
							Sizzle.error(match[0]);
						}

						match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
						match[5] = +(match[7] + match[8] || match[3] === "odd");
					} else if (match[3]) {
						Sizzle.error(match[0]);
					}

					return match;
				},

				"PSEUDO": function PSEUDO(match) {
					var excess,
					    unquoted = !match[6] && match[2];

					if (matchExpr["CHILD"].test(match[0])) {
						return null;
					}

					if (match[3]) {
						match[2] = match[4] || match[5] || "";
					} else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
						match[0] = match[0].slice(0, excess);
						match[2] = unquoted.slice(0, excess);
					}

					return match.slice(0, 3);
				}
			},

			filter: {

				"TAG": function TAG(nodeNameSelector) {
					var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
					return nodeNameSelector === "*" ? function () {
						return true;
					} : function (elem) {
						return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
					};
				},

				"CLASS": function CLASS(className) {
					var pattern = classCache[className + " "];

					return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function (elem) {
						return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");
					});
				},

				"ATTR": function ATTR(name, operator, check) {
					return function (elem) {
						var result = Sizzle.attr(elem, name);

						if (result == null) {
							return operator === "!=";
						}
						if (!operator) {
							return true;
						}

						result += "";

						return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;
					};
				},

				"CHILD": function CHILD(type, what, argument, first, last) {
					var simple = type.slice(0, 3) !== "nth",
					    forward = type.slice(-4) !== "last",
					    ofType = what === "of-type";

					return first === 1 && last === 0 ? function (elem) {
						return !!elem.parentNode;
					} : function (elem, context, xml) {
						var cache,
						    uniqueCache,
						    outerCache,
						    node,
						    nodeIndex,
						    start,
						    dir = simple !== forward ? "nextSibling" : "previousSibling",
						    parent = elem.parentNode,
						    name = ofType && elem.nodeName.toLowerCase(),
						    useCache = !xml && !ofType,
						    diff = false;

						if (parent) {
							if (simple) {
								while (dir) {
									node = elem;
									while (node = node[dir]) {
										if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {

											return false;
										}
									}

									start = dir = type === "only" && !start && "nextSibling";
								}
								return true;
							}

							start = [forward ? parent.firstChild : parent.lastChild];

							if (forward && useCache) {
								node = parent;
								outerCache = node[expando] || (node[expando] = {});

								uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});

								cache = uniqueCache[type] || [];
								nodeIndex = cache[0] === dirruns && cache[1];
								diff = nodeIndex && cache[2];
								node = nodeIndex && parent.childNodes[nodeIndex];

								while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
									if (node.nodeType === 1 && ++diff && node === elem) {
										uniqueCache[type] = [dirruns, nodeIndex, diff];
										break;
									}
								}
							} else {
								if (useCache) {
									node = elem;
									outerCache = node[expando] || (node[expando] = {});

									uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});

									cache = uniqueCache[type] || [];
									nodeIndex = cache[0] === dirruns && cache[1];
									diff = nodeIndex;
								}

								if (diff === false) {
									while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {

										if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
											if (useCache) {
												outerCache = node[expando] || (node[expando] = {});

												uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});

												uniqueCache[type] = [dirruns, diff];
											}

											if (node === elem) {
												break;
											}
										}
									}
								}
							}

							diff -= last;
							return diff === first || diff % first === 0 && diff / first >= 0;
						}
					};
				},

				"PSEUDO": function PSEUDO(pseudo, argument) {
					var args,
					    fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);

					if (fn[expando]) {
						return fn(argument);
					}

					if (fn.length > 1) {
						args = [pseudo, pseudo, "", argument];
						return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {
							var idx,
							    matched = fn(seed, argument),
							    i = matched.length;
							while (i--) {
								idx = indexOf(seed, matched[i]);
								seed[idx] = !(matches[idx] = matched[i]);
							}
						}) : function (elem) {
							return fn(elem, 0, args);
						};
					}

					return fn;
				}
			},

			pseudos: {
				"not": markFunction(function (selector) {
					var input = [],
					    results = [],
					    matcher = compile(selector.replace(rtrim, "$1"));

					return matcher[expando] ? markFunction(function (seed, matches, context, xml) {
						var elem,
						    unmatched = matcher(seed, null, xml, []),
						    i = seed.length;

						while (i--) {
							if (elem = unmatched[i]) {
								seed[i] = !(matches[i] = elem);
							}
						}
					}) : function (elem, context, xml) {
						input[0] = elem;
						matcher(input, null, xml, results);

						input[0] = null;
						return !results.pop();
					};
				}),

				"has": markFunction(function (selector) {
					return function (elem) {
						return Sizzle(selector, elem).length > 0;
					};
				}),

				"contains": markFunction(function (text) {
					text = text.replace(runescape, funescape);
					return function (elem) {
						return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
					};
				}),

				"lang": markFunction(function (lang) {
					if (!ridentifier.test(lang || "")) {
						Sizzle.error("unsupported lang: " + lang);
					}
					lang = lang.replace(runescape, funescape).toLowerCase();
					return function (elem) {
						var elemLang;
						do {
							if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {

								elemLang = elemLang.toLowerCase();
								return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
							}
						} while ((elem = elem.parentNode) && elem.nodeType === 1);
						return false;
					};
				}),

				"target": function target(elem) {
					var hash = window.location && window.location.hash;
					return hash && hash.slice(1) === elem.id;
				},

				"root": function root(elem) {
					return elem === docElem;
				},

				"focus": function focus(elem) {
					return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
				},

				"enabled": createDisabledPseudo(false),
				"disabled": createDisabledPseudo(true),

				"checked": function checked(elem) {
					var nodeName = elem.nodeName.toLowerCase();
					return nodeName === "input" && !!elem.checked || nodeName === "option" && !!elem.selected;
				},

				"selected": function selected(elem) {
					if (elem.parentNode) {
						elem.parentNode.selectedIndex;
					}

					return elem.selected === true;
				},

				"empty": function empty(elem) {
					for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
						if (elem.nodeType < 6) {
							return false;
						}
					}
					return true;
				},

				"parent": function parent(elem) {
					return !Expr.pseudos["empty"](elem);
				},

				"header": function header(elem) {
					return rheader.test(elem.nodeName);
				},

				"input": function input(elem) {
					return rinputs.test(elem.nodeName);
				},

				"button": function button(elem) {
					var name = elem.nodeName.toLowerCase();
					return name === "input" && elem.type === "button" || name === "button";
				},

				"text": function text(elem) {
					var attr;
					return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
				},

				"first": createPositionalPseudo(function () {
					return [0];
				}),

				"last": createPositionalPseudo(function (matchIndexes, length) {
					return [length - 1];
				}),

				"eq": createPositionalPseudo(function (matchIndexes, length, argument) {
					return [argument < 0 ? argument + length : argument];
				}),

				"even": createPositionalPseudo(function (matchIndexes, length) {
					var i = 0;
					for (; i < length; i += 2) {
						matchIndexes.push(i);
					}
					return matchIndexes;
				}),

				"odd": createPositionalPseudo(function (matchIndexes, length) {
					var i = 1;
					for (; i < length; i += 2) {
						matchIndexes.push(i);
					}
					return matchIndexes;
				}),

				"lt": createPositionalPseudo(function (matchIndexes, length, argument) {
					var i = argument < 0 ? argument + length : argument;
					for (; --i >= 0;) {
						matchIndexes.push(i);
					}
					return matchIndexes;
				}),

				"gt": createPositionalPseudo(function (matchIndexes, length, argument) {
					var i = argument < 0 ? argument + length : argument;
					for (; ++i < length;) {
						matchIndexes.push(i);
					}
					return matchIndexes;
				})
			}
		};

		Expr.pseudos["nth"] = Expr.pseudos["eq"];

		for (i in { radio: true, checkbox: true, file: true, password: true, image: true }) {
			Expr.pseudos[i] = createInputPseudo(i);
		}
		for (i in { submit: true, reset: true }) {
			Expr.pseudos[i] = createButtonPseudo(i);
		}

		function setFilters() {}
		setFilters.prototype = Expr.filters = Expr.pseudos;
		Expr.setFilters = new setFilters();

		tokenize = Sizzle.tokenize = function (selector, parseOnly) {
			var matched,
			    match,
			    tokens,
			    type,
			    soFar,
			    groups,
			    preFilters,
			    cached = tokenCache[selector + " "];

			if (cached) {
				return parseOnly ? 0 : cached.slice(0);
			}

			soFar = selector;
			groups = [];
			preFilters = Expr.preFilter;

			while (soFar) {
				if (!matched || (match = rcomma.exec(soFar))) {
					if (match) {
						soFar = soFar.slice(match[0].length) || soFar;
					}
					groups.push(tokens = []);
				}

				matched = false;

				if (match = rcombinators.exec(soFar)) {
					matched = match.shift();
					tokens.push({
						value: matched,

						type: match[0].replace(rtrim, " ")
					});
					soFar = soFar.slice(matched.length);
				}

				for (type in Expr.filter) {
					if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
						matched = match.shift();
						tokens.push({
							value: matched,
							type: type,
							matches: match
						});
						soFar = soFar.slice(matched.length);
					}
				}

				if (!matched) {
					break;
				}
			}

			return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
		};

		function toSelector(tokens) {
			var i = 0,
			    len = tokens.length,
			    selector = "";
			for (; i < len; i++) {
				selector += tokens[i].value;
			}
			return selector;
		}

		function addCombinator(matcher, combinator, base) {
			var dir = combinator.dir,
			    skip = combinator.next,
			    key = skip || dir,
			    checkNonElements = base && key === "parentNode",
			    doneName = done++;

			return combinator.first ? function (elem, context, xml) {
				while (elem = elem[dir]) {
					if (elem.nodeType === 1 || checkNonElements) {
						return matcher(elem, context, xml);
					}
				}
				return false;
			} : function (elem, context, xml) {
				var oldCache,
				    uniqueCache,
				    outerCache,
				    newCache = [dirruns, doneName];

				if (xml) {
					while (elem = elem[dir]) {
						if (elem.nodeType === 1 || checkNonElements) {
							if (matcher(elem, context, xml)) {
								return true;
							}
						}
					}
				} else {
					while (elem = elem[dir]) {
						if (elem.nodeType === 1 || checkNonElements) {
							outerCache = elem[expando] || (elem[expando] = {});

							uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});

							if (skip && skip === elem.nodeName.toLowerCase()) {
								elem = elem[dir] || elem;
							} else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
								return newCache[2] = oldCache[2];
							} else {
								uniqueCache[key] = newCache;

								if (newCache[2] = matcher(elem, context, xml)) {
									return true;
								}
							}
						}
					}
				}
				return false;
			};
		}

		function elementMatcher(matchers) {
			return matchers.length > 1 ? function (elem, context, xml) {
				var i = matchers.length;
				while (i--) {
					if (!matchers[i](elem, context, xml)) {
						return false;
					}
				}
				return true;
			} : matchers[0];
		}

		function multipleContexts(selector, contexts, results) {
			var i = 0,
			    len = contexts.length;
			for (; i < len; i++) {
				Sizzle(selector, contexts[i], results);
			}
			return results;
		}

		function condense(unmatched, map, filter, context, xml) {
			var elem,
			    newUnmatched = [],
			    i = 0,
			    len = unmatched.length,
			    mapped = map != null;

			for (; i < len; i++) {
				if (elem = unmatched[i]) {
					if (!filter || filter(elem, context, xml)) {
						newUnmatched.push(elem);
						if (mapped) {
							map.push(i);
						}
					}
				}
			}

			return newUnmatched;
		}

		function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
			if (postFilter && !postFilter[expando]) {
				postFilter = setMatcher(postFilter);
			}
			if (postFinder && !postFinder[expando]) {
				postFinder = setMatcher(postFinder, postSelector);
			}
			return markFunction(function (seed, results, context, xml) {
				var temp,
				    i,
				    elem,
				    preMap = [],
				    postMap = [],
				    preexisting = results.length,
				    elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
				    matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,
				    matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;

				if (matcher) {
					matcher(matcherIn, matcherOut, context, xml);
				}

				if (postFilter) {
					temp = condense(matcherOut, postMap);
					postFilter(temp, [], context, xml);

					i = temp.length;
					while (i--) {
						if (elem = temp[i]) {
							matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
						}
					}
				}

				if (seed) {
					if (postFinder || preFilter) {
						if (postFinder) {
							temp = [];
							i = matcherOut.length;
							while (i--) {
								if (elem = matcherOut[i]) {
									temp.push(matcherIn[i] = elem);
								}
							}
							postFinder(null, matcherOut = [], temp, xml);
						}

						i = matcherOut.length;
						while (i--) {
							if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {

								seed[temp] = !(results[temp] = elem);
							}
						}
					}
				} else {
					matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
					if (postFinder) {
						postFinder(null, results, matcherOut, xml);
					} else {
						push.apply(results, matcherOut);
					}
				}
			});
		}

		function matcherFromTokens(tokens) {
			var checkContext,
			    matcher,
			    j,
			    len = tokens.length,
			    leadingRelative = Expr.relative[tokens[0].type],
			    implicitRelative = leadingRelative || Expr.relative[" "],
			    i = leadingRelative ? 1 : 0,
			    matchContext = addCombinator(function (elem) {
				return elem === checkContext;
			}, implicitRelative, true),
			    matchAnyContext = addCombinator(function (elem) {
				return indexOf(checkContext, elem) > -1;
			}, implicitRelative, true),
			    matchers = [function (elem, context, xml) {
				var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));

				checkContext = null;
				return ret;
			}];

			for (; i < len; i++) {
				if (matcher = Expr.relative[tokens[i].type]) {
					matchers = [addCombinator(elementMatcher(matchers), matcher)];
				} else {
					matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);

					if (matcher[expando]) {
						j = ++i;
						for (; j < len; j++) {
							if (Expr.relative[tokens[j].type]) {
								break;
							}
						}
						return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({ value: tokens[i - 2].type === " " ? "*" : "" })).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
					}
					matchers.push(matcher);
				}
			}

			return elementMatcher(matchers);
		}

		function matcherFromGroupMatchers(elementMatchers, setMatchers) {
			var bySet = setMatchers.length > 0,
			    byElement = elementMatchers.length > 0,
			    superMatcher = function superMatcher(seed, context, xml, results, outermost) {
				var elem,
				    j,
				    matcher,
				    matchedCount = 0,
				    i = "0",
				    unmatched = seed && [],
				    setMatched = [],
				    contextBackup = outermostContext,
				    elems = seed || byElement && Expr.find["TAG"]("*", outermost),
				    dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,
				    len = elems.length;

				if (outermost) {
					outermostContext = context === document || context || outermost;
				}

				for (; i !== len && (elem = elems[i]) != null; i++) {
					if (byElement && elem) {
						j = 0;
						if (!context && elem.ownerDocument !== document) {
							setDocument(elem);
							xml = !documentIsHTML;
						}
						while (matcher = elementMatchers[j++]) {
							if (matcher(elem, context || document, xml)) {
								results.push(elem);
								break;
							}
						}
						if (outermost) {
							dirruns = dirrunsUnique;
						}
					}

					if (bySet) {
						if (elem = !matcher && elem) {
							matchedCount--;
						}

						if (seed) {
							unmatched.push(elem);
						}
					}
				}

				matchedCount += i;

				if (bySet && i !== matchedCount) {
					j = 0;
					while (matcher = setMatchers[j++]) {
						matcher(unmatched, setMatched, context, xml);
					}

					if (seed) {
						if (matchedCount > 0) {
							while (i--) {
								if (!(unmatched[i] || setMatched[i])) {
									setMatched[i] = pop.call(results);
								}
							}
						}

						setMatched = condense(setMatched);
					}

					push.apply(results, setMatched);

					if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {

						Sizzle.uniqueSort(results);
					}
				}

				if (outermost) {
					dirruns = dirrunsUnique;
					outermostContext = contextBackup;
				}

				return unmatched;
			};

			return bySet ? markFunction(superMatcher) : superMatcher;
		}

		compile = Sizzle.compile = function (selector, match) {
			var i,
			    setMatchers = [],
			    elementMatchers = [],
			    cached = compilerCache[selector + " "];

			if (!cached) {
				if (!match) {
					match = tokenize(selector);
				}
				i = match.length;
				while (i--) {
					cached = matcherFromTokens(match[i]);
					if (cached[expando]) {
						setMatchers.push(cached);
					} else {
						elementMatchers.push(cached);
					}
				}

				cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));

				cached.selector = selector;
			}
			return cached;
		};

		select = Sizzle.select = function (selector, context, results, seed) {
			var i,
			    tokens,
			    token,
			    type,
			    find,
			    compiled = typeof selector === "function" && selector,
			    match = !seed && tokenize(selector = compiled.selector || selector);

			results = results || [];

			if (match.length === 1) {
				tokens = match[0] = match[0].slice(0);
				if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {

					context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];
					if (!context) {
						return results;
					} else if (compiled) {
						context = context.parentNode;
					}

					selector = selector.slice(tokens.shift().value.length);
				}

				i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;
				while (i--) {
					token = tokens[i];

					if (Expr.relative[type = token.type]) {
						break;
					}
					if (find = Expr.find[type]) {
						if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
							tokens.splice(i, 1);
							selector = seed.length && toSelector(tokens);
							if (!selector) {
								push.apply(results, seed);
								return results;
							}

							break;
						}
					}
				}
			}

			(compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
			return results;
		};

		support.sortStable = expando.split("").sort(sortOrder).join("") === expando;

		support.detectDuplicates = !!hasDuplicate;

		setDocument();

		support.sortDetached = assert(function (el) {
			return el.compareDocumentPosition(document.createElement("fieldset")) & 1;
		});

		if (!assert(function (el) {
			el.innerHTML = "<a href='#'></a>";
			return el.firstChild.getAttribute("href") === "#";
		})) {
			addHandle("type|href|height|width", function (elem, name, isXML) {
				if (!isXML) {
					return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
				}
			});
		}

		if (!support.attributes || !assert(function (el) {
			el.innerHTML = "<input/>";
			el.firstChild.setAttribute("value", "");
			return el.firstChild.getAttribute("value") === "";
		})) {
			addHandle("value", function (elem, name, isXML) {
				if (!isXML && elem.nodeName.toLowerCase() === "input") {
					return elem.defaultValue;
				}
			});
		}

		if (!assert(function (el) {
			return el.getAttribute("disabled") == null;
		})) {
			addHandle(booleans, function (elem, name, isXML) {
				var val;
				if (!isXML) {
					return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
				}
			});
		}

		return Sizzle;
	}(window);

	jQuery.find = Sizzle;
	jQuery.expr = Sizzle.selectors;

	jQuery.expr[":"] = jQuery.expr.pseudos;
	jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
	jQuery.text = Sizzle.getText;
	jQuery.isXMLDoc = Sizzle.isXML;
	jQuery.contains = Sizzle.contains;
	jQuery.escapeSelector = Sizzle.escape;

	var dir = function dir(elem, _dir, until) {
		var matched = [],
		    truncate = until !== undefined;

		while ((elem = elem[_dir]) && elem.nodeType !== 9) {
			if (elem.nodeType === 1) {
				if (truncate && jQuery(elem).is(until)) {
					break;
				}
				matched.push(elem);
			}
		}
		return matched;
	};

	var _siblings = function _siblings(n, elem) {
		var matched = [];

		for (; n; n = n.nextSibling) {
			if (n.nodeType === 1 && n !== elem) {
				matched.push(n);
			}
		}

		return matched;
	};

	var rneedsContext = jQuery.expr.match.needsContext;

	function nodeName(elem, name) {

		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	};
	var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

	function winnow(elements, qualifier, not) {
		if (isFunction(qualifier)) {
			return jQuery.grep(elements, function (elem, i) {
				return !!qualifier.call(elem, i, elem) !== not;
			});
		}

		if (qualifier.nodeType) {
			return jQuery.grep(elements, function (elem) {
				return elem === qualifier !== not;
			});
		}

		if (typeof qualifier !== "string") {
			return jQuery.grep(elements, function (elem) {
				return indexOf.call(qualifier, elem) > -1 !== not;
			});
		}

		return jQuery.filter(qualifier, elements, not);
	}

	jQuery.filter = function (expr, elems, not) {
		var elem = elems[0];

		if (not) {
			expr = ":not(" + expr + ")";
		}

		if (elems.length === 1 && elem.nodeType === 1) {
			return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];
		}

		return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {
			return elem.nodeType === 1;
		}));
	};

	jQuery.fn.extend({
		find: function find(selector) {
			var i,
			    ret,
			    len = this.length,
			    self = this;

			if (typeof selector !== "string") {
				return this.pushStack(jQuery(selector).filter(function () {
					for (i = 0; i < len; i++) {
						if (jQuery.contains(self[i], this)) {
							return true;
						}
					}
				}));
			}

			ret = this.pushStack([]);

			for (i = 0; i < len; i++) {
				jQuery.find(selector, self[i], ret);
			}

			return len > 1 ? jQuery.uniqueSort(ret) : ret;
		},
		filter: function filter(selector) {
			return this.pushStack(winnow(this, selector || [], false));
		},
		not: function not(selector) {
			return this.pushStack(winnow(this, selector || [], true));
		},
		is: function is(selector) {
			return !!winnow(this, typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
		}
	});

	var rootjQuery,
	    rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
	    init = jQuery.fn.init = function (selector, context, root) {
		var match, elem;

		if (!selector) {
			return this;
		}

		root = root || rootjQuery;

		if (typeof selector === "string") {
			if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
				match = [null, selector, null];
			} else {
				match = rquickExpr.exec(selector);
			}

			if (match && (match[1] || !context)) {
				if (match[1]) {
					context = context instanceof jQuery ? context[0] : context;

					jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));

					if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
						for (match in context) {
							if (isFunction(this[match])) {
								this[match](context[match]);
							} else {
								this.attr(match, context[match]);
							}
						}
					}

					return this;
				} else {
					elem = document.getElementById(match[2]);

					if (elem) {
						this[0] = elem;
						this.length = 1;
					}
					return this;
				}
			} else if (!context || context.jquery) {
				return (context || root).find(selector);
			} else {
				return this.constructor(context).find(selector);
			}
		} else if (selector.nodeType) {
			this[0] = selector;
			this.length = 1;
			return this;
		} else if (isFunction(selector)) {
			return root.ready !== undefined ? root.ready(selector) : selector(jQuery);
		}

		return jQuery.makeArray(selector, this);
	};

	init.prototype = jQuery.fn;

	rootjQuery = jQuery(document);

	var rparentsprev = /^(?:parents|prev(?:Until|All))/,
	    guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

	jQuery.fn.extend({
		has: function has(target) {
			var targets = jQuery(target, this),
			    l = targets.length;

			return this.filter(function () {
				var i = 0;
				for (; i < l; i++) {
					if (jQuery.contains(this, targets[i])) {
						return true;
					}
				}
			});
		},

		closest: function closest(selectors, context) {
			var cur,
			    i = 0,
			    l = this.length,
			    matched = [],
			    targets = typeof selectors !== "string" && jQuery(selectors);

			if (!rneedsContext.test(selectors)) {
				for (; i < l; i++) {
					for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
						if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {

							matched.push(cur);
							break;
						}
					}
				}
			}

			return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
		},

		index: function index(elem) {
			if (!elem) {
				return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
			}

			if (typeof elem === "string") {
				return indexOf.call(jQuery(elem), this[0]);
			}

			return indexOf.call(this, elem.jquery ? elem[0] : elem);
		},

		add: function add(selector, context) {
			return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
		},

		addBack: function addBack(selector) {
			return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
		}
	});

	function sibling(cur, dir) {
		while ((cur = cur[dir]) && cur.nodeType !== 1) {}
		return cur;
	}

	jQuery.each({
		parent: function parent(elem) {
			var parent = elem.parentNode;
			return parent && parent.nodeType !== 11 ? parent : null;
		},
		parents: function parents(elem) {
			return dir(elem, "parentNode");
		},
		parentsUntil: function parentsUntil(elem, i, until) {
			return dir(elem, "parentNode", until);
		},
		next: function next(elem) {
			return sibling(elem, "nextSibling");
		},
		prev: function prev(elem) {
			return sibling(elem, "previousSibling");
		},
		nextAll: function nextAll(elem) {
			return dir(elem, "nextSibling");
		},
		prevAll: function prevAll(elem) {
			return dir(elem, "previousSibling");
		},
		nextUntil: function nextUntil(elem, i, until) {
			return dir(elem, "nextSibling", until);
		},
		prevUntil: function prevUntil(elem, i, until) {
			return dir(elem, "previousSibling", until);
		},
		siblings: function siblings(elem) {
			return _siblings((elem.parentNode || {}).firstChild, elem);
		},
		children: function children(elem) {
			return _siblings(elem.firstChild);
		},
		contents: function contents(elem) {
			if (nodeName(elem, "iframe")) {
				return elem.contentDocument;
			}

			if (nodeName(elem, "template")) {
				elem = elem.content || elem;
			}

			return jQuery.merge([], elem.childNodes);
		}
	}, function (name, fn) {
		jQuery.fn[name] = function (until, selector) {
			var matched = jQuery.map(this, fn, until);

			if (name.slice(-5) !== "Until") {
				selector = until;
			}

			if (selector && typeof selector === "string") {
				matched = jQuery.filter(selector, matched);
			}

			if (this.length > 1) {
				if (!guaranteedUnique[name]) {
					jQuery.uniqueSort(matched);
				}

				if (rparentsprev.test(name)) {
					matched.reverse();
				}
			}

			return this.pushStack(matched);
		};
	});
	var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;

	function createOptions(options) {
		var object = {};
		jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {
			object[flag] = true;
		});
		return object;
	}

	jQuery.Callbacks = function (options) {
		options = typeof options === "string" ? createOptions(options) : jQuery.extend({}, options);

		var firing,
		    memory,
		    _fired,
		    _locked,
		    list = [],
		    queue = [],
		    firingIndex = -1,
		    fire = function fire() {
			_locked = _locked || options.once;

			_fired = firing = true;
			for (; queue.length; firingIndex = -1) {
				memory = queue.shift();
				while (++firingIndex < list.length) {
					if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			if (!options.memory) {
				memory = false;
			}

			firing = false;

			if (_locked) {
				if (memory) {
					list = [];
				} else {
					list = "";
				}
			}
		},
		    self = {
			add: function add() {
				if (list) {
					if (memory && !firing) {
						firingIndex = list.length - 1;
						queue.push(memory);
					}

					(function add(args) {
						jQuery.each(args, function (_, arg) {
							if (isFunction(arg)) {
								if (!options.unique || !self.has(arg)) {
									list.push(arg);
								}
							} else if (arg && arg.length && toType(arg) !== "string") {
								add(arg);
							}
						});
					})(arguments);

					if (memory && !firing) {
						fire();
					}
				}
				return this;
			},

			remove: function remove() {
				jQuery.each(arguments, function (_, arg) {
					var index;
					while ((index = jQuery.inArray(arg, list, index)) > -1) {
						list.splice(index, 1);

						if (index <= firingIndex) {
							firingIndex--;
						}
					}
				});
				return this;
			},

			has: function has(fn) {
				return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
			},

			empty: function empty() {
				if (list) {
					list = [];
				}
				return this;
			},

			disable: function disable() {
				_locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function disabled() {
				return !list;
			},

			lock: function lock() {
				_locked = queue = [];
				if (!memory && !firing) {
					list = memory = "";
				}
				return this;
			},
			locked: function locked() {
				return !!_locked;
			},

			fireWith: function fireWith(context, args) {
				if (!_locked) {
					args = args || [];
					args = [context, args.slice ? args.slice() : args];
					queue.push(args);
					if (!firing) {
						fire();
					}
				}
				return this;
			},

			fire: function fire() {
				self.fireWith(this, arguments);
				return this;
			},

			fired: function fired() {
				return !!_fired;
			}
		};

		return self;
	};

	function Identity(v) {
		return v;
	}
	function Thrower(ex) {
		throw ex;
	}

	function adoptValue(value, resolve, reject, noValue) {
		var method;

		try {
			if (value && isFunction(method = value.promise)) {
				method.call(value).done(resolve).fail(reject);
			} else if (value && isFunction(method = value.then)) {
				method.call(value, resolve, reject);
			} else {
				resolve.apply(undefined, [value].slice(noValue));
			}
		} catch (value) {
			reject.apply(undefined, [value]);
		}
	}

	jQuery.extend({

		Deferred: function Deferred(func) {
			var tuples = [["notify", "progress", jQuery.Callbacks("memory"), jQuery.Callbacks("memory"), 2], ["resolve", "done", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 1, "rejected"]],
			    _state = "pending",
			    _promise = {
				state: function state() {
					return _state;
				},
				always: function always() {
					deferred.done(arguments).fail(arguments);
					return this;
				},
				"catch": function _catch(fn) {
					return _promise.then(null, fn);
				},

				pipe: function pipe() {
					var fns = arguments;

					return jQuery.Deferred(function (newDefer) {
						jQuery.each(tuples, function (i, tuple) {
							var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];

							deferred[tuple[1]](function () {
								var returned = fn && fn.apply(this, arguments);
								if (returned && isFunction(returned.promise)) {
									returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
								} else {
									newDefer[tuple[0] + "With"](this, fn ? [returned] : arguments);
								}
							});
						});
						fns = null;
					}).promise();
				},
				then: function then(onFulfilled, onRejected, onProgress) {
					var maxDepth = 0;
					function resolve(depth, deferred, handler, special) {
						return function () {
							var that = this,
							    args = arguments,
							    mightThrow = function mightThrow() {
								var returned, then;

								if (depth < maxDepth) {
									return;
								}

								returned = handler.apply(that, args);

								if (returned === deferred.promise()) {
									throw new TypeError("Thenable self-resolution");
								}

								then = returned && ((typeof returned === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(returned)) === "object" || typeof returned === "function") && returned.then;

								if (isFunction(then)) {
									if (special) {
										then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));
									} else {
										maxDepth++;

										then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));
									}
								} else {
									if (handler !== Identity) {
										that = undefined;
										args = [returned];
									}

									(special || deferred.resolveWith)(that, args);
								}
							},
							    process = special ? mightThrow : function () {
								try {
									mightThrow();
								} catch (e) {

									if (jQuery.Deferred.exceptionHook) {
										jQuery.Deferred.exceptionHook(e, process.stackTrace);
									}

									if (depth + 1 >= maxDepth) {
										if (handler !== Thrower) {
											that = undefined;
											args = [e];
										}

										deferred.rejectWith(that, args);
									}
								}
							};

							if (depth) {
								process();
							} else {
								if (jQuery.Deferred.getStackHook) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout(process);
							}
						};
					}

					return jQuery.Deferred(function (newDefer) {
						tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));

						tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity));

						tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));
					}).promise();
				},

				promise: function promise(obj) {
					return obj != null ? jQuery.extend(obj, _promise) : _promise;
				}
			},
			    deferred = {};

			jQuery.each(tuples, function (i, tuple) {
				var list = tuple[2],
				    stateString = tuple[5];

				_promise[tuple[1]] = list.add;

				if (stateString) {
					list.add(function () {
						_state = stateString;
					}, tuples[3 - i][2].disable, tuples[3 - i][3].disable, tuples[0][2].lock, tuples[0][3].lock);
				}

				list.add(tuple[3].fire);

				deferred[tuple[0]] = function () {
					deferred[tuple[0] + "With"](this === deferred ? undefined : this, arguments);
					return this;
				};

				deferred[tuple[0] + "With"] = list.fireWith;
			});

			_promise.promise(deferred);

			if (func) {
				func.call(deferred, deferred);
			}

			return deferred;
		},

		when: function when(singleValue) {
			var remaining = arguments.length,
			    i = remaining,
			    resolveContexts = Array(i),
			    resolveValues = _slice.call(arguments),
			    master = jQuery.Deferred(),
			    updateFunc = function updateFunc(i) {
				return function (value) {
					resolveContexts[i] = this;
					resolveValues[i] = arguments.length > 1 ? _slice.call(arguments) : value;
					if (! --remaining) {
						master.resolveWith(resolveContexts, resolveValues);
					}
				};
			};

			if (remaining <= 1) {
				adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining);

				if (master.state() === "pending" || isFunction(resolveValues[i] && resolveValues[i].then)) {

					return master.then();
				}
			}

			while (i--) {
				adoptValue(resolveValues[i], updateFunc(i), master.reject);
			}

			return master.promise();
		}
	});

	var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

	jQuery.Deferred.exceptionHook = function (error, stack) {
		if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {
			window.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack);
		}
	};

	jQuery.readyException = function (error) {
		window.setTimeout(function () {
			throw error;
		});
	};

	var readyList = jQuery.Deferred();

	jQuery.fn.ready = function (fn) {

		readyList.then(fn).catch(function (error) {
			jQuery.readyException(error);
		});

		return this;
	};

	jQuery.extend({
		isReady: false,

		readyWait: 1,

		ready: function ready(wait) {
			if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
				return;
			}

			jQuery.isReady = true;

			if (wait !== true && --jQuery.readyWait > 0) {
				return;
			}

			readyList.resolveWith(document, [jQuery]);
		}
	});

	jQuery.ready.then = readyList.then;

	function completed() {
		document.removeEventListener("DOMContentLoaded", completed);
		window.removeEventListener("load", completed);
		jQuery.ready();
	}

	if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) {
		window.setTimeout(jQuery.ready);
	} else {
		document.addEventListener("DOMContentLoaded", completed);

		window.addEventListener("load", completed);
	}

	var access = function access(elems, fn, key, value, chainable, emptyGet, raw) {
		var i = 0,
		    len = elems.length,
		    bulk = key == null;

		if (toType(key) === "object") {
			chainable = true;
			for (i in key) {
				access(elems, fn, i, key[i], true, emptyGet, raw);
			}
		} else if (value !== undefined) {
			chainable = true;

			if (!isFunction(value)) {
				raw = true;
			}

			if (bulk) {
				if (raw) {
					fn.call(elems, value);
					fn = null;
				} else {
					bulk = fn;
					fn = function fn(elem, key, value) {
						return bulk.call(jQuery(elem), value);
					};
				}
			}

			if (fn) {
				for (; i < len; i++) {
					fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
				}
			}
		}

		if (chainable) {
			return elems;
		}

		if (bulk) {
			return fn.call(elems);
		}

		return len ? fn(elems[0], key) : emptyGet;
	};

	var rmsPrefix = /^-ms-/,
	    rdashAlpha = /-([a-z])/g;

	function fcamelCase(all, letter) {
		return letter.toUpperCase();
	}

	function camelCase(string) {
		return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
	}
	var acceptData = function acceptData(owner) {
		return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
	};

	function Data() {
		this.expando = jQuery.expando + Data.uid++;
	}

	Data.uid = 1;

	Data.prototype = {

		cache: function cache(owner) {
			var value = owner[this.expando];

			if (!value) {
				value = {};

				if (acceptData(owner)) {
					if (owner.nodeType) {
						owner[this.expando] = value;
					} else {
						__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_define_property___default()(owner, this.expando, {
							value: value,
							configurable: true
						});
					}
				}
			}

			return value;
		},
		set: function set(owner, data, value) {
			var prop,
			    cache = this.cache(owner);

			if (typeof data === "string") {
				cache[camelCase(data)] = value;
			} else {
				for (prop in data) {
					cache[camelCase(prop)] = data[prop];
				}
			}
			return cache;
		},
		get: function get(owner, key) {
			return key === undefined ? this.cache(owner) : owner[this.expando] && owner[this.expando][camelCase(key)];
		},
		access: function access(owner, key, value) {
			if (key === undefined || key && typeof key === "string" && value === undefined) {

				return this.get(owner, key);
			}

			this.set(owner, key, value);

			return value !== undefined ? value : key;
		},
		remove: function remove(owner, key) {
			var i,
			    cache = owner[this.expando];

			if (cache === undefined) {
				return;
			}

			if (key !== undefined) {
				if (Array.isArray(key)) {
					key = key.map(camelCase);
				} else {
					key = camelCase(key);

					key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
				}

				i = key.length;

				while (i--) {
					delete cache[key[i]];
				}
			}

			if (key === undefined || jQuery.isEmptyObject(cache)) {
				if (owner.nodeType) {
					owner[this.expando] = undefined;
				} else {
					delete owner[this.expando];
				}
			}
		},
		hasData: function hasData(owner) {
			var cache = owner[this.expando];
			return cache !== undefined && !jQuery.isEmptyObject(cache);
		}
	};
	var dataPriv = new Data();

	var dataUser = new Data();

	var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	    rmultiDash = /[A-Z]/g;

	function getData(data) {
		if (data === "true") {
			return true;
		}

		if (data === "false") {
			return false;
		}

		if (data === "null") {
			return null;
		}

		if (data === +data + "") {
			return +data;
		}

		if (rbrace.test(data)) {
			return JSON.parse(data);
		}

		return data;
	}

	function dataAttr(elem, key, data) {
		var name;

		if (data === undefined && elem.nodeType === 1) {
			name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
			data = elem.getAttribute(name);

			if (typeof data === "string") {
				try {
					data = getData(data);
				} catch (e) {}

				dataUser.set(elem, key, data);
			} else {
				data = undefined;
			}
		}
		return data;
	}

	jQuery.extend({
		hasData: function hasData(elem) {
			return dataUser.hasData(elem) || dataPriv.hasData(elem);
		},

		data: function data(elem, name, _data) {
			return dataUser.access(elem, name, _data);
		},

		removeData: function removeData(elem, name) {
			dataUser.remove(elem, name);
		},

		_data: function _data(elem, name, data) {
			return dataPriv.access(elem, name, data);
		},

		_removeData: function _removeData(elem, name) {
			dataPriv.remove(elem, name);
		}
	});

	jQuery.fn.extend({
		data: function data(key, value) {
			var i,
			    name,
			    data,
			    elem = this[0],
			    attrs = elem && elem.attributes;

			if (key === undefined) {
				if (this.length) {
					data = dataUser.get(elem);

					if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
						i = attrs.length;
						while (i--) {
							if (attrs[i]) {
								name = attrs[i].name;
								if (name.indexOf("data-") === 0) {
									name = camelCase(name.slice(5));
									dataAttr(elem, name, data[name]);
								}
							}
						}
						dataPriv.set(elem, "hasDataAttrs", true);
					}
				}

				return data;
			}

			if ((typeof key === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(key)) === "object") {
				return this.each(function () {
					dataUser.set(this, key);
				});
			}

			return access(this, function (value) {
				var data;

				if (elem && value === undefined) {
					data = dataUser.get(elem, key);
					if (data !== undefined) {
						return data;
					}

					data = dataAttr(elem, key);
					if (data !== undefined) {
						return data;
					}

					return;
				}

				this.each(function () {
					dataUser.set(this, key, value);
				});
			}, null, value, arguments.length > 1, null, true);
		},

		removeData: function removeData(key) {
			return this.each(function () {
				dataUser.remove(this, key);
			});
		}
	});

	jQuery.extend({
		queue: function queue(elem, type, data) {
			var queue;

			if (elem) {
				type = (type || "fx") + "queue";
				queue = dataPriv.get(elem, type);

				if (data) {
					if (!queue || Array.isArray(data)) {
						queue = dataPriv.access(elem, type, jQuery.makeArray(data));
					} else {
						queue.push(data);
					}
				}
				return queue || [];
			}
		},

		dequeue: function dequeue(elem, type) {
			type = type || "fx";

			var queue = jQuery.queue(elem, type),
			    startLength = queue.length,
			    fn = queue.shift(),
			    hooks = jQuery._queueHooks(elem, type),
			    next = function next() {
				jQuery.dequeue(elem, type);
			};

			if (fn === "inprogress") {
				fn = queue.shift();
				startLength--;
			}

			if (fn) {
				if (type === "fx") {
					queue.unshift("inprogress");
				}

				delete hooks.stop;
				fn.call(elem, next, hooks);
			}

			if (!startLength && hooks) {
				hooks.empty.fire();
			}
		},

		_queueHooks: function _queueHooks(elem, type) {
			var key = type + "queueHooks";
			return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
				empty: jQuery.Callbacks("once memory").add(function () {
					dataPriv.remove(elem, [type + "queue", key]);
				})
			});
		}
	});

	jQuery.fn.extend({
		queue: function queue(type, data) {
			var setter = 2;

			if (typeof type !== "string") {
				data = type;
				type = "fx";
				setter--;
			}

			if (arguments.length < setter) {
				return jQuery.queue(this[0], type);
			}

			return data === undefined ? this : this.each(function () {
				var queue = jQuery.queue(this, type, data);

				jQuery._queueHooks(this, type);

				if (type === "fx" && queue[0] !== "inprogress") {
					jQuery.dequeue(this, type);
				}
			});
		},
		dequeue: function dequeue(type) {
			return this.each(function () {
				jQuery.dequeue(this, type);
			});
		},
		clearQueue: function clearQueue(type) {
			return this.queue(type || "fx", []);
		},

		promise: function promise(type, obj) {
			var tmp,
			    count = 1,
			    defer = jQuery.Deferred(),
			    elements = this,
			    i = this.length,
			    resolve = function resolve() {
				if (! --count) {
					defer.resolveWith(elements, [elements]);
				}
			};

			if (typeof type !== "string") {
				obj = type;
				type = undefined;
			}
			type = type || "fx";

			while (i--) {
				tmp = dataPriv.get(elements[i], type + "queueHooks");
				if (tmp && tmp.empty) {
					count++;
					tmp.empty.add(resolve);
				}
			}
			resolve();
			return defer.promise(obj);
		}
	});
	var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;

	var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");

	var cssExpand = ["Top", "Right", "Bottom", "Left"];

	var isHiddenWithinTree = function isHiddenWithinTree(elem, el) {
		elem = el || elem;

		return elem.style.display === "none" || elem.style.display === "" && jQuery.contains(elem.ownerDocument, elem) && jQuery.css(elem, "display") === "none";
	};

	var swap = function swap(elem, options, callback, args) {
		var ret,
		    name,
		    old = {};

		for (name in options) {
			old[name] = elem.style[name];
			elem.style[name] = options[name];
		}

		ret = callback.apply(elem, args || []);

		for (name in options) {
			elem.style[name] = old[name];
		}

		return ret;
	};

	function adjustCSS(elem, prop, valueParts, tween) {
		var adjusted,
		    scale,
		    maxIterations = 20,
		    currentValue = tween ? function () {
			return tween.cur();
		} : function () {
			return jQuery.css(elem, prop, "");
		},
		    initial = currentValue(),
		    unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
		    initialInUnit = (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));

		if (initialInUnit && initialInUnit[3] !== unit) {
			initial = initial / 2;

			unit = unit || initialInUnit[3];

			initialInUnit = +initial || 1;

			while (maxIterations--) {
				jQuery.style(elem, prop, initialInUnit + unit);
				if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {
					maxIterations = 0;
				}
				initialInUnit = initialInUnit / scale;
			}

			initialInUnit = initialInUnit * 2;
			jQuery.style(elem, prop, initialInUnit + unit);

			valueParts = valueParts || [];
		}

		if (valueParts) {
			initialInUnit = +initialInUnit || +initial || 0;

			adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
			if (tween) {
				tween.unit = unit;
				tween.start = initialInUnit;
				tween.end = adjusted;
			}
		}
		return adjusted;
	}

	var defaultDisplayMap = {};

	function getDefaultDisplay(elem) {
		var temp,
		    doc = elem.ownerDocument,
		    nodeName = elem.nodeName,
		    display = defaultDisplayMap[nodeName];

		if (display) {
			return display;
		}

		temp = doc.body.appendChild(doc.createElement(nodeName));
		display = jQuery.css(temp, "display");

		temp.parentNode.removeChild(temp);

		if (display === "none") {
			display = "block";
		}
		defaultDisplayMap[nodeName] = display;

		return display;
	}

	function showHide(elements, show) {
		var display,
		    elem,
		    values = [],
		    index = 0,
		    length = elements.length;

		for (; index < length; index++) {
			elem = elements[index];
			if (!elem.style) {
				continue;
			}

			display = elem.style.display;
			if (show) {
				if (display === "none") {
					values[index] = dataPriv.get(elem, "display") || null;
					if (!values[index]) {
						elem.style.display = "";
					}
				}
				if (elem.style.display === "" && isHiddenWithinTree(elem)) {
					values[index] = getDefaultDisplay(elem);
				}
			} else {
				if (display !== "none") {
					values[index] = "none";

					dataPriv.set(elem, "display", display);
				}
			}
		}

		for (index = 0; index < length; index++) {
			if (values[index] != null) {
				elements[index].style.display = values[index];
			}
		}

		return elements;
	}

	jQuery.fn.extend({
		show: function show() {
			return showHide(this, true);
		},
		hide: function hide() {
			return showHide(this);
		},
		toggle: function toggle(state) {
			if (typeof state === "boolean") {
				return state ? this.show() : this.hide();
			}

			return this.each(function () {
				if (isHiddenWithinTree(this)) {
					jQuery(this).show();
				} else {
					jQuery(this).hide();
				}
			});
		}
	});
	var rcheckableType = /^(?:checkbox|radio)$/i;

	var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i;

	var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;

	var wrapMap = {
		option: [1, "<select multiple='multiple'>", "</select>"],

		thead: [1, "<table>", "</table>"],
		col: [2, "<table><colgroup>", "</colgroup></table>"],
		tr: [2, "<table><tbody>", "</tbody></table>"],
		td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],

		_default: [0, "", ""]
	};

	wrapMap.optgroup = wrapMap.option;

	wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
	wrapMap.th = wrapMap.td;

	function getAll(context, tag) {
		var ret;

		if (typeof context.getElementsByTagName !== "undefined") {
			ret = context.getElementsByTagName(tag || "*");
		} else if (typeof context.querySelectorAll !== "undefined") {
			ret = context.querySelectorAll(tag || "*");
		} else {
			ret = [];
		}

		if (tag === undefined || tag && nodeName(context, tag)) {
			return jQuery.merge([context], ret);
		}

		return ret;
	}

	function setGlobalEval(elems, refElements) {
		var i = 0,
		    l = elems.length;

		for (; i < l; i++) {
			dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"));
		}
	}

	var rhtml = /<|&#?\w+;/;

	function buildFragment(elems, context, scripts, selection, ignored) {
		var elem,
		    tmp,
		    tag,
		    wrap,
		    contains,
		    j,
		    fragment = context.createDocumentFragment(),
		    nodes = [],
		    i = 0,
		    l = elems.length;

		for (; i < l; i++) {
			elem = elems[i];

			if (elem || elem === 0) {
				if (toType(elem) === "object") {
					jQuery.merge(nodes, elem.nodeType ? [elem] : elem);
				} else if (!rhtml.test(elem)) {
					nodes.push(context.createTextNode(elem));
				} else {
					tmp = tmp || fragment.appendChild(context.createElement("div"));

					tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
					wrap = wrapMap[tag] || wrapMap._default;
					tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];

					j = wrap[0];
					while (j--) {
						tmp = tmp.lastChild;
					}

					jQuery.merge(nodes, tmp.childNodes);

					tmp = fragment.firstChild;

					tmp.textContent = "";
				}
			}
		}

		fragment.textContent = "";

		i = 0;
		while (elem = nodes[i++]) {
			if (selection && jQuery.inArray(elem, selection) > -1) {
				if (ignored) {
					ignored.push(elem);
				}
				continue;
			}

			contains = jQuery.contains(elem.ownerDocument, elem);

			tmp = getAll(fragment.appendChild(elem), "script");

			if (contains) {
				setGlobalEval(tmp);
			}

			if (scripts) {
				j = 0;
				while (elem = tmp[j++]) {
					if (rscriptType.test(elem.type || "")) {
						scripts.push(elem);
					}
				}
			}
		}

		return fragment;
	}

	(function () {
		var fragment = document.createDocumentFragment(),
		    div = fragment.appendChild(document.createElement("div")),
		    input = document.createElement("input");

		input.setAttribute("type", "radio");
		input.setAttribute("checked", "checked");
		input.setAttribute("name", "t");

		div.appendChild(input);

		support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;

		div.innerHTML = "<textarea>x</textarea>";
		support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
	})();
	var documentElement = document.documentElement;

	var rkeyEvent = /^key/,
	    rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	    rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

	function returnTrue() {
		return true;
	}

	function returnFalse() {
		return false;
	}

	function safeActiveElement() {
		try {
			return document.activeElement;
		} catch (err) {}
	}

	function _on(elem, types, selector, data, fn, one) {
		var origFn, type;

		if ((typeof types === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(types)) === "object") {
			if (typeof selector !== "string") {
				data = data || selector;
				selector = undefined;
			}
			for (type in types) {
				_on(elem, type, selector, data, types[type], one);
			}
			return elem;
		}

		if (data == null && fn == null) {
			fn = selector;
			data = selector = undefined;
		} else if (fn == null) {
			if (typeof selector === "string") {
				fn = data;
				data = undefined;
			} else {
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if (fn === false) {
			fn = returnFalse;
		} else if (!fn) {
			return elem;
		}

		if (one === 1) {
			origFn = fn;
			fn = function fn(event) {
				jQuery().off(event);
				return origFn.apply(this, arguments);
			};

			fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
		}
		return elem.each(function () {
			jQuery.event.add(this, types, fn, data, selector);
		});
	}

	jQuery.event = {

		global: {},

		add: function add(elem, types, handler, data, selector) {

			var handleObjIn,
			    eventHandle,
			    tmp,
			    events,
			    t,
			    handleObj,
			    special,
			    handlers,
			    type,
			    namespaces,
			    origType,
			    elemData = dataPriv.get(elem);

			if (!elemData) {
				return;
			}

			if (handler.handler) {
				handleObjIn = handler;
				handler = handleObjIn.handler;
				selector = handleObjIn.selector;
			}

			if (selector) {
				jQuery.find.matchesSelector(documentElement, selector);
			}

			if (!handler.guid) {
				handler.guid = jQuery.guid++;
			}

			if (!(events = elemData.events)) {
				events = elemData.events = {};
			}
			if (!(eventHandle = elemData.handle)) {
				eventHandle = elemData.handle = function (e) {
					return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
				};
			}

			types = (types || "").match(rnothtmlwhite) || [""];
			t = types.length;
			while (t--) {
				tmp = rtypenamespace.exec(types[t]) || [];
				type = origType = tmp[1];
				namespaces = (tmp[2] || "").split(".").sort();

				if (!type) {
					continue;
				}

				special = jQuery.event.special[type] || {};

				type = (selector ? special.delegateType : special.bindType) || type;

				special = jQuery.event.special[type] || {};

				handleObj = jQuery.extend({
					type: type,
					origType: origType,
					data: data,
					handler: handler,
					guid: handler.guid,
					selector: selector,
					needsContext: selector && jQuery.expr.match.needsContext.test(selector),
					namespace: namespaces.join(".")
				}, handleObjIn);

				if (!(handlers = events[type])) {
					handlers = events[type] = [];
					handlers.delegateCount = 0;

					if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {

						if (elem.addEventListener) {
							elem.addEventListener(type, eventHandle);
						}
					}
				}

				if (special.add) {
					special.add.call(elem, handleObj);

					if (!handleObj.handler.guid) {
						handleObj.handler.guid = handler.guid;
					}
				}

				if (selector) {
					handlers.splice(handlers.delegateCount++, 0, handleObj);
				} else {
					handlers.push(handleObj);
				}

				jQuery.event.global[type] = true;
			}
		},

		remove: function remove(elem, types, handler, selector, mappedTypes) {

			var j,
			    origCount,
			    tmp,
			    events,
			    t,
			    handleObj,
			    special,
			    handlers,
			    type,
			    namespaces,
			    origType,
			    elemData = dataPriv.hasData(elem) && dataPriv.get(elem);

			if (!elemData || !(events = elemData.events)) {
				return;
			}

			types = (types || "").match(rnothtmlwhite) || [""];
			t = types.length;
			while (t--) {
				tmp = rtypenamespace.exec(types[t]) || [];
				type = origType = tmp[1];
				namespaces = (tmp[2] || "").split(".").sort();

				if (!type) {
					for (type in events) {
						jQuery.event.remove(elem, type + types[t], handler, selector, true);
					}
					continue;
				}

				special = jQuery.event.special[type] || {};
				type = (selector ? special.delegateType : special.bindType) || type;
				handlers = events[type] || [];
				tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");

				origCount = j = handlers.length;
				while (j--) {
					handleObj = handlers[j];

					if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
						handlers.splice(j, 1);

						if (handleObj.selector) {
							handlers.delegateCount--;
						}
						if (special.remove) {
							special.remove.call(elem, handleObj);
						}
					}
				}

				if (origCount && !handlers.length) {
					if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {

						jQuery.removeEvent(elem, type, elemData.handle);
					}

					delete events[type];
				}
			}

			if (jQuery.isEmptyObject(events)) {
				dataPriv.remove(elem, "handle events");
			}
		},

		dispatch: function dispatch(nativeEvent) {
			var event = jQuery.event.fix(nativeEvent);

			var i,
			    j,
			    ret,
			    matched,
			    handleObj,
			    handlerQueue,
			    args = new Array(arguments.length),
			    handlers = (dataPriv.get(this, "events") || {})[event.type] || [],
			    special = jQuery.event.special[event.type] || {};

			args[0] = event;

			for (i = 1; i < arguments.length; i++) {
				args[i] = arguments[i];
			}

			event.delegateTarget = this;

			if (special.preDispatch && special.preDispatch.call(this, event) === false) {
				return;
			}

			handlerQueue = jQuery.event.handlers.call(this, event, handlers);

			i = 0;
			while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
				event.currentTarget = matched.elem;

				j = 0;
				while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
					if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {

						event.handleObj = handleObj;
						event.data = handleObj.data;

						ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);

						if (ret !== undefined) {
							if ((event.result = ret) === false) {
								event.preventDefault();
								event.stopPropagation();
							}
						}
					}
				}
			}

			if (special.postDispatch) {
				special.postDispatch.call(this, event);
			}

			return event.result;
		},

		handlers: function handlers(event, _handlers) {
			var i,
			    handleObj,
			    sel,
			    matchedHandlers,
			    matchedSelectors,
			    handlerQueue = [],
			    delegateCount = _handlers.delegateCount,
			    cur = event.target;

			if (delegateCount && cur.nodeType && !(event.type === "click" && event.button >= 1)) {

				for (; cur !== this; cur = cur.parentNode || this) {
					if (cur.nodeType === 1 && !(event.type === "click" && cur.disabled === true)) {
						matchedHandlers = [];
						matchedSelectors = {};
						for (i = 0; i < delegateCount; i++) {
							handleObj = _handlers[i];

							sel = handleObj.selector + " ";

							if (matchedSelectors[sel] === undefined) {
								matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;
							}
							if (matchedSelectors[sel]) {
								matchedHandlers.push(handleObj);
							}
						}
						if (matchedHandlers.length) {
							handlerQueue.push({ elem: cur, handlers: matchedHandlers });
						}
					}
				}
			}

			cur = this;
			if (delegateCount < _handlers.length) {
				handlerQueue.push({ elem: cur, handlers: _handlers.slice(delegateCount) });
			}

			return handlerQueue;
		},

		addProp: function addProp(name, hook) {
			__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_define_property___default()(jQuery.Event.prototype, name, {
				enumerable: true,
				configurable: true,

				get: isFunction(hook) ? function () {
					if (this.originalEvent) {
						return hook(this.originalEvent);
					}
				} : function () {
					if (this.originalEvent) {
						return this.originalEvent[name];
					}
				},

				set: function set(value) {
					__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_define_property___default()(this, name, {
						enumerable: true,
						configurable: true,
						writable: true,
						value: value
					});
				}
			});
		},

		fix: function fix(originalEvent) {
			return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);
		},

		special: {
			load: {
				noBubble: true
			},
			focus: {
				trigger: function trigger() {
					if (this !== safeActiveElement() && this.focus) {
						this.focus();
						return false;
					}
				},
				delegateType: "focusin"
			},
			blur: {
				trigger: function trigger() {
					if (this === safeActiveElement() && this.blur) {
						this.blur();
						return false;
					}
				},
				delegateType: "focusout"
			},
			click: {
				trigger: function trigger() {
					if (this.type === "checkbox" && this.click && nodeName(this, "input")) {
						this.click();
						return false;
					}
				},

				_default: function _default(event) {
					return nodeName(event.target, "a");
				}
			},

			beforeunload: {
				postDispatch: function postDispatch(event) {
					if (event.result !== undefined && event.originalEvent) {
						event.originalEvent.returnValue = event.result;
					}
				}
			}
		}
	};

	jQuery.removeEvent = function (elem, type, handle) {
		if (elem.removeEventListener) {
			elem.removeEventListener(type, handle);
		}
	};

	jQuery.Event = function (src, props) {
		if (!(this instanceof jQuery.Event)) {
			return new jQuery.Event(src, props);
		}

		if (src && src.type) {
			this.originalEvent = src;
			this.type = src.type;

			this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === false ? returnTrue : returnFalse;

			this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;

			this.currentTarget = src.currentTarget;
			this.relatedTarget = src.relatedTarget;
		} else {
			this.type = src;
		}

		if (props) {
			jQuery.extend(this, props);
		}

		this.timeStamp = src && src.timeStamp || Date.now();

		this[jQuery.expando] = true;
	};

	jQuery.Event.prototype = {
		constructor: jQuery.Event,
		isDefaultPrevented: returnFalse,
		isPropagationStopped: returnFalse,
		isImmediatePropagationStopped: returnFalse,
		isSimulated: false,

		preventDefault: function preventDefault() {
			var e = this.originalEvent;

			this.isDefaultPrevented = returnTrue;

			if (e && !this.isSimulated) {
				e.preventDefault();
			}
		},
		stopPropagation: function stopPropagation() {
			var e = this.originalEvent;

			this.isPropagationStopped = returnTrue;

			if (e && !this.isSimulated) {
				e.stopPropagation();
			}
		},
		stopImmediatePropagation: function stopImmediatePropagation() {
			var e = this.originalEvent;

			this.isImmediatePropagationStopped = returnTrue;

			if (e && !this.isSimulated) {
				e.stopImmediatePropagation();
			}

			this.stopPropagation();
		}
	};

	jQuery.each({
		altKey: true,
		bubbles: true,
		cancelable: true,
		changedTouches: true,
		ctrlKey: true,
		detail: true,
		eventPhase: true,
		metaKey: true,
		pageX: true,
		pageY: true,
		shiftKey: true,
		view: true,
		"char": true,
		charCode: true,
		key: true,
		keyCode: true,
		button: true,
		buttons: true,
		clientX: true,
		clientY: true,
		offsetX: true,
		offsetY: true,
		pointerId: true,
		pointerType: true,
		screenX: true,
		screenY: true,
		targetTouches: true,
		toElement: true,
		touches: true,

		which: function which(event) {
			var button = event.button;

			if (event.which == null && rkeyEvent.test(event.type)) {
				return event.charCode != null ? event.charCode : event.keyCode;
			}

			if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {
				if (button & 1) {
					return 1;
				}

				if (button & 2) {
					return 3;
				}

				if (button & 4) {
					return 2;
				}

				return 0;
			}

			return event.which;
		}
	}, jQuery.event.addProp);

	jQuery.each({
		mouseenter: "mouseover",
		mouseleave: "mouseout",
		pointerenter: "pointerover",
		pointerleave: "pointerout"
	}, function (orig, fix) {
		jQuery.event.special[orig] = {
			delegateType: fix,
			bindType: fix,

			handle: function handle(event) {
				var ret,
				    target = this,
				    related = event.relatedTarget,
				    handleObj = event.handleObj;

				if (!related || related !== target && !jQuery.contains(target, related)) {
					event.type = handleObj.origType;
					ret = handleObj.handler.apply(this, arguments);
					event.type = fix;
				}
				return ret;
			}
		};
	});

	jQuery.fn.extend({

		on: function on(types, selector, data, fn) {
			return _on(this, types, selector, data, fn);
		},
		one: function one(types, selector, data, fn) {
			return _on(this, types, selector, data, fn, 1);
		},
		off: function off(types, selector, fn) {
			var handleObj, type;
			if (types && types.preventDefault && types.handleObj) {
				handleObj = types.handleObj;
				jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
				return this;
			}
			if ((typeof types === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(types)) === "object") {
				for (type in types) {
					this.off(type, selector, types[type]);
				}
				return this;
			}
			if (selector === false || typeof selector === "function") {
				fn = selector;
				selector = undefined;
			}
			if (fn === false) {
				fn = returnFalse;
			}
			return this.each(function () {
				jQuery.event.remove(this, types, fn, selector);
			});
		}
	});

	var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
	    rnoInnerhtml = /<script|<style|<link/i,
	    rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	    rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

	function manipulationTarget(elem, content) {
		if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {

			return jQuery(elem).children("tbody")[0] || elem;
		}

		return elem;
	}

	function disableScript(elem) {
		elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
		return elem;
	}
	function restoreScript(elem) {
		if ((elem.type || "").slice(0, 5) === "true/") {
			elem.type = elem.type.slice(5);
		} else {
			elem.removeAttribute("type");
		}

		return elem;
	}

	function cloneCopyEvent(src, dest) {
		var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

		if (dest.nodeType !== 1) {
			return;
		}

		if (dataPriv.hasData(src)) {
			pdataOld = dataPriv.access(src);
			pdataCur = dataPriv.set(dest, pdataOld);
			events = pdataOld.events;

			if (events) {
				delete pdataCur.handle;
				pdataCur.events = {};

				for (type in events) {
					for (i = 0, l = events[type].length; i < l; i++) {
						jQuery.event.add(dest, type, events[type][i]);
					}
				}
			}
		}

		if (dataUser.hasData(src)) {
			udataOld = dataUser.access(src);
			udataCur = jQuery.extend({}, udataOld);

			dataUser.set(dest, udataCur);
		}
	}

	function fixInput(src, dest) {
		var nodeName = dest.nodeName.toLowerCase();

		if (nodeName === "input" && rcheckableType.test(src.type)) {
			dest.checked = src.checked;
		} else if (nodeName === "input" || nodeName === "textarea") {
			dest.defaultValue = src.defaultValue;
		}
	}

	function domManip(collection, args, callback, ignored) {
		args = concat.apply([], args);

		var fragment,
		    first,
		    scripts,
		    hasScripts,
		    node,
		    doc,
		    i = 0,
		    l = collection.length,
		    iNoClone = l - 1,
		    value = args[0],
		    valueIsFunction = isFunction(value);

		if (valueIsFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) {
			return collection.each(function (index) {
				var self = collection.eq(index);
				if (valueIsFunction) {
					args[0] = value.call(this, index, self.html());
				}
				domManip(self, args, callback, ignored);
			});
		}

		if (l) {
			fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
			first = fragment.firstChild;

			if (fragment.childNodes.length === 1) {
				fragment = first;
			}

			if (first || ignored) {
				scripts = jQuery.map(getAll(fragment, "script"), disableScript);
				hasScripts = scripts.length;

				for (; i < l; i++) {
					node = fragment;

					if (i !== iNoClone) {
						node = jQuery.clone(node, true, true);

						if (hasScripts) {
							jQuery.merge(scripts, getAll(node, "script"));
						}
					}

					callback.call(collection[i], node, i);
				}

				if (hasScripts) {
					doc = scripts[scripts.length - 1].ownerDocument;

					jQuery.map(scripts, restoreScript);

					for (i = 0; i < hasScripts; i++) {
						node = scripts[i];
						if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node)) {

							if (node.src && (node.type || "").toLowerCase() !== "module") {
								if (jQuery._evalUrl) {
									jQuery._evalUrl(node.src);
								}
							} else {
								DOMEval(node.textContent.replace(rcleanScript, ""), doc, node);
							}
						}
					}
				}
			}
		}

		return collection;
	}

	function _remove(elem, selector, keepData) {
		var node,
		    nodes = selector ? jQuery.filter(selector, elem) : elem,
		    i = 0;

		for (; (node = nodes[i]) != null; i++) {
			if (!keepData && node.nodeType === 1) {
				jQuery.cleanData(getAll(node));
			}

			if (node.parentNode) {
				if (keepData && jQuery.contains(node.ownerDocument, node)) {
					setGlobalEval(getAll(node, "script"));
				}
				node.parentNode.removeChild(node);
			}
		}

		return elem;
	}

	jQuery.extend({
		htmlPrefilter: function htmlPrefilter(html) {
			return html.replace(rxhtmlTag, "<$1></$2>");
		},

		clone: function clone(elem, dataAndEvents, deepDataAndEvents) {
			var i,
			    l,
			    srcElements,
			    destElements,
			    clone = elem.cloneNode(true),
			    inPage = jQuery.contains(elem.ownerDocument, elem);

			if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
				destElements = getAll(clone);
				srcElements = getAll(elem);

				for (i = 0, l = srcElements.length; i < l; i++) {
					fixInput(srcElements[i], destElements[i]);
				}
			}

			if (dataAndEvents) {
				if (deepDataAndEvents) {
					srcElements = srcElements || getAll(elem);
					destElements = destElements || getAll(clone);

					for (i = 0, l = srcElements.length; i < l; i++) {
						cloneCopyEvent(srcElements[i], destElements[i]);
					}
				} else {
					cloneCopyEvent(elem, clone);
				}
			}

			destElements = getAll(clone, "script");
			if (destElements.length > 0) {
				setGlobalEval(destElements, !inPage && getAll(elem, "script"));
			}

			return clone;
		},

		cleanData: function cleanData(elems) {
			var data,
			    elem,
			    type,
			    special = jQuery.event.special,
			    i = 0;

			for (; (elem = elems[i]) !== undefined; i++) {
				if (acceptData(elem)) {
					if (data = elem[dataPriv.expando]) {
						if (data.events) {
							for (type in data.events) {
								if (special[type]) {
									jQuery.event.remove(elem, type);
								} else {
									jQuery.removeEvent(elem, type, data.handle);
								}
							}
						}

						elem[dataPriv.expando] = undefined;
					}
					if (elem[dataUser.expando]) {
						elem[dataUser.expando] = undefined;
					}
				}
			}
		}
	});

	jQuery.fn.extend({
		detach: function detach(selector) {
			return _remove(this, selector, true);
		},

		remove: function remove(selector) {
			return _remove(this, selector);
		},

		text: function text(value) {
			return access(this, function (value) {
				return value === undefined ? jQuery.text(this) : this.empty().each(function () {
					if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
						this.textContent = value;
					}
				});
			}, null, value, arguments.length);
		},

		append: function append() {
			return domManip(this, arguments, function (elem) {
				if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
					var target = manipulationTarget(this, elem);
					target.appendChild(elem);
				}
			});
		},

		prepend: function prepend() {
			return domManip(this, arguments, function (elem) {
				if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
					var target = manipulationTarget(this, elem);
					target.insertBefore(elem, target.firstChild);
				}
			});
		},

		before: function before() {
			return domManip(this, arguments, function (elem) {
				if (this.parentNode) {
					this.parentNode.insertBefore(elem, this);
				}
			});
		},

		after: function after() {
			return domManip(this, arguments, function (elem) {
				if (this.parentNode) {
					this.parentNode.insertBefore(elem, this.nextSibling);
				}
			});
		},

		empty: function empty() {
			var elem,
			    i = 0;

			for (; (elem = this[i]) != null; i++) {
				if (elem.nodeType === 1) {
					jQuery.cleanData(getAll(elem, false));

					elem.textContent = "";
				}
			}

			return this;
		},

		clone: function clone(dataAndEvents, deepDataAndEvents) {
			dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
			deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

			return this.map(function () {
				return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
			});
		},

		html: function html(value) {
			return access(this, function (value) {
				var elem = this[0] || {},
				    i = 0,
				    l = this.length;

				if (value === undefined && elem.nodeType === 1) {
					return elem.innerHTML;
				}

				if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {

					value = jQuery.htmlPrefilter(value);

					try {
						for (; i < l; i++) {
							elem = this[i] || {};

							if (elem.nodeType === 1) {
								jQuery.cleanData(getAll(elem, false));
								elem.innerHTML = value;
							}
						}

						elem = 0;
					} catch (e) {}
				}

				if (elem) {
					this.empty().append(value);
				}
			}, null, value, arguments.length);
		},

		replaceWith: function replaceWith() {
			var ignored = [];

			return domManip(this, arguments, function (elem) {
				var parent = this.parentNode;

				if (jQuery.inArray(this, ignored) < 0) {
					jQuery.cleanData(getAll(this));
					if (parent) {
						parent.replaceChild(elem, this);
					}
				}
			}, ignored);
		}
	});

	jQuery.each({
		appendTo: "append",
		prependTo: "prepend",
		insertBefore: "before",
		insertAfter: "after",
		replaceAll: "replaceWith"
	}, function (name, original) {
		jQuery.fn[name] = function (selector) {
			var elems,
			    ret = [],
			    insert = jQuery(selector),
			    last = insert.length - 1,
			    i = 0;

			for (; i <= last; i++) {
				elems = i === last ? this : this.clone(true);
				jQuery(insert[i])[original](elems);

				push.apply(ret, elems.get());
			}

			return this.pushStack(ret);
		};
	});
	var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");

	var getStyles = function getStyles(elem) {
		var view = elem.ownerDocument.defaultView;

		if (!view || !view.opener) {
			view = window;
		}

		return view.getComputedStyle(elem);
	};

	var rboxStyle = new RegExp(cssExpand.join("|"), "i");

	(function () {
		function computeStyleTests() {
			if (!div) {
				return;
			}

			container.style.cssText = "position:absolute;left:-11111px;width:60px;" + "margin-top:1px;padding:0;border:0";
			div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;" + "margin:auto;border:1px;padding:1px;" + "width:60%;top:1%";
			documentElement.appendChild(container).appendChild(div);

			var divStyle = window.getComputedStyle(div);
			pixelPositionVal = divStyle.top !== "1%";

			reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;

			div.style.right = "60%";
			pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;

			boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;

			div.style.position = "absolute";
			scrollboxSizeVal = div.offsetWidth === 36 || "absolute";

			documentElement.removeChild(container);

			div = null;
		}

		function roundPixelMeasures(measure) {
			return Math.round(parseFloat(measure));
		}

		var pixelPositionVal,
		    boxSizingReliableVal,
		    scrollboxSizeVal,
		    pixelBoxStylesVal,
		    reliableMarginLeftVal,
		    container = document.createElement("div"),
		    div = document.createElement("div");

		if (!div.style) {
			return;
		}

		div.style.backgroundClip = "content-box";
		div.cloneNode(true).style.backgroundClip = "";
		support.clearCloneStyle = div.style.backgroundClip === "content-box";

		jQuery.extend(support, {
			boxSizingReliable: function boxSizingReliable() {
				computeStyleTests();
				return boxSizingReliableVal;
			},
			pixelBoxStyles: function pixelBoxStyles() {
				computeStyleTests();
				return pixelBoxStylesVal;
			},
			pixelPosition: function pixelPosition() {
				computeStyleTests();
				return pixelPositionVal;
			},
			reliableMarginLeft: function reliableMarginLeft() {
				computeStyleTests();
				return reliableMarginLeftVal;
			},
			scrollboxSize: function scrollboxSize() {
				computeStyleTests();
				return scrollboxSizeVal;
			}
		});
	})();

	function curCSS(elem, name, computed) {
		var width,
		    minWidth,
		    maxWidth,
		    ret,
		    style = elem.style;

		computed = computed || getStyles(elem);

		if (computed) {
			ret = computed.getPropertyValue(name) || computed[name];

			if (ret === "" && !jQuery.contains(elem.ownerDocument, elem)) {
				ret = jQuery.style(elem, name);
			}

			if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret !== undefined ? ret + "" : ret;
	}

	function addGetHookIf(conditionFn, hookFn) {
		return {
			get: function get() {
				if (conditionFn()) {
					delete this.get;
					return;
				}

				return (this.get = hookFn).apply(this, arguments);
			}
		};
	}

	var rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	    rcustomProp = /^--/,
	    cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	    cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},
	    cssPrefixes = ["Webkit", "Moz", "ms"],
	    emptyStyle = document.createElement("div").style;

	function vendorPropName(name) {
		if (name in emptyStyle) {
			return name;
		}

		var capName = name[0].toUpperCase() + name.slice(1),
		    i = cssPrefixes.length;

		while (i--) {
			name = cssPrefixes[i] + capName;
			if (name in emptyStyle) {
				return name;
			}
		}
	}

	function finalPropName(name) {
		var ret = jQuery.cssProps[name];
		if (!ret) {
			ret = jQuery.cssProps[name] = vendorPropName(name) || name;
		}
		return ret;
	}

	function setPositiveNumber(elem, value, subtract) {
		var matches = rcssNum.exec(value);
		return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
	}

	function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
		var i = dimension === "width" ? 1 : 0,
		    extra = 0,
		    delta = 0;

		if (box === (isBorderBox ? "border" : "content")) {
			return 0;
		}

		for (; i < 4; i += 2) {
			if (box === "margin") {
				delta += jQuery.css(elem, box + cssExpand[i], true, styles);
			}

			if (!isBorderBox) {
				delta += jQuery.css(elem, "padding" + cssExpand[i], true, styles);

				if (box !== "padding") {
					delta += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
				} else {
					extra += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
				}
			} else {
				if (box === "content") {
					delta -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);
				}

				if (box !== "margin") {
					delta -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
				}
			}
		}

		if (!isBorderBox && computedVal >= 0) {
			delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5));
		}

		return delta;
	}

	function getWidthOrHeight(elem, dimension, extra) {
		var styles = getStyles(elem),
		    val = curCSS(elem, dimension, styles),
		    isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box",
		    valueIsBorderBox = isBorderBox;

		if (rnumnonpx.test(val)) {
			if (!extra) {
				return val;
			}
			val = "auto";
		}

		valueIsBorderBox = valueIsBorderBox && (support.boxSizingReliable() || val === elem.style[dimension]);

		if (val === "auto" || !parseFloat(val) && jQuery.css(elem, "display", false, styles) === "inline") {

			val = elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)];

			valueIsBorderBox = true;
		}

		val = parseFloat(val) || 0;

		return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles, val) + "px";
	}

	jQuery.extend({
		cssHooks: {
			opacity: {
				get: function get(elem, computed) {
					if (computed) {
						var ret = curCSS(elem, "opacity");
						return ret === "" ? "1" : ret;
					}
				}
			}
		},

		cssNumber: {
			"animationIterationCount": true,
			"columnCount": true,
			"fillOpacity": true,
			"flexGrow": true,
			"flexShrink": true,
			"fontWeight": true,
			"lineHeight": true,
			"opacity": true,
			"order": true,
			"orphans": true,
			"widows": true,
			"zIndex": true,
			"zoom": true
		},

		cssProps: {},

		style: function style(elem, name, value, extra) {
			if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
				return;
			}

			var ret,
			    type,
			    hooks,
			    origName = camelCase(name),
			    isCustomProp = rcustomProp.test(name),
			    style = elem.style;

			if (!isCustomProp) {
				name = finalPropName(origName);
			}

			hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

			if (value !== undefined) {
				type = typeof value === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(value);

				if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
					value = adjustCSS(elem, name, ret);

					type = "number";
				}

				if (value == null || value !== value) {
					return;
				}

				if (type === "number") {
					value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px");
				}

				if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
					style[name] = "inherit";
				}

				if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {

					if (isCustomProp) {
						style.setProperty(name, value);
					} else {
						style[name] = value;
					}
				}
			} else {
				if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {

					return ret;
				}

				return style[name];
			}
		},

		css: function css(elem, name, extra, styles) {
			var val,
			    num,
			    hooks,
			    origName = camelCase(name),
			    isCustomProp = rcustomProp.test(name);

			if (!isCustomProp) {
				name = finalPropName(origName);
			}

			hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

			if (hooks && "get" in hooks) {
				val = hooks.get(elem, true, extra);
			}

			if (val === undefined) {
				val = curCSS(elem, name, styles);
			}

			if (val === "normal" && name in cssNormalTransform) {
				val = cssNormalTransform[name];
			}

			if (extra === "" || extra) {
				num = parseFloat(val);
				return extra === true || isFinite(num) ? num || 0 : val;
			}

			return val;
		}
	});

	jQuery.each(["height", "width"], function (i, dimension) {
		jQuery.cssHooks[dimension] = {
			get: function get(elem, computed, extra) {
				if (computed) {
					return rdisplayswap.test(jQuery.css(elem, "display")) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {
						return getWidthOrHeight(elem, dimension, extra);
					}) : getWidthOrHeight(elem, dimension, extra);
				}
			},

			set: function set(elem, value, extra) {
				var matches,
				    styles = getStyles(elem),
				    isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box",
				    subtract = extra && boxModelAdjustment(elem, dimension, extra, isBorderBox, styles);

				if (isBorderBox && support.scrollboxSize() === styles.position) {
					subtract -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5);
				}

				if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {

					elem.style[dimension] = value;
					value = jQuery.css(elem, dimension);
				}

				return setPositiveNumber(elem, value, subtract);
			}
		};
	});

	jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {
		if (computed) {
			return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, { marginLeft: 0 }, function () {
				return elem.getBoundingClientRect().left;
			})) + "px";
		}
	});

	jQuery.each({
		margin: "",
		padding: "",
		border: "Width"
	}, function (prefix, suffix) {
		jQuery.cssHooks[prefix + suffix] = {
			expand: function expand(value) {
				var i = 0,
				    expanded = {},
				    parts = typeof value === "string" ? value.split(" ") : [value];

				for (; i < 4; i++) {
					expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
				}

				return expanded;
			}
		};

		if (prefix !== "margin") {
			jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
		}
	});

	jQuery.fn.extend({
		css: function css(name, value) {
			return access(this, function (elem, name, value) {
				var styles,
				    len,
				    map = {},
				    i = 0;

				if (Array.isArray(name)) {
					styles = getStyles(elem);
					len = name.length;

					for (; i < len; i++) {
						map[name[i]] = jQuery.css(elem, name[i], false, styles);
					}

					return map;
				}

				return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
			}, name, value, arguments.length > 1);
		}
	});

	function Tween(elem, options, prop, end, easing) {
		return new Tween.prototype.init(elem, options, prop, end, easing);
	}
	jQuery.Tween = Tween;

	Tween.prototype = {
		constructor: Tween,
		init: function init(elem, options, prop, end, easing, unit) {
			this.elem = elem;
			this.prop = prop;
			this.easing = easing || jQuery.easing._default;
			this.options = options;
			this.start = this.now = this.cur();
			this.end = end;
			this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
		},
		cur: function cur() {
			var hooks = Tween.propHooks[this.prop];

			return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
		},
		run: function run(percent) {
			var eased,
			    hooks = Tween.propHooks[this.prop];

			if (this.options.duration) {
				this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
			} else {
				this.pos = eased = percent;
			}
			this.now = (this.end - this.start) * eased + this.start;

			if (this.options.step) {
				this.options.step.call(this.elem, this.now, this);
			}

			if (hooks && hooks.set) {
				hooks.set(this);
			} else {
				Tween.propHooks._default.set(this);
			}
			return this;
		}
	};

	Tween.prototype.init.prototype = Tween.prototype;

	Tween.propHooks = {
		_default: {
			get: function get(tween) {
				var result;

				if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
					return tween.elem[tween.prop];
				}

				result = jQuery.css(tween.elem, tween.prop, "");

				return !result || result === "auto" ? 0 : result;
			},
			set: function set(tween) {
				if (jQuery.fx.step[tween.prop]) {
					jQuery.fx.step[tween.prop](tween);
				} else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
					jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
				} else {
					tween.elem[tween.prop] = tween.now;
				}
			}
		}
	};

	Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
		set: function set(tween) {
			if (tween.elem.nodeType && tween.elem.parentNode) {
				tween.elem[tween.prop] = tween.now;
			}
		}
	};

	jQuery.easing = {
		linear: function linear(p) {
			return p;
		},
		swing: function swing(p) {
			return 0.5 - Math.cos(p * Math.PI) / 2;
		},
		_default: "swing"
	};

	jQuery.fx = Tween.prototype.init;

	jQuery.fx.step = {};

	var fxNow,
	    inProgress,
	    rfxtypes = /^(?:toggle|show|hide)$/,
	    rrun = /queueHooks$/;

	function schedule() {
		if (inProgress) {
			if (document.hidden === false && window.requestAnimationFrame) {
				window.requestAnimationFrame(schedule);
			} else {
				window.setTimeout(schedule, jQuery.fx.interval);
			}

			jQuery.fx.tick();
		}
	}

	function createFxNow() {
		window.setTimeout(function () {
			fxNow = undefined;
		});
		return fxNow = Date.now();
	}

	function genFx(type, includeWidth) {
		var which,
		    i = 0,
		    attrs = { height: type };

		includeWidth = includeWidth ? 1 : 0;
		for (; i < 4; i += 2 - includeWidth) {
			which = cssExpand[i];
			attrs["margin" + which] = attrs["padding" + which] = type;
		}

		if (includeWidth) {
			attrs.opacity = attrs.width = type;
		}

		return attrs;
	}

	function createTween(value, prop, animation) {
		var tween,
		    collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]),
		    index = 0,
		    length = collection.length;
		for (; index < length; index++) {
			if (tween = collection[index].call(animation, prop, value)) {
				return tween;
			}
		}
	}

	function defaultPrefilter(elem, props, opts) {
		var prop,
		    value,
		    toggle,
		    hooks,
		    oldfire,
		    propTween,
		    restoreDisplay,
		    display,
		    isBox = "width" in props || "height" in props,
		    anim = this,
		    orig = {},
		    style = elem.style,
		    hidden = elem.nodeType && isHiddenWithinTree(elem),
		    dataShow = dataPriv.get(elem, "fxshow");

		if (!opts.queue) {
			hooks = jQuery._queueHooks(elem, "fx");
			if (hooks.unqueued == null) {
				hooks.unqueued = 0;
				oldfire = hooks.empty.fire;
				hooks.empty.fire = function () {
					if (!hooks.unqueued) {
						oldfire();
					}
				};
			}
			hooks.unqueued++;

			anim.always(function () {
				anim.always(function () {
					hooks.unqueued--;
					if (!jQuery.queue(elem, "fx").length) {
						hooks.empty.fire();
					}
				});
			});
		}

		for (prop in props) {
			value = props[prop];
			if (rfxtypes.test(value)) {
				delete props[prop];
				toggle = toggle || value === "toggle";
				if (value === (hidden ? "hide" : "show")) {
					if (value === "show" && dataShow && dataShow[prop] !== undefined) {
						hidden = true;
					} else {
						continue;
					}
				}
				orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
			}
		}

		propTween = !jQuery.isEmptyObject(props);
		if (!propTween && jQuery.isEmptyObject(orig)) {
			return;
		}

		if (isBox && elem.nodeType === 1) {
			opts.overflow = [style.overflow, style.overflowX, style.overflowY];

			restoreDisplay = dataShow && dataShow.display;
			if (restoreDisplay == null) {
				restoreDisplay = dataPriv.get(elem, "display");
			}
			display = jQuery.css(elem, "display");
			if (display === "none") {
				if (restoreDisplay) {
					display = restoreDisplay;
				} else {
					showHide([elem], true);
					restoreDisplay = elem.style.display || restoreDisplay;
					display = jQuery.css(elem, "display");
					showHide([elem]);
				}
			}

			if (display === "inline" || display === "inline-block" && restoreDisplay != null) {
				if (jQuery.css(elem, "float") === "none") {
					if (!propTween) {
						anim.done(function () {
							style.display = restoreDisplay;
						});
						if (restoreDisplay == null) {
							display = style.display;
							restoreDisplay = display === "none" ? "" : display;
						}
					}
					style.display = "inline-block";
				}
			}
		}

		if (opts.overflow) {
			style.overflow = "hidden";
			anim.always(function () {
				style.overflow = opts.overflow[0];
				style.overflowX = opts.overflow[1];
				style.overflowY = opts.overflow[2];
			});
		}

		propTween = false;
		for (prop in orig) {
			if (!propTween) {
				if (dataShow) {
					if ("hidden" in dataShow) {
						hidden = dataShow.hidden;
					}
				} else {
					dataShow = dataPriv.access(elem, "fxshow", { display: restoreDisplay });
				}

				if (toggle) {
					dataShow.hidden = !hidden;
				}

				if (hidden) {
					showHide([elem], true);
				}

				anim.done(function () {
					if (!hidden) {
						showHide([elem]);
					}
					dataPriv.remove(elem, "fxshow");
					for (prop in orig) {
						jQuery.style(elem, prop, orig[prop]);
					}
				});
			}

			propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
			if (!(prop in dataShow)) {
				dataShow[prop] = propTween.start;
				if (hidden) {
					propTween.end = propTween.start;
					propTween.start = 0;
				}
			}
		}
	}

	function propFilter(props, specialEasing) {
		var index, name, easing, value, hooks;

		for (index in props) {
			name = camelCase(index);
			easing = specialEasing[name];
			value = props[index];
			if (Array.isArray(value)) {
				easing = value[1];
				value = props[index] = value[0];
			}

			if (index !== name) {
				props[name] = value;
				delete props[index];
			}

			hooks = jQuery.cssHooks[name];
			if (hooks && "expand" in hooks) {
				value = hooks.expand(value);
				delete props[name];

				for (index in value) {
					if (!(index in props)) {
						props[index] = value[index];
						specialEasing[index] = easing;
					}
				}
			} else {
				specialEasing[name] = easing;
			}
		}
	}

	function Animation(elem, properties, options) {
		var result,
		    stopped,
		    index = 0,
		    length = Animation.prefilters.length,
		    deferred = jQuery.Deferred().always(function () {
			delete tick.elem;
		}),
		    tick = function tick() {
			if (stopped) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
			    remaining = Math.max(0, animation.startTime + animation.duration - currentTime),
			    temp = remaining / animation.duration || 0,
			    percent = 1 - temp,
			    index = 0,
			    length = animation.tweens.length;

			for (; index < length; index++) {
				animation.tweens[index].run(percent);
			}

			deferred.notifyWith(elem, [animation, percent, remaining]);

			if (percent < 1 && length) {
				return remaining;
			}

			if (!length) {
				deferred.notifyWith(elem, [animation, 1, 0]);
			}

			deferred.resolveWith(elem, [animation]);
			return false;
		},
		    animation = deferred.promise({
			elem: elem,
			props: jQuery.extend({}, properties),
			opts: jQuery.extend(true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function createTween(prop, end) {
				var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
				animation.tweens.push(tween);
				return tween;
			},
			stop: function stop(gotoEnd) {
				var index = 0,
				    length = gotoEnd ? animation.tweens.length : 0;
				if (stopped) {
					return this;
				}
				stopped = true;
				for (; index < length; index++) {
					animation.tweens[index].run(1);
				}

				if (gotoEnd) {
					deferred.notifyWith(elem, [animation, 1, 0]);
					deferred.resolveWith(elem, [animation, gotoEnd]);
				} else {
					deferred.rejectWith(elem, [animation, gotoEnd]);
				}
				return this;
			}
		}),
		    props = animation.props;

		propFilter(props, animation.opts.specialEasing);

		for (; index < length; index++) {
			result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
			if (result) {
				if (isFunction(result.stop)) {
					jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);
				}
				return result;
			}
		}

		jQuery.map(props, createTween, animation);

		if (isFunction(animation.opts.start)) {
			animation.opts.start.call(elem, animation);
		}

		animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);

		jQuery.fx.timer(jQuery.extend(tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		}));

		return animation;
	}

	jQuery.Animation = jQuery.extend(Animation, {

		tweeners: {
			"*": [function (prop, value) {
				var tween = this.createTween(prop, value);
				adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
				return tween;
			}]
		},

		tweener: function tweener(props, callback) {
			if (isFunction(props)) {
				callback = props;
				props = ["*"];
			} else {
				props = props.match(rnothtmlwhite);
			}

			var prop,
			    index = 0,
			    length = props.length;

			for (; index < length; index++) {
				prop = props[index];
				Animation.tweeners[prop] = Animation.tweeners[prop] || [];
				Animation.tweeners[prop].unshift(callback);
			}
		},

		prefilters: [defaultPrefilter],

		prefilter: function prefilter(callback, prepend) {
			if (prepend) {
				Animation.prefilters.unshift(callback);
			} else {
				Animation.prefilters.push(callback);
			}
		}
	});

	jQuery.speed = function (speed, easing, fn) {
		var opt = speed && (typeof speed === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(speed)) === "object" ? jQuery.extend({}, speed) : {
			complete: fn || !fn && easing || isFunction(speed) && speed,
			duration: speed,
			easing: fn && easing || easing && !isFunction(easing) && easing
		};

		if (jQuery.fx.off) {
			opt.duration = 0;
		} else {
			if (typeof opt.duration !== "number") {
				if (opt.duration in jQuery.fx.speeds) {
					opt.duration = jQuery.fx.speeds[opt.duration];
				} else {
					opt.duration = jQuery.fx.speeds._default;
				}
			}
		}

		if (opt.queue == null || opt.queue === true) {
			opt.queue = "fx";
		}

		opt.old = opt.complete;

		opt.complete = function () {
			if (isFunction(opt.old)) {
				opt.old.call(this);
			}

			if (opt.queue) {
				jQuery.dequeue(this, opt.queue);
			}
		};

		return opt;
	};

	jQuery.fn.extend({
		fadeTo: function fadeTo(speed, to, easing, callback) {
			return this.filter(isHiddenWithinTree).css("opacity", 0).show().end().animate({ opacity: to }, speed, easing, callback);
		},
		animate: function animate(prop, speed, easing, callback) {
			var empty = jQuery.isEmptyObject(prop),
			    optall = jQuery.speed(speed, easing, callback),
			    doAnimation = function doAnimation() {
				var anim = Animation(this, jQuery.extend({}, prop), optall);

				if (empty || dataPriv.get(this, "finish")) {
					anim.stop(true);
				}
			};
			doAnimation.finish = doAnimation;

			return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
		},
		stop: function stop(type, clearQueue, gotoEnd) {
			var stopQueue = function stopQueue(hooks) {
				var stop = hooks.stop;
				delete hooks.stop;
				stop(gotoEnd);
			};

			if (typeof type !== "string") {
				gotoEnd = clearQueue;
				clearQueue = type;
				type = undefined;
			}
			if (clearQueue && type !== false) {
				this.queue(type || "fx", []);
			}

			return this.each(function () {
				var dequeue = true,
				    index = type != null && type + "queueHooks",
				    timers = jQuery.timers,
				    data = dataPriv.get(this);

				if (index) {
					if (data[index] && data[index].stop) {
						stopQueue(data[index]);
					}
				} else {
					for (index in data) {
						if (data[index] && data[index].stop && rrun.test(index)) {
							stopQueue(data[index]);
						}
					}
				}

				for (index = timers.length; index--;) {
					if (timers[index].elem === this && (type == null || timers[index].queue === type)) {

						timers[index].anim.stop(gotoEnd);
						dequeue = false;
						timers.splice(index, 1);
					}
				}

				if (dequeue || !gotoEnd) {
					jQuery.dequeue(this, type);
				}
			});
		},
		finish: function finish(type) {
			if (type !== false) {
				type = type || "fx";
			}
			return this.each(function () {
				var index,
				    data = dataPriv.get(this),
				    queue = data[type + "queue"],
				    hooks = data[type + "queueHooks"],
				    timers = jQuery.timers,
				    length = queue ? queue.length : 0;

				data.finish = true;

				jQuery.queue(this, type, []);

				if (hooks && hooks.stop) {
					hooks.stop.call(this, true);
				}

				for (index = timers.length; index--;) {
					if (timers[index].elem === this && timers[index].queue === type) {
						timers[index].anim.stop(true);
						timers.splice(index, 1);
					}
				}

				for (index = 0; index < length; index++) {
					if (queue[index] && queue[index].finish) {
						queue[index].finish.call(this);
					}
				}

				delete data.finish;
			});
		}
	});

	jQuery.each(["toggle", "show", "hide"], function (i, name) {
		var cssFn = jQuery.fn[name];
		jQuery.fn[name] = function (speed, easing, callback) {
			return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
		};
	});

	jQuery.each({
		slideDown: genFx("show"),
		slideUp: genFx("hide"),
		slideToggle: genFx("toggle"),
		fadeIn: { opacity: "show" },
		fadeOut: { opacity: "hide" },
		fadeToggle: { opacity: "toggle" }
	}, function (name, props) {
		jQuery.fn[name] = function (speed, easing, callback) {
			return this.animate(props, speed, easing, callback);
		};
	});

	jQuery.timers = [];
	jQuery.fx.tick = function () {
		var timer,
		    i = 0,
		    timers = jQuery.timers;

		fxNow = Date.now();

		for (; i < timers.length; i++) {
			timer = timers[i];

			if (!timer() && timers[i] === timer) {
				timers.splice(i--, 1);
			}
		}

		if (!timers.length) {
			jQuery.fx.stop();
		}
		fxNow = undefined;
	};

	jQuery.fx.timer = function (timer) {
		jQuery.timers.push(timer);
		jQuery.fx.start();
	};

	jQuery.fx.interval = 13;
	jQuery.fx.start = function () {
		if (inProgress) {
			return;
		}

		inProgress = true;
		schedule();
	};

	jQuery.fx.stop = function () {
		inProgress = null;
	};

	jQuery.fx.speeds = {
		slow: 600,
		fast: 200,

		_default: 400
	};

	jQuery.fn.delay = function (time, type) {
		time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
		type = type || "fx";

		return this.queue(type, function (next, hooks) {
			var timeout = window.setTimeout(next, time);
			hooks.stop = function () {
				window.clearTimeout(timeout);
			};
		});
	};

	(function () {
		var input = document.createElement("input"),
		    select = document.createElement("select"),
		    opt = select.appendChild(document.createElement("option"));

		input.type = "checkbox";

		support.checkOn = input.value !== "";

		support.optSelected = opt.selected;

		input = document.createElement("input");
		input.value = "t";
		input.type = "radio";
		support.radioValue = input.value === "t";
	})();

	var boolHook,
	    attrHandle = jQuery.expr.attrHandle;

	jQuery.fn.extend({
		attr: function attr(name, value) {
			return access(this, jQuery.attr, name, value, arguments.length > 1);
		},

		removeAttr: function removeAttr(name) {
			return this.each(function () {
				jQuery.removeAttr(this, name);
			});
		}
	});

	jQuery.extend({
		attr: function attr(elem, name, value) {
			var ret,
			    hooks,
			    nType = elem.nodeType;

			if (nType === 3 || nType === 8 || nType === 2) {
				return;
			}

			if (typeof elem.getAttribute === "undefined") {
				return jQuery.prop(elem, name, value);
			}

			if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
				hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
			}

			if (value !== undefined) {
				if (value === null) {
					jQuery.removeAttr(elem, name);
					return;
				}

				if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
					return ret;
				}

				elem.setAttribute(name, value + "");
				return value;
			}

			if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
				return ret;
			}

			ret = jQuery.find.attr(elem, name);

			return ret == null ? undefined : ret;
		},

		attrHooks: {
			type: {
				set: function set(elem, value) {
					if (!support.radioValue && value === "radio" && nodeName(elem, "input")) {
						var val = elem.value;
						elem.setAttribute("type", value);
						if (val) {
							elem.value = val;
						}
						return value;
					}
				}
			}
		},

		removeAttr: function removeAttr(elem, value) {
			var name,
			    i = 0,
			    attrNames = value && value.match(rnothtmlwhite);

			if (attrNames && elem.nodeType === 1) {
				while (name = attrNames[i++]) {
					elem.removeAttribute(name);
				}
			}
		}
	});

	boolHook = {
		set: function set(elem, value, name) {
			if (value === false) {
				jQuery.removeAttr(elem, name);
			} else {
				elem.setAttribute(name, name);
			}
			return name;
		}
	};

	jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (i, name) {
		var getter = attrHandle[name] || jQuery.find.attr;

		attrHandle[name] = function (elem, name, isXML) {
			var ret,
			    handle,
			    lowercaseName = name.toLowerCase();

			if (!isXML) {
				handle = attrHandle[lowercaseName];
				attrHandle[lowercaseName] = ret;
				ret = getter(elem, name, isXML) != null ? lowercaseName : null;
				attrHandle[lowercaseName] = handle;
			}
			return ret;
		};
	});

	var rfocusable = /^(?:input|select|textarea|button)$/i,
	    rclickable = /^(?:a|area)$/i;

	jQuery.fn.extend({
		prop: function prop(name, value) {
			return access(this, jQuery.prop, name, value, arguments.length > 1);
		},

		removeProp: function removeProp(name) {
			return this.each(function () {
				delete this[jQuery.propFix[name] || name];
			});
		}
	});

	jQuery.extend({
		prop: function prop(elem, name, value) {
			var ret,
			    hooks,
			    nType = elem.nodeType;

			if (nType === 3 || nType === 8 || nType === 2) {
				return;
			}

			if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
				name = jQuery.propFix[name] || name;
				hooks = jQuery.propHooks[name];
			}

			if (value !== undefined) {
				if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
					return ret;
				}

				return elem[name] = value;
			}

			if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
				return ret;
			}

			return elem[name];
		},

		propHooks: {
			tabIndex: {
				get: function get(elem) {
					var tabindex = jQuery.find.attr(elem, "tabindex");

					if (tabindex) {
						return parseInt(tabindex, 10);
					}

					if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {
						return 0;
					}

					return -1;
				}
			}
		},

		propFix: {
			"for": "htmlFor",
			"class": "className"
		}
	});

	if (!support.optSelected) {
		jQuery.propHooks.selected = {
			get: function get(elem) {

				var parent = elem.parentNode;
				if (parent && parent.parentNode) {
					parent.parentNode.selectedIndex;
				}
				return null;
			},
			set: function set(elem) {

				var parent = elem.parentNode;
				if (parent) {
					parent.selectedIndex;

					if (parent.parentNode) {
						parent.parentNode.selectedIndex;
					}
				}
			}
		};
	}

	jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
		jQuery.propFix[this.toLowerCase()] = this;
	});

	function stripAndCollapse(value) {
		var tokens = value.match(rnothtmlwhite) || [];
		return tokens.join(" ");
	}

	function getClass(elem) {
		return elem.getAttribute && elem.getAttribute("class") || "";
	}

	function classesToArray(value) {
		if (Array.isArray(value)) {
			return value;
		}
		if (typeof value === "string") {
			return value.match(rnothtmlwhite) || [];
		}
		return [];
	}

	jQuery.fn.extend({
		addClass: function addClass(value) {
			var classes,
			    elem,
			    cur,
			    curValue,
			    clazz,
			    j,
			    finalValue,
			    i = 0;

			if (isFunction(value)) {
				return this.each(function (j) {
					jQuery(this).addClass(value.call(this, j, getClass(this)));
				});
			}

			classes = classesToArray(value);

			if (classes.length) {
				while (elem = this[i++]) {
					curValue = getClass(elem);
					cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";

					if (cur) {
						j = 0;
						while (clazz = classes[j++]) {
							if (cur.indexOf(" " + clazz + " ") < 0) {
								cur += clazz + " ";
							}
						}

						finalValue = stripAndCollapse(cur);
						if (curValue !== finalValue) {
							elem.setAttribute("class", finalValue);
						}
					}
				}
			}

			return this;
		},

		removeClass: function removeClass(value) {
			var classes,
			    elem,
			    cur,
			    curValue,
			    clazz,
			    j,
			    finalValue,
			    i = 0;

			if (isFunction(value)) {
				return this.each(function (j) {
					jQuery(this).removeClass(value.call(this, j, getClass(this)));
				});
			}

			if (!arguments.length) {
				return this.attr("class", "");
			}

			classes = classesToArray(value);

			if (classes.length) {
				while (elem = this[i++]) {
					curValue = getClass(elem);

					cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";

					if (cur) {
						j = 0;
						while (clazz = classes[j++]) {
							while (cur.indexOf(" " + clazz + " ") > -1) {
								cur = cur.replace(" " + clazz + " ", " ");
							}
						}

						finalValue = stripAndCollapse(cur);
						if (curValue !== finalValue) {
							elem.setAttribute("class", finalValue);
						}
					}
				}
			}

			return this;
		},

		toggleClass: function toggleClass(value, stateVal) {
			var type = typeof value === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(value),
			    isValidValue = type === "string" || Array.isArray(value);

			if (typeof stateVal === "boolean" && isValidValue) {
				return stateVal ? this.addClass(value) : this.removeClass(value);
			}

			if (isFunction(value)) {
				return this.each(function (i) {
					jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
				});
			}

			return this.each(function () {
				var className, i, self, classNames;

				if (isValidValue) {
					i = 0;
					self = jQuery(this);
					classNames = classesToArray(value);

					while (className = classNames[i++]) {
						if (self.hasClass(className)) {
							self.removeClass(className);
						} else {
							self.addClass(className);
						}
					}
				} else if (value === undefined || type === "boolean") {
					className = getClass(this);
					if (className) {
						dataPriv.set(this, "__className__", className);
					}

					if (this.setAttribute) {
						this.setAttribute("class", className || value === false ? "" : dataPriv.get(this, "__className__") || "");
					}
				}
			});
		},

		hasClass: function hasClass(selector) {
			var className,
			    elem,
			    i = 0;

			className = " " + selector + " ";
			while (elem = this[i++]) {
				if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) {
					return true;
				}
			}

			return false;
		}
	});

	var rreturn = /\r/g;

	jQuery.fn.extend({
		val: function val(value) {
			var hooks,
			    ret,
			    valueIsFunction,
			    elem = this[0];

			if (!arguments.length) {
				if (elem) {
					hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];

					if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
						return ret;
					}

					ret = elem.value;

					if (typeof ret === "string") {
						return ret.replace(rreturn, "");
					}

					return ret == null ? "" : ret;
				}

				return;
			}

			valueIsFunction = isFunction(value);

			return this.each(function (i) {
				var val;

				if (this.nodeType !== 1) {
					return;
				}

				if (valueIsFunction) {
					val = value.call(this, i, jQuery(this).val());
				} else {
					val = value;
				}

				if (val == null) {
					val = "";
				} else if (typeof val === "number") {
					val += "";
				} else if (Array.isArray(val)) {
					val = jQuery.map(val, function (value) {
						return value == null ? "" : value + "";
					});
				}

				hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];

				if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
					this.value = val;
				}
			});
		}
	});

	jQuery.extend({
		valHooks: {
			option: {
				get: function get(elem) {

					var val = jQuery.find.attr(elem, "value");
					return val != null ? val : stripAndCollapse(jQuery.text(elem));
				}
			},
			select: {
				get: function get(elem) {
					var value,
					    option,
					    i,
					    options = elem.options,
					    index = elem.selectedIndex,
					    one = elem.type === "select-one",
					    values = one ? null : [],
					    max = one ? index + 1 : options.length;

					if (index < 0) {
						i = max;
					} else {
						i = one ? index : 0;
					}

					for (; i < max; i++) {
						option = options[i];

						if ((option.selected || i === index) && !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
							value = jQuery(option).val();

							if (one) {
								return value;
							}

							values.push(value);
						}
					}

					return values;
				},

				set: function set(elem, value) {
					var optionSet,
					    option,
					    options = elem.options,
					    values = jQuery.makeArray(value),
					    i = options.length;

					while (i--) {
						option = options[i];

						if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {
							optionSet = true;
						}
					}

					if (!optionSet) {
						elem.selectedIndex = -1;
					}
					return values;
				}
			}
		}
	});

	jQuery.each(["radio", "checkbox"], function () {
		jQuery.valHooks[this] = {
			set: function set(elem, value) {
				if (Array.isArray(value)) {
					return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;
				}
			}
		};
		if (!support.checkOn) {
			jQuery.valHooks[this].get = function (elem) {
				return elem.getAttribute("value") === null ? "on" : elem.value;
			};
		}
	});

	support.focusin = "onfocusin" in window;

	var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	    stopPropagationCallback = function stopPropagationCallback(e) {
		e.stopPropagation();
	};

	jQuery.extend(jQuery.event, {

		trigger: function trigger(event, data, elem, onlyHandlers) {

			var i,
			    cur,
			    tmp,
			    bubbleType,
			    ontype,
			    handle,
			    special,
			    lastElement,
			    eventPath = [elem || document],
			    type = hasOwn.call(event, "type") ? event.type : event,
			    namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];

			cur = lastElement = tmp = elem = elem || document;

			if (elem.nodeType === 3 || elem.nodeType === 8) {
				return;
			}

			if (rfocusMorph.test(type + jQuery.event.triggered)) {
				return;
			}

			if (type.indexOf(".") > -1) {
				namespaces = type.split(".");
				type = namespaces.shift();
				namespaces.sort();
			}
			ontype = type.indexOf(":") < 0 && "on" + type;

			event = event[jQuery.expando] ? event : new jQuery.Event(type, (typeof event === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(event)) === "object" && event);

			event.isTrigger = onlyHandlers ? 2 : 3;
			event.namespace = namespaces.join(".");
			event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;

			event.result = undefined;
			if (!event.target) {
				event.target = elem;
			}

			data = data == null ? [event] : jQuery.makeArray(data, [event]);

			special = jQuery.event.special[type] || {};
			if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
				return;
			}

			if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {

				bubbleType = special.delegateType || type;
				if (!rfocusMorph.test(bubbleType + type)) {
					cur = cur.parentNode;
				}
				for (; cur; cur = cur.parentNode) {
					eventPath.push(cur);
					tmp = cur;
				}

				if (tmp === (elem.ownerDocument || document)) {
					eventPath.push(tmp.defaultView || tmp.parentWindow || window);
				}
			}

			i = 0;
			while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
				lastElement = cur;
				event.type = i > 1 ? bubbleType : special.bindType || type;

				handle = (dataPriv.get(cur, "events") || {})[event.type] && dataPriv.get(cur, "handle");
				if (handle) {
					handle.apply(cur, data);
				}

				handle = ontype && cur[ontype];
				if (handle && handle.apply && acceptData(cur)) {
					event.result = handle.apply(cur, data);
					if (event.result === false) {
						event.preventDefault();
					}
				}
			}
			event.type = type;

			if (!onlyHandlers && !event.isDefaultPrevented()) {

				if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
					if (ontype && isFunction(elem[type]) && !isWindow(elem)) {
						tmp = elem[ontype];

						if (tmp) {
							elem[ontype] = null;
						}

						jQuery.event.triggered = type;

						if (event.isPropagationStopped()) {
							lastElement.addEventListener(type, stopPropagationCallback);
						}

						elem[type]();

						if (event.isPropagationStopped()) {
							lastElement.removeEventListener(type, stopPropagationCallback);
						}

						jQuery.event.triggered = undefined;

						if (tmp) {
							elem[ontype] = tmp;
						}
					}
				}
			}

			return event.result;
		},

		simulate: function simulate(type, elem, event) {
			var e = jQuery.extend(new jQuery.Event(), event, {
				type: type,
				isSimulated: true
			});

			jQuery.event.trigger(e, null, elem);
		}

	});

	jQuery.fn.extend({

		trigger: function trigger(type, data) {
			return this.each(function () {
				jQuery.event.trigger(type, data, this);
			});
		},
		triggerHandler: function triggerHandler(type, data) {
			var elem = this[0];
			if (elem) {
				return jQuery.event.trigger(type, data, elem, true);
			}
		}
	});

	if (!support.focusin) {
		jQuery.each({ focus: "focusin", blur: "focusout" }, function (orig, fix) {
			var handler = function handler(event) {
				jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
			};

			jQuery.event.special[fix] = {
				setup: function setup() {
					var doc = this.ownerDocument || this,
					    attaches = dataPriv.access(doc, fix);

					if (!attaches) {
						doc.addEventListener(orig, handler, true);
					}
					dataPriv.access(doc, fix, (attaches || 0) + 1);
				},
				teardown: function teardown() {
					var doc = this.ownerDocument || this,
					    attaches = dataPriv.access(doc, fix) - 1;

					if (!attaches) {
						doc.removeEventListener(orig, handler, true);
						dataPriv.remove(doc, fix);
					} else {
						dataPriv.access(doc, fix, attaches);
					}
				}
			};
		});
	}
	var location = window.location;

	var nonce = Date.now();

	var rquery = /\?/;

	jQuery.parseXML = function (data) {
		var xml;
		if (!data || typeof data !== "string") {
			return null;
		}

		try {
			xml = new window.DOMParser().parseFromString(data, "text/xml");
		} catch (e) {
			xml = undefined;
		}

		if (!xml || xml.getElementsByTagName("parsererror").length) {
			jQuery.error("Invalid XML: " + data);
		}
		return xml;
	};

	var rbracket = /\[\]$/,
	    rCRLF = /\r?\n/g,
	    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	    rsubmittable = /^(?:input|select|textarea|keygen)/i;

	function buildParams(prefix, obj, traditional, add) {
		var name;

		if (Array.isArray(obj)) {
			jQuery.each(obj, function (i, v) {
				if (traditional || rbracket.test(prefix)) {
					add(prefix, v);
				} else {
					buildParams(prefix + "[" + ((typeof v === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(v)) === "object" && v != null ? i : "") + "]", v, traditional, add);
				}
			});
		} else if (!traditional && toType(obj) === "object") {
			for (name in obj) {
				buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
			}
		} else {
			add(prefix, obj);
		}
	}

	jQuery.param = function (a, traditional) {
		var prefix,
		    s = [],
		    add = function add(key, valueOrFunction) {
			var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;

			s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);
		};

		if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {
			jQuery.each(a, function () {
				add(this.name, this.value);
			});
		} else {
			for (prefix in a) {
				buildParams(prefix, a[prefix], traditional, add);
			}
		}

		return s.join("&");
	};

	jQuery.fn.extend({
		serialize: function serialize() {
			return jQuery.param(this.serializeArray());
		},
		serializeArray: function serializeArray() {
			return this.map(function () {
				var elements = jQuery.prop(this, "elements");
				return elements ? jQuery.makeArray(elements) : this;
			}).filter(function () {
				var type = this.type;

				return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
			}).map(function (i, elem) {
				var val = jQuery(this).val();

				if (val == null) {
					return null;
				}

				if (Array.isArray(val)) {
					return jQuery.map(val, function (val) {
						return { name: elem.name, value: val.replace(rCRLF, "\r\n") };
					});
				}

				return { name: elem.name, value: val.replace(rCRLF, "\r\n") };
			}).get();
		}
	});

	var r20 = /%20/g,
	    rhash = /#.*$/,
	    rantiCache = /([?&])_=[^&]*/,
	    rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
	    rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	    rnoContent = /^(?:GET|HEAD)$/,
	    rprotocol = /^\/\//,
	    prefilters = {},
	    transports = {},
	    allTypes = "*/".concat("*"),
	    originAnchor = document.createElement("a");
	originAnchor.href = location.href;

	function addToPrefiltersOrTransports(structure) {
		return function (dataTypeExpression, func) {

			if (typeof dataTypeExpression !== "string") {
				func = dataTypeExpression;
				dataTypeExpression = "*";
			}

			var dataType,
			    i = 0,
			    dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];

			if (isFunction(func)) {
				while (dataType = dataTypes[i++]) {
					if (dataType[0] === "+") {
						dataType = dataType.slice(1) || "*";
						(structure[dataType] = structure[dataType] || []).unshift(func);
					} else {
						(structure[dataType] = structure[dataType] || []).push(func);
					}
				}
			}
		};
	}

	function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {

		var inspected = {},
		    seekingTransport = structure === transports;

		function inspect(dataType) {
			var selected;
			inspected[dataType] = true;
			jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
				var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
				if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {

					options.dataTypes.unshift(dataTypeOrTransport);
					inspect(dataTypeOrTransport);
					return false;
				} else if (seekingTransport) {
					return !(selected = dataTypeOrTransport);
				}
			});
			return selected;
		}

		return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
	}

	function ajaxExtend(target, src) {
		var key,
		    deep,
		    flatOptions = jQuery.ajaxSettings.flatOptions || {};

		for (key in src) {
			if (src[key] !== undefined) {
				(flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
			}
		}
		if (deep) {
			jQuery.extend(true, target, deep);
		}

		return target;
	}

	function ajaxHandleResponses(s, jqXHR, responses) {

		var ct,
		    type,
		    finalDataType,
		    firstDataType,
		    contents = s.contents,
		    dataTypes = s.dataTypes;

		while (dataTypes[0] === "*") {
			dataTypes.shift();
			if (ct === undefined) {
				ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
			}
		}

		if (ct) {
			for (type in contents) {
				if (contents[type] && contents[type].test(ct)) {
					dataTypes.unshift(type);
					break;
				}
			}
		}

		if (dataTypes[0] in responses) {
			finalDataType = dataTypes[0];
		} else {
			for (type in responses) {
				if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
					finalDataType = type;
					break;
				}
				if (!firstDataType) {
					firstDataType = type;
				}
			}

			finalDataType = finalDataType || firstDataType;
		}

		if (finalDataType) {
			if (finalDataType !== dataTypes[0]) {
				dataTypes.unshift(finalDataType);
			}
			return responses[finalDataType];
		}
	}

	function ajaxConvert(s, response, jqXHR, isSuccess) {
		var conv2,
		    current,
		    conv,
		    tmp,
		    prev,
		    converters = {},
		    dataTypes = s.dataTypes.slice();

		if (dataTypes[1]) {
			for (conv in s.converters) {
				converters[conv.toLowerCase()] = s.converters[conv];
			}
		}

		current = dataTypes.shift();

		while (current) {

			if (s.responseFields[current]) {
				jqXHR[s.responseFields[current]] = response;
			}

			if (!prev && isSuccess && s.dataFilter) {
				response = s.dataFilter(response, s.dataType);
			}

			prev = current;
			current = dataTypes.shift();

			if (current) {
				if (current === "*") {

					current = prev;
				} else if (prev !== "*" && prev !== current) {
					conv = converters[prev + " " + current] || converters["* " + current];

					if (!conv) {
						for (conv2 in converters) {
							tmp = conv2.split(" ");
							if (tmp[1] === current) {
								conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
								if (conv) {
									if (conv === true) {
										conv = converters[conv2];
									} else if (converters[conv2] !== true) {
										current = tmp[0];
										dataTypes.unshift(tmp[1]);
									}
									break;
								}
							}
						}
					}

					if (conv !== true) {
						if (conv && s.throws) {
							response = conv(response);
						} else {
							try {
								response = conv(response);
							} catch (e) {
								return {
									state: "parsererror",
									error: conv ? e : "No conversion from " + prev + " to " + current
								};
							}
						}
					}
				}
			}
		}

		return { state: "success", data: response };
	}

	jQuery.extend({
		active: 0,

		lastModified: {},
		etag: {},

		ajaxSettings: {
			url: location.href,
			type: "GET",
			isLocal: rlocalProtocol.test(location.protocol),
			global: true,
			processData: true,
			async: true,
			contentType: "application/x-www-form-urlencoded; charset=UTF-8",

			accepts: {
				"*": allTypes,
				text: "text/plain",
				html: "text/html",
				xml: "application/xml, text/xml",
				json: "application/json, text/javascript"
			},

			contents: {
				xml: /\bxml\b/,
				html: /\bhtml/,
				json: /\bjson\b/
			},

			responseFields: {
				xml: "responseXML",
				text: "responseText",
				json: "responseJSON"
			},

			converters: {
				"* text": String,

				"text html": true,

				"text json": JSON.parse,

				"text xml": jQuery.parseXML
			},

			flatOptions: {
				url: true,
				context: true
			}
		},

		ajaxSetup: function ajaxSetup(target, settings) {
			return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
		},

		ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
		ajaxTransport: addToPrefiltersOrTransports(transports),

		ajax: function ajax(url, options) {
			if ((typeof url === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(url)) === "object") {
				options = url;
				url = undefined;
			}

			options = options || {};

			var transport,
			    cacheURL,
			    responseHeadersString,
			    responseHeaders,
			    timeoutTimer,
			    urlAnchor,
			    completed,
			    fireGlobals,
			    i,
			    uncached,
			    s = jQuery.ajaxSetup({}, options),
			    callbackContext = s.context || s,
			    globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
			    deferred = jQuery.Deferred(),
			    completeDeferred = jQuery.Callbacks("once memory"),
			    _statusCode = s.statusCode || {},
			    requestHeaders = {},
			    requestHeadersNames = {},
			    strAbort = "canceled",
			    jqXHR = {
				readyState: 0,

				getResponseHeader: function getResponseHeader(key) {
					var match;
					if (completed) {
						if (!responseHeaders) {
							responseHeaders = {};
							while (match = rheaders.exec(responseHeadersString)) {
								responseHeaders[match[1].toLowerCase()] = match[2];
							}
						}
						match = responseHeaders[key.toLowerCase()];
					}
					return match == null ? null : match;
				},

				getAllResponseHeaders: function getAllResponseHeaders() {
					return completed ? responseHeadersString : null;
				},

				setRequestHeader: function setRequestHeader(name, value) {
					if (completed == null) {
						name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
						requestHeaders[name] = value;
					}
					return this;
				},

				overrideMimeType: function overrideMimeType(type) {
					if (completed == null) {
						s.mimeType = type;
					}
					return this;
				},

				statusCode: function statusCode(map) {
					var code;
					if (map) {
						if (completed) {
							jqXHR.always(map[jqXHR.status]);
						} else {
							for (code in map) {
								_statusCode[code] = [_statusCode[code], map[code]];
							}
						}
					}
					return this;
				},

				abort: function abort(statusText) {
					var finalText = statusText || strAbort;
					if (transport) {
						transport.abort(finalText);
					}
					done(0, finalText);
					return this;
				}
			};

			deferred.promise(jqXHR);

			s.url = ((url || s.url || location.href) + "").replace(rprotocol, location.protocol + "//");

			s.type = options.method || options.type || s.method || s.type;

			s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""];

			if (s.crossDomain == null) {
				urlAnchor = document.createElement("a");

				try {
					urlAnchor.href = s.url;

					urlAnchor.href = urlAnchor.href;
					s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
				} catch (e) {
					s.crossDomain = true;
				}
			}

			if (s.data && s.processData && typeof s.data !== "string") {
				s.data = jQuery.param(s.data, s.traditional);
			}

			inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);

			if (completed) {
				return jqXHR;
			}

			fireGlobals = jQuery.event && s.global;

			if (fireGlobals && jQuery.active++ === 0) {
				jQuery.event.trigger("ajaxStart");
			}

			s.type = s.type.toUpperCase();

			s.hasContent = !rnoContent.test(s.type);

			cacheURL = s.url.replace(rhash, "");

			if (!s.hasContent) {
				uncached = s.url.slice(cacheURL.length);

				if (s.data && (s.processData || typeof s.data === "string")) {
					cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data;

					delete s.data;
				}

				if (s.cache === false) {
					cacheURL = cacheURL.replace(rantiCache, "$1");
					uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++ + uncached;
				}

				s.url = cacheURL + uncached;
			} else if (s.data && s.processData && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {
				s.data = s.data.replace(r20, "+");
			}

			if (s.ifModified) {
				if (jQuery.lastModified[cacheURL]) {
					jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
				}
				if (jQuery.etag[cacheURL]) {
					jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
				}
			}

			if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
				jqXHR.setRequestHeader("Content-Type", s.contentType);
			}

			jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);

			for (i in s.headers) {
				jqXHR.setRequestHeader(i, s.headers[i]);
			}

			if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {
				return jqXHR.abort();
			}

			strAbort = "abort";

			completeDeferred.add(s.complete);
			jqXHR.done(s.success);
			jqXHR.fail(s.error);

			transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);

			if (!transport) {
				done(-1, "No Transport");
			} else {
				jqXHR.readyState = 1;

				if (fireGlobals) {
					globalEventContext.trigger("ajaxSend", [jqXHR, s]);
				}

				if (completed) {
					return jqXHR;
				}

				if (s.async && s.timeout > 0) {
					timeoutTimer = window.setTimeout(function () {
						jqXHR.abort("timeout");
					}, s.timeout);
				}

				try {
					completed = false;
					transport.send(requestHeaders, done);
				} catch (e) {
					if (completed) {
						throw e;
					}

					done(-1, e);
				}
			}

			function done(status, nativeStatusText, responses, headers) {
				var isSuccess,
				    success,
				    error,
				    response,
				    modified,
				    statusText = nativeStatusText;

				if (completed) {
					return;
				}

				completed = true;

				if (timeoutTimer) {
					window.clearTimeout(timeoutTimer);
				}

				transport = undefined;

				responseHeadersString = headers || "";

				jqXHR.readyState = status > 0 ? 4 : 0;

				isSuccess = status >= 200 && status < 300 || status === 304;

				if (responses) {
					response = ajaxHandleResponses(s, jqXHR, responses);
				}

				response = ajaxConvert(s, response, jqXHR, isSuccess);

				if (isSuccess) {
					if (s.ifModified) {
						modified = jqXHR.getResponseHeader("Last-Modified");
						if (modified) {
							jQuery.lastModified[cacheURL] = modified;
						}
						modified = jqXHR.getResponseHeader("etag");
						if (modified) {
							jQuery.etag[cacheURL] = modified;
						}
					}

					if (status === 204 || s.type === "HEAD") {
						statusText = "nocontent";
					} else if (status === 304) {
						statusText = "notmodified";
					} else {
						statusText = response.state;
						success = response.data;
						error = response.error;
						isSuccess = !error;
					}
				} else {
					error = statusText;
					if (status || !statusText) {
						statusText = "error";
						if (status < 0) {
							status = 0;
						}
					}
				}

				jqXHR.status = status;
				jqXHR.statusText = (nativeStatusText || statusText) + "";

				if (isSuccess) {
					deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
				} else {
					deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
				}

				jqXHR.statusCode(_statusCode);
				_statusCode = undefined;

				if (fireGlobals) {
					globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]);
				}

				completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);

				if (fireGlobals) {
					globalEventContext.trigger("ajaxComplete", [jqXHR, s]);

					if (! --jQuery.active) {
						jQuery.event.trigger("ajaxStop");
					}
				}
			}

			return jqXHR;
		},

		getJSON: function getJSON(url, data, callback) {
			return jQuery.get(url, data, callback, "json");
		},

		getScript: function getScript(url, callback) {
			return jQuery.get(url, undefined, callback, "script");
		}
	});

	jQuery.each(["get", "post"], function (i, method) {
		jQuery[method] = function (url, data, callback, type) {
			if (isFunction(data)) {
				type = type || callback;
				callback = data;
				data = undefined;
			}

			return jQuery.ajax(jQuery.extend({
				url: url,
				type: method,
				dataType: type,
				data: data,
				success: callback
			}, jQuery.isPlainObject(url) && url));
		};
	});

	jQuery._evalUrl = function (url) {
		return jQuery.ajax({
			url: url,

			type: "GET",
			dataType: "script",
			cache: true,
			async: false,
			global: false,
			"throws": true
		});
	};

	jQuery.fn.extend({
		wrapAll: function wrapAll(html) {
			var wrap;

			if (this[0]) {
				if (isFunction(html)) {
					html = html.call(this[0]);
				}

				wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);

				if (this[0].parentNode) {
					wrap.insertBefore(this[0]);
				}

				wrap.map(function () {
					var elem = this;

					while (elem.firstElementChild) {
						elem = elem.firstElementChild;
					}

					return elem;
				}).append(this);
			}

			return this;
		},

		wrapInner: function wrapInner(html) {
			if (isFunction(html)) {
				return this.each(function (i) {
					jQuery(this).wrapInner(html.call(this, i));
				});
			}

			return this.each(function () {
				var self = jQuery(this),
				    contents = self.contents();

				if (contents.length) {
					contents.wrapAll(html);
				} else {
					self.append(html);
				}
			});
		},

		wrap: function wrap(html) {
			var htmlIsFunction = isFunction(html);

			return this.each(function (i) {
				jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);
			});
		},

		unwrap: function unwrap(selector) {
			this.parent(selector).not("body").each(function () {
				jQuery(this).replaceWith(this.childNodes);
			});
			return this;
		}
	});

	jQuery.expr.pseudos.hidden = function (elem) {
		return !jQuery.expr.pseudos.visible(elem);
	};
	jQuery.expr.pseudos.visible = function (elem) {
		return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
	};

	jQuery.ajaxSettings.xhr = function () {
		try {
			return new window.XMLHttpRequest();
		} catch (e) {}
	};

	var xhrSuccessStatus = {
		0: 200,

		1223: 204
	},
	    xhrSupported = jQuery.ajaxSettings.xhr();

	support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
	support.ajax = xhrSupported = !!xhrSupported;

	jQuery.ajaxTransport(function (options) {
		var _callback, errorCallback;

		if (support.cors || xhrSupported && !options.crossDomain) {
			return {
				send: function send(headers, complete) {
					var i,
					    xhr = options.xhr();

					xhr.open(options.type, options.url, options.async, options.username, options.password);

					if (options.xhrFields) {
						for (i in options.xhrFields) {
							xhr[i] = options.xhrFields[i];
						}
					}

					if (options.mimeType && xhr.overrideMimeType) {
						xhr.overrideMimeType(options.mimeType);
					}

					if (!options.crossDomain && !headers["X-Requested-With"]) {
						headers["X-Requested-With"] = "XMLHttpRequest";
					}

					for (i in headers) {
						xhr.setRequestHeader(i, headers[i]);
					}

					_callback = function callback(type) {
						return function () {
							if (_callback) {
								_callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;

								if (type === "abort") {
									xhr.abort();
								} else if (type === "error") {
									if (typeof xhr.status !== "number") {
										complete(0, "error");
									} else {
										complete(xhr.status, xhr.statusText);
									}
								} else {
									complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? { binary: xhr.response } : { text: xhr.responseText }, xhr.getAllResponseHeaders());
								}
							}
						};
					};

					xhr.onload = _callback();
					errorCallback = xhr.onerror = xhr.ontimeout = _callback("error");

					if (xhr.onabort !== undefined) {
						xhr.onabort = errorCallback;
					} else {
						xhr.onreadystatechange = function () {
							if (xhr.readyState === 4) {
								window.setTimeout(function () {
									if (_callback) {
										errorCallback();
									}
								});
							}
						};
					}

					_callback = _callback("abort");

					try {
						xhr.send(options.hasContent && options.data || null);
					} catch (e) {
						if (_callback) {
							throw e;
						}
					}
				},

				abort: function abort() {
					if (_callback) {
						_callback();
					}
				}
			};
		}
	});

	jQuery.ajaxPrefilter(function (s) {
		if (s.crossDomain) {
			s.contents.script = false;
		}
	});

	jQuery.ajaxSetup({
		accepts: {
			script: "text/javascript, application/javascript, " + "application/ecmascript, application/x-ecmascript"
		},
		contents: {
			script: /\b(?:java|ecma)script\b/
		},
		converters: {
			"text script": function textScript(text) {
				jQuery.globalEval(text);
				return text;
			}
		}
	});

	jQuery.ajaxPrefilter("script", function (s) {
		if (s.cache === undefined) {
			s.cache = false;
		}
		if (s.crossDomain) {
			s.type = "GET";
		}
	});

	jQuery.ajaxTransport("script", function (s) {
		if (s.crossDomain) {
			var script, _callback2;
			return {
				send: function send(_, complete) {
					script = jQuery("<script>").prop({
						charset: s.scriptCharset,
						src: s.url
					}).on("load error", _callback2 = function callback(evt) {
						script.remove();
						_callback2 = null;
						if (evt) {
							complete(evt.type === "error" ? 404 : 200, evt.type);
						}
					});

					document.head.appendChild(script[0]);
				},
				abort: function abort() {
					if (_callback2) {
						_callback2();
					}
				}
			};
		}
	});

	var oldCallbacks = [],
	    rjsonp = /(=)\?(?=&|$)|\?\?/;

	jQuery.ajaxSetup({
		jsonp: "callback",
		jsonpCallback: function jsonpCallback() {
			var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce++;
			this[callback] = true;
			return callback;
		}
	});

	jQuery.ajaxPrefilter("json jsonp", function (s, originalSettings, jqXHR) {

		var callbackName,
		    overwritten,
		    responseContainer,
		    jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data");

		if (jsonProp || s.dataTypes[0] === "jsonp") {
			callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;

			if (jsonProp) {
				s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
			} else if (s.jsonp !== false) {
				s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
			}

			s.converters["script json"] = function () {
				if (!responseContainer) {
					jQuery.error(callbackName + " was not called");
				}
				return responseContainer[0];
			};

			s.dataTypes[0] = "json";

			overwritten = window[callbackName];
			window[callbackName] = function () {
				responseContainer = arguments;
			};

			jqXHR.always(function () {
				if (overwritten === undefined) {
					jQuery(window).removeProp(callbackName);
				} else {
					window[callbackName] = overwritten;
				}

				if (s[callbackName]) {
					s.jsonpCallback = originalSettings.jsonpCallback;

					oldCallbacks.push(callbackName);
				}

				if (responseContainer && isFunction(overwritten)) {
					overwritten(responseContainer[0]);
				}

				responseContainer = overwritten = undefined;
			});

			return "script";
		}
	});

	support.createHTMLDocument = function () {
		var body = document.implementation.createHTMLDocument("").body;
		body.innerHTML = "<form></form><form></form>";
		return body.childNodes.length === 2;
	}();

	jQuery.parseHTML = function (data, context, keepScripts) {
		if (typeof data !== "string") {
			return [];
		}
		if (typeof context === "boolean") {
			keepScripts = context;
			context = false;
		}

		var base, parsed, scripts;

		if (!context) {
			if (support.createHTMLDocument) {
				context = document.implementation.createHTMLDocument("");

				base = context.createElement("base");
				base.href = document.location.href;
				context.head.appendChild(base);
			} else {
				context = document;
			}
		}

		parsed = rsingleTag.exec(data);
		scripts = !keepScripts && [];

		if (parsed) {
			return [context.createElement(parsed[1])];
		}

		parsed = buildFragment([data], context, scripts);

		if (scripts && scripts.length) {
			jQuery(scripts).remove();
		}

		return jQuery.merge([], parsed.childNodes);
	};

	jQuery.fn.load = function (url, params, callback) {
		var selector,
		    type,
		    response,
		    self = this,
		    off = url.indexOf(" ");

		if (off > -1) {
			selector = stripAndCollapse(url.slice(off));
			url = url.slice(0, off);
		}

		if (isFunction(params)) {
			callback = params;
			params = undefined;
		} else if (params && (typeof params === "undefined" ? "undefined" : Object(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__["default"])(params)) === "object") {
			type = "POST";
		}

		if (self.length > 0) {
			jQuery.ajax({
				url: url,

				type: type || "GET",
				dataType: "html",
				data: params
			}).done(function (responseText) {
				response = arguments;

				self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText);
			}).always(callback && function (jqXHR, status) {
				self.each(function () {
					callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);
				});
			});
		}

		return this;
	};

	jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (i, type) {
		jQuery.fn[type] = function (fn) {
			return this.on(type, fn);
		};
	});

	jQuery.expr.pseudos.animated = function (elem) {
		return jQuery.grep(jQuery.timers, function (fn) {
			return elem === fn.elem;
		}).length;
	};

	jQuery.offset = {
		setOffset: function setOffset(elem, options, i) {
			var curPosition,
			    curLeft,
			    curCSSTop,
			    curTop,
			    curOffset,
			    curCSSLeft,
			    calculatePosition,
			    position = jQuery.css(elem, "position"),
			    curElem = jQuery(elem),
			    props = {};

			if (position === "static") {
				elem.style.position = "relative";
			}

			curOffset = curElem.offset();
			curCSSTop = jQuery.css(elem, "top");
			curCSSLeft = jQuery.css(elem, "left");
			calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;

			if (calculatePosition) {
				curPosition = curElem.position();
				curTop = curPosition.top;
				curLeft = curPosition.left;
			} else {
				curTop = parseFloat(curCSSTop) || 0;
				curLeft = parseFloat(curCSSLeft) || 0;
			}

			if (isFunction(options)) {
				options = options.call(elem, i, jQuery.extend({}, curOffset));
			}

			if (options.top != null) {
				props.top = options.top - curOffset.top + curTop;
			}
			if (options.left != null) {
				props.left = options.left - curOffset.left + curLeft;
			}

			if ("using" in options) {
				options.using.call(elem, props);
			} else {
				curElem.css(props);
			}
		}
	};

	jQuery.fn.extend({
		offset: function offset(options) {
			if (arguments.length) {
				return options === undefined ? this : this.each(function (i) {
					jQuery.offset.setOffset(this, options, i);
				});
			}

			var rect,
			    win,
			    elem = this[0];

			if (!elem) {
				return;
			}

			if (!elem.getClientRects().length) {
				return { top: 0, left: 0 };
			}

			rect = elem.getBoundingClientRect();
			win = elem.ownerDocument.defaultView;
			return {
				top: rect.top + win.pageYOffset,
				left: rect.left + win.pageXOffset
			};
		},

		position: function position() {
			if (!this[0]) {
				return;
			}

			var offsetParent,
			    offset,
			    doc,
			    elem = this[0],
			    parentOffset = { top: 0, left: 0 };

			if (jQuery.css(elem, "position") === "fixed") {
				offset = elem.getBoundingClientRect();
			} else {
				offset = this.offset();

				doc = elem.ownerDocument;
				offsetParent = elem.offsetParent || doc.documentElement;
				while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, "position") === "static") {

					offsetParent = offsetParent.parentNode;
				}
				if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {
					parentOffset = jQuery(offsetParent).offset();
					parentOffset.top += jQuery.css(offsetParent, "borderTopWidth", true);
					parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", true);
				}
			}

			return {
				top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),
				left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)
			};
		},

		offsetParent: function offsetParent() {
			return this.map(function () {
				var offsetParent = this.offsetParent;

				while (offsetParent && jQuery.css(offsetParent, "position") === "static") {
					offsetParent = offsetParent.offsetParent;
				}

				return offsetParent || documentElement;
			});
		}
	});

	jQuery.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (method, prop) {
		var top = "pageYOffset" === prop;

		jQuery.fn[method] = function (val) {
			return access(this, function (elem, method, val) {
				var win;
				if (isWindow(elem)) {
					win = elem;
				} else if (elem.nodeType === 9) {
					win = elem.defaultView;
				}

				if (val === undefined) {
					return win ? win[prop] : elem[method];
				}

				if (win) {
					win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);
				} else {
					elem[method] = val;
				}
			}, method, val, arguments.length);
		};
	});

	jQuery.each(["top", "left"], function (i, prop) {
		jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {
			if (computed) {
				computed = curCSS(elem, prop);

				return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
			}
		});
	});

	jQuery.each({ Height: "height", Width: "width" }, function (name, type) {
		jQuery.each({ padding: "inner" + name, content: type, "": "outer" + name }, function (defaultExtra, funcName) {
			jQuery.fn[funcName] = function (margin, value) {
				var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
				    extra = defaultExtra || (margin === true || value === true ? "margin" : "border");

				return access(this, function (elem, type, value) {
					var doc;

					if (isWindow(elem)) {
						return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];
					}

					if (elem.nodeType === 9) {
						doc = elem.documentElement;

						return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
					}

					return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
				}, type, chainable ? margin : undefined, chainable);
			};
		});
	});

	jQuery.each(("blur focus focusin focusout resize scroll click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup contextmenu").split(" "), function (i, name) {
		jQuery.fn[name] = function (data, fn) {
			return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
		};
	});

	jQuery.fn.extend({
		hover: function hover(fnOver, fnOut) {
			return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
		}
	});

	jQuery.fn.extend({

		bind: function bind(types, data, fn) {
			return this.on(types, null, data, fn);
		},
		unbind: function unbind(types, fn) {
			return this.off(types, null, fn);
		},

		delegate: function delegate(selector, types, data, fn) {
			return this.on(types, selector, data, fn);
		},
		undelegate: function undelegate(selector, types, fn) {
			return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
		}
	});

	jQuery.proxy = function (fn, context) {
		var tmp, args, proxy;

		if (typeof context === "string") {
			tmp = fn[context];
			context = fn;
			fn = tmp;
		}

		if (!isFunction(fn)) {
			return undefined;
		}

		args = _slice.call(arguments, 2);
		proxy = function proxy() {
			return fn.apply(context || this, args.concat(_slice.call(arguments)));
		};

		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	};

	jQuery.holdReady = function (hold) {
		if (hold) {
			jQuery.readyWait++;
		} else {
			jQuery.ready(true);
		}
	};
	jQuery.isArray = Array.isArray;
	jQuery.parseJSON = JSON.parse;
	jQuery.nodeName = nodeName;
	jQuery.isFunction = isFunction;
	jQuery.isWindow = isWindow;
	jQuery.camelCase = camelCase;
	jQuery.type = toType;

	jQuery.now = Date.now;

	jQuery.isNumeric = function (obj) {
		var type = jQuery.type(obj);
		return (type === "number" || type === "string") && !isNaN(obj - parseFloat(obj));
	};

	if (typeof define === "function" && __webpack_require__(41)) {
		define("jquery", [], function () {
			return jQuery;
		});
	}

	var _jQuery = window.jQuery,
	    _$ = window.$;

	jQuery.noConflict = function (deep) {
		if (window.$ === jQuery) {
			window.$ = _$;
		}

		if (deep && window.jQuery === jQuery) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	};

	if (!noGlobal) {
		window.jQuery = window.$ = jQuery;
	}

	return jQuery;
});
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(3)(module)))

/***/ }),

/***/ 619:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var af = moment.defineLocale('af', {
        months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
        monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
        weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
        weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
        weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
        meridiemParse: /vm|nm/i,
        isPM: function isPM(input) {
            return (/^nm$/i.test(input)
            );
        },
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'vm' : 'VM';
            } else {
                return isLower ? 'nm' : 'NM';
            }
        },
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Vandag om] LT',
            nextDay: '[Môre om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[Gister om] LT',
            lastWeek: '[Laas] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'oor %s',
            past: '%s gelede',
            s: '\'n paar sekondes',
            ss: '%d sekondes',
            m: '\'n minuut',
            mm: '%d minute',
            h: '\'n uur',
            hh: '%d ure',
            d: '\'n dag',
            dd: '%d dae',
            M: '\'n maand',
            MM: '%d maande',
            y: '\'n jaar',
            yy: '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function ordinal(number) {
            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return af;
});

/***/ }),

/***/ 620:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    },
        numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    },
        pluralForm = function pluralForm(n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    },
        plurals = {
        s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    },
        pluralize = function pluralize(u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    },
        months = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];

    var ar = moment.defineLocale('ar', {
        months: months,
        monthsShort: months,
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/\u200FM/\u200FYYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM: function isPM(input) {
            return 'م' === input;
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            ss: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y')
        },
        preparse: function preparse(string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week: {
            dow: 6,
            doy: 12 }
    });

    return ar;
});

/***/ }),

/***/ 621:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var arDz = moment.defineLocale('ar-dz', {
        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
        },
        week: {
            dow: 0,
            doy: 4 }
    });

    return arDz;
});

/***/ }),

/***/ 622:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var arKw = moment.defineLocale('ar-kw', {
        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
        },
        week: {
            dow: 0,
            doy: 12 }
    });

    return arKw;
});

/***/ }),

/***/ 623:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '1',
        '2': '2',
        '3': '3',
        '4': '4',
        '5': '5',
        '6': '6',
        '7': '7',
        '8': '8',
        '9': '9',
        '0': '0'
    },
        pluralForm = function pluralForm(n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    },
        plurals = {
        s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    },
        pluralize = function pluralize(u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    },
        months = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];

    var arLy = moment.defineLocale('ar-ly', {
        months: months,
        monthsShort: months,
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/\u200FM/\u200FYYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM: function isPM(input) {
            return 'م' === input;
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            ss: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y')
        },
        preparse: function preparse(string) {
            return string.replace(/،/g, ',');
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week: {
            dow: 6,
            doy: 12 }
    });

    return arLy;
});

/***/ }),

/***/ 624:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var arMa = moment.defineLocale('ar-ma', {
        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
        },
        week: {
            dow: 6,
            doy: 12 }
    });

    return arMa;
});

/***/ }),

/***/ 625:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    },
        numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    };

    var arSa = moment.defineLocale('ar-sa', {
        months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM: function isPM(input) {
            return 'م' === input;
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
        },
        preparse: function preparse(string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week: {
            dow: 0,
            doy: 6 }
    });

    return arSa;
});

/***/ }),

/***/ 626:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var arTn = moment.defineLocale('ar-tn', {
        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return arTn;
});

/***/ }),

/***/ 627:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var suffixes = {
        1: '-inci',
        5: '-inci',
        8: '-inci',
        70: '-inci',
        80: '-inci',
        2: '-nci',
        7: '-nci',
        20: '-nci',
        50: '-nci',
        3: '-üncü',
        4: '-üncü',
        100: '-üncü',
        6: '-ncı',
        9: '-uncu',
        10: '-uncu',
        30: '-uncu',
        60: '-ıncı',
        90: '-ıncı'
    };

    var az = moment.defineLocale('az', {
        months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
        monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
        weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
        weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
        weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[sabah saat] LT',
            nextWeek: '[gələn həftə] dddd [saat] LT',
            lastDay: '[dünən] LT',
            lastWeek: '[keçən həftə] dddd [saat] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s sonra',
            past: '%s əvvəl',
            s: 'birneçə saniyə',
            ss: '%d saniyə',
            m: 'bir dəqiqə',
            mm: '%d dəqiqə',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir il',
            yy: '%d il'
        },
        meridiemParse: /gecə|səhər|gündüz|axşam/,
        isPM: function isPM(input) {
            return (/^(gündüz|axşam)$/.test(input)
            );
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'gecə';
            } else if (hour < 12) {
                return 'səhər';
            } else if (hour < 17) {
                return 'gündüz';
            } else {
                return 'axşam';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
        ordinal: function ordinal(number) {
            if (number === 0) {
                return number + '-ıncı';
            }
            var a = number % 10,
                b = number % 100 - a,
                c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return az;
});

/***/ }),

/***/ 628:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
            'dd': 'дзень_дні_дзён',
            'MM': 'месяц_месяцы_месяцаў',
            'yy': 'год_гады_гадоў'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвіліна' : 'хвіліну';
        } else if (key === 'h') {
            return withoutSuffix ? 'гадзіна' : 'гадзіну';
        } else {
            return number + ' ' + plural(format[key], +number);
        }
    }

    var be = moment.defineLocale('be', {
        months: {
            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
        },
        monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
        weekdays: {
            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
        },
        weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY г.',
            LLL: 'D MMMM YYYY г., HH:mm',
            LLLL: 'dddd, D MMMM YYYY г., HH:mm'
        },
        calendar: {
            sameDay: '[Сёння ў] LT',
            nextDay: '[Заўтра ў] LT',
            lastDay: '[Учора ў] LT',
            nextWeek: function nextWeek() {
                return '[У] dddd [ў] LT';
            },
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return '[У мінулую] dddd [ў] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[У мінулы] dddd [ў] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'праз %s',
            past: '%s таму',
            s: 'некалькі секунд',
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithPlural,
            hh: relativeTimeWithPlural,
            d: 'дзень',
            dd: relativeTimeWithPlural,
            M: 'месяц',
            MM: relativeTimeWithPlural,
            y: 'год',
            yy: relativeTimeWithPlural
        },
        meridiemParse: /ночы|раніцы|дня|вечара/,
        isPM: function isPM(input) {
            return (/^(дня|вечара)$/.test(input)
            );
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'ночы';
            } else if (hour < 12) {
                return 'раніцы';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечара';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return (number % 10 === 2 || number % 10 === 3) && number % 100 !== 12 && number % 100 !== 13 ? number + '-і' : number + '-ы';
                case 'D':
                    return number + '-га';
                default:
                    return number;
            }
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return be;
});

/***/ }),

/***/ 629:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var bg = moment.defineLocale('bg', {
        months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
        weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
        weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[Днес в] LT',
            nextDay: '[Утре в] LT',
            nextWeek: 'dddd [в] LT',
            lastDay: '[Вчера в] LT',
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[В изминалата] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[В изминалия] dddd [в] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'след %s',
            past: 'преди %s',
            s: 'няколко секунди',
            ss: '%d секунди',
            m: 'минута',
            mm: '%d минути',
            h: 'час',
            hh: '%d часа',
            d: 'ден',
            dd: '%d дни',
            M: 'месец',
            MM: '%d месеца',
            y: 'година',
            yy: '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal: function ordinal(number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return bg;
});

/***/ }),

/***/ 630:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var bm = moment.defineLocale('bm', {
        months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
        monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
        weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
        weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
        weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'MMMM [tile] D [san] YYYY',
            LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
            LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
        },
        calendar: {
            sameDay: '[Bi lɛrɛ] LT',
            nextDay: '[Sini lɛrɛ] LT',
            nextWeek: 'dddd [don lɛrɛ] LT',
            lastDay: '[Kunu lɛrɛ] LT',
            lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s kɔnɔ',
            past: 'a bɛ %s bɔ',
            s: 'sanga dama dama',
            ss: 'sekondi %d',
            m: 'miniti kelen',
            mm: 'miniti %d',
            h: 'lɛrɛ kelen',
            hh: 'lɛrɛ %d',
            d: 'tile kelen',
            dd: 'tile %d',
            M: 'kalo kelen',
            MM: 'kalo %d',
            y: 'san kelen',
            yy: 'san %d'
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return bm;
});

/***/ }),

/***/ 631:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '১',
        '2': '২',
        '3': '৩',
        '4': '৪',
        '5': '৫',
        '6': '৬',
        '7': '৭',
        '8': '৮',
        '9': '৯',
        '0': '০'
    },
        numberMap = {
        '১': '1',
        '২': '2',
        '৩': '3',
        '৪': '4',
        '৫': '5',
        '৬': '6',
        '৭': '7',
        '৮': '8',
        '৯': '9',
        '০': '0'
    };

    var bn = moment.defineLocale('bn', {
        months: 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
        monthsShort: 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
        weekdaysMin: 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
        longDateFormat: {
            LT: 'A h:mm সময়',
            LTS: 'A h:mm:ss সময়',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm সময়',
            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়'
        },
        calendar: {
            sameDay: '[আজ] LT',
            nextDay: '[আগামীকাল] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[গতকাল] LT',
            lastWeek: '[গত] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s পরে',
            past: '%s আগে',
            s: 'কয়েক সেকেন্ড',
            ss: '%d সেকেন্ড',
            m: 'এক মিনিট',
            mm: '%d মিনিট',
            h: 'এক ঘন্টা',
            hh: '%d ঘন্টা',
            d: 'এক দিন',
            dd: '%d দিন',
            M: 'এক মাস',
            MM: '%d মাস',
            y: 'এক বছর',
            yy: '%d বছর'
        },
        preparse: function preparse(string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'রাত' && hour >= 4 || meridiem === 'দুপুর' && hour < 5 || meridiem === 'বিকাল') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'রাত';
            } else if (hour < 10) {
                return 'সকাল';
            } else if (hour < 17) {
                return 'দুপুর';
            } else if (hour < 20) {
                return 'বিকাল';
            } else {
                return 'রাত';
            }
        },
        week: {
            dow: 0,
            doy: 6 }
    });

    return bn;
});

/***/ }),

/***/ 632:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '༡',
        '2': '༢',
        '3': '༣',
        '4': '༤',
        '5': '༥',
        '6': '༦',
        '7': '༧',
        '8': '༨',
        '9': '༩',
        '0': '༠'
    },
        numberMap = {
        '༡': '1',
        '༢': '2',
        '༣': '3',
        '༤': '4',
        '༥': '5',
        '༦': '6',
        '༧': '7',
        '༨': '8',
        '༩': '9',
        '༠': '0'
    };

    var bo = moment.defineLocale('bo', {
        months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        monthsShort: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
        weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        weekdaysMin: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar: {
            sameDay: '[དི་རིང] LT',
            nextDay: '[སང་ཉིན] LT',
            nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay: '[ཁ་སང] LT',
            lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s ལ་',
            past: '%s སྔན་ལ',
            s: 'ལམ་སང',
            ss: '%d སྐར་ཆ།',
            m: 'སྐར་མ་གཅིག',
            mm: '%d སྐར་མ',
            h: 'ཆུ་ཚོད་གཅིག',
            hh: '%d ཆུ་ཚོད',
            d: 'ཉིན་གཅིག',
            dd: '%d ཉིན་',
            M: 'ཟླ་བ་གཅིག',
            MM: '%d ཟླ་བ',
            y: 'ལོ་གཅིག',
            yy: '%d ལོ'
        },
        preparse: function preparse(string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'མཚན་མོ' && hour >= 4 || meridiem === 'ཉིན་གུང' && hour < 5 || meridiem === 'དགོང་དག') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'མཚན་མོ';
            } else if (hour < 10) {
                return 'ཞོགས་ཀས';
            } else if (hour < 17) {
                return 'ཉིན་གུང';
            } else if (hour < 20) {
                return 'དགོང་དག';
            } else {
                return 'མཚན་མོ';
            }
        },
        week: {
            dow: 0,
            doy: 6 }
    });

    return bo;
});

/***/ }),

/***/ 633:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function relativeTimeWithMutation(number, withoutSuffix, key) {
        var format = {
            'mm': 'munutenn',
            'MM': 'miz',
            'dd': 'devezh'
        };
        return number + ' ' + mutation(format[key], number);
    }
    function specialMutationForYears(number) {
        switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
                return number + ' bloaz';
            default:
                return number + ' vloaz';
        }
    }
    function lastNumber(number) {
        if (number > 9) {
            return lastNumber(number % 10);
        }
        return number;
    }
    function mutation(text, number) {
        if (number === 2) {
            return softMutation(text);
        }
        return text;
    }
    function softMutation(text) {
        var mutationTable = {
            'm': 'v',
            'b': 'v',
            'd': 'z'
        };
        if (mutationTable[text.charAt(0)] === undefined) {
            return text;
        }
        return mutationTable[text.charAt(0)] + text.substring(1);
    }

    var br = moment.defineLocale('br', {
        months: 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
        monthsShort: 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
        weekdays: 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
        weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'h[e]mm A',
            LTS: 'h[e]mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D [a viz] MMMM YYYY',
            LLL: 'D [a viz] MMMM YYYY h[e]mm A',
            LLLL: 'dddd, D [a viz] MMMM YYYY h[e]mm A'
        },
        calendar: {
            sameDay: '[Hiziv da] LT',
            nextDay: '[Warc\'hoazh da] LT',
            nextWeek: 'dddd [da] LT',
            lastDay: '[Dec\'h da] LT',
            lastWeek: 'dddd [paset da] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'a-benn %s',
            past: '%s \'zo',
            s: 'un nebeud segondennoù',
            ss: '%d eilenn',
            m: 'ur vunutenn',
            mm: relativeTimeWithMutation,
            h: 'un eur',
            hh: '%d eur',
            d: 'un devezh',
            dd: relativeTimeWithMutation,
            M: 'ur miz',
            MM: relativeTimeWithMutation,
            y: 'ur bloaz',
            yy: specialMutationForYears
        },
        dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
        ordinal: function ordinal(number) {
            var output = number === 1 ? 'añ' : 'vet';
            return number + output;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return br;
});

/***/ }),

/***/ 634:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var bs = moment.defineLocale('bs', {
        months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function nextWeek() {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[jučer u] LT',
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'par sekundi',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: 'dan',
            dd: translate,
            M: 'mjesec',
            MM: translate,
            y: 'godinu',
            yy: translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 7 }
    });

    return bs;
});

/***/ }),

/***/ 635:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var ca = moment.defineLocale('ca', {
        months: {
            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
            format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
            isFormat: /D[oD]?(\s)+MMMM/
        },
        monthsShort: 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
        monthsParseExact: true,
        weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
        weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
        weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [de] YYYY',
            ll: 'D MMM YYYY',
            LLL: 'D MMMM [de] YYYY [a les] H:mm',
            lll: 'D MMM YYYY, H:mm',
            LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',
            llll: 'ddd D MMM YYYY, H:mm'
        },
        calendar: {
            sameDay: function sameDay() {
                return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            nextDay: function nextDay() {
                return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            nextWeek: function nextWeek() {
                return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            lastDay: function lastDay() {
                return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            lastWeek: function lastWeek() {
                return '[el] dddd [passat a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'd\'aquí %s',
            past: 'fa %s',
            s: 'uns segons',
            ss: '%d segons',
            m: 'un minut',
            mm: '%d minuts',
            h: 'una hora',
            hh: '%d hores',
            d: 'un dia',
            dd: '%d dies',
            M: 'un mes',
            MM: '%d mesos',
            y: 'un any',
            yy: '%d anys'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal: function ordinal(number, period) {
            var output = number === 1 ? 'r' : number === 2 ? 'n' : number === 3 ? 'r' : number === 4 ? 't' : 'è';
            if (period === 'w' || period === 'W') {
                output = 'a';
            }
            return number + output;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return ca;
});

/***/ }),

/***/ 636:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
    function plural(n) {
        return n > 1 && n < 5 && ~~(n / 10) !== 1;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';
            case 'ss':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekund');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':
                return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';
            case 'mm':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minuty' : 'minut');
                } else {
                    return result + 'minutami';
                }
                break;
            case 'h':
                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
            case 'hh':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodin');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':
                return withoutSuffix || isFuture ? 'den' : 'dnem';
            case 'dd':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dny' : 'dní');
                } else {
                    return result + 'dny';
                }
                break;
            case 'M':
                return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';
            case 'MM':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'měsíce' : 'měsíců');
                } else {
                    return result + 'měsíci';
                }
                break;
            case 'y':
                return withoutSuffix || isFuture ? 'rok' : 'rokem';
            case 'yy':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'let');
                } else {
                    return result + 'lety';
                }
                break;
        }
    }

    var cs = moment.defineLocale('cs', {
        months: months,
        monthsShort: monthsShort,
        monthsParse: function (months, monthsShort) {
            var i,
                _monthsParse = [];
            for (i = 0; i < 12; i++) {
                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
            }
            return _monthsParse;
        }(months, monthsShort),
        shortMonthsParse: function (monthsShort) {
            var i,
                _shortMonthsParse = [];
            for (i = 0; i < 12; i++) {
                _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
            }
            return _shortMonthsParse;
        }(monthsShort),
        longMonthsParse: function (months) {
            var i,
                _longMonthsParse = [];
            for (i = 0; i < 12; i++) {
                _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
            }
            return _longMonthsParse;
        }(months),
        weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
        weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
        weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd D. MMMM YYYY H:mm',
            l: 'D. M. YYYY'
        },
        calendar: {
            sameDay: '[dnes v] LT',
            nextDay: '[zítra v] LT',
            nextWeek: function nextWeek() {
                switch (this.day()) {
                    case 0:
                        return '[v neděli v] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [v] LT';
                    case 3:
                        return '[ve středu v] LT';
                    case 4:
                        return '[ve čtvrtek v] LT';
                    case 5:
                        return '[v pátek v] LT';
                    case 6:
                        return '[v sobotu v] LT';
                }
            },
            lastDay: '[včera v] LT',
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 0:
                        return '[minulou neděli v] LT';
                    case 1:
                    case 2:
                        return '[minulé] dddd [v] LT';
                    case 3:
                        return '[minulou středu v] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [v] LT';
                    case 6:
                        return '[minulou sobotu v] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'za %s',
            past: 'před %s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return cs;
});

/***/ }),

/***/ 637:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var cv = moment.defineLocale('cv', {
        months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
        monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
        weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
        weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
        weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
            LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
        },
        calendar: {
            sameDay: '[Паян] LT [сехетре]',
            nextDay: '[Ыран] LT [сехетре]',
            lastDay: '[Ӗнер] LT [сехетре]',
            nextWeek: '[Ҫитес] dddd LT [сехетре]',
            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
            sameElse: 'L'
        },
        relativeTime: {
            future: function future(output) {
                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
                return output + affix;
            },
            past: '%s каялла',
            s: 'пӗр-ик ҫеккунт',
            ss: '%d ҫеккунт',
            m: 'пӗр минут',
            mm: '%d минут',
            h: 'пӗр сехет',
            hh: '%d сехет',
            d: 'пӗр кун',
            dd: '%d кун',
            M: 'пӗр уйӑх',
            MM: '%d уйӑх',
            y: 'пӗр ҫул',
            yy: '%d ҫул'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
        ordinal: '%d-мӗш',
        week: {
            dow: 1,
            doy: 7 }
    });

    return cv;
});

/***/ }),

/***/ 638:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var cy = moment.defineLocale('cy', {
        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
        weekdaysParseExact: true,

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Heddiw am] LT',
            nextDay: '[Yfory am] LT',
            nextWeek: 'dddd [am] LT',
            lastDay: '[Ddoe am] LT',
            lastWeek: 'dddd [diwethaf am] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'mewn %s',
            past: '%s yn ôl',
            s: 'ychydig eiliadau',
            ss: '%d eiliad',
            m: 'munud',
            mm: '%d munud',
            h: 'awr',
            hh: '%d awr',
            d: 'diwrnod',
            dd: '%d diwrnod',
            M: 'mis',
            MM: '%d mis',
            y: 'blwyddyn',
            yy: '%d flynedd'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,

        ordinal: function ordinal(number) {
            var b = number,
                output = '',
                lookup = ['', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed'];
            if (b > 20) {
                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                    output = 'fed';
                } else {
                    output = 'ain';
                }
            } else if (b > 0) {
                output = lookup[b];
            }
            return number + output;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return cy;
});

/***/ }),

/***/ 639:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var da = moment.defineLocale('da', {
        months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
        },
        calendar: {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'på dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[i] dddd[s kl.] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'om %s',
            past: '%s siden',
            s: 'få sekunder',
            ss: '%d sekunder',
            m: 'et minut',
            mm: '%d minutter',
            h: 'en time',
            hh: '%d timer',
            d: 'en dag',
            dd: '%d dage',
            M: 'en måned',
            MM: '%d måneder',
            y: 'et år',
            yy: '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return da;
});

/***/ }),

/***/ 640:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var de = moment.defineLocale('de', {
        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact: true,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return de;
});

/***/ }),

/***/ 641:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deAt = moment.defineLocale('de-at', {
        months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort: 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact: true,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return deAt;
});

/***/ }),

/***/ 642:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deCh = moment.defineLocale('de-ch', {
        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact: true,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return deCh;
});

/***/ }),

/***/ 643:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var months = ['ޖެނުއަރީ', 'ފެބްރުއަރީ', 'މާރިޗު', 'އޭޕްރީލު', 'މޭ', 'ޖޫން', 'ޖުލައި', 'އޯގަސްޓު', 'ސެޕްޓެމްބަރު', 'އޮކްޓޯބަރު', 'ނޮވެމްބަރު', 'ޑިސެމްބަރު'],
        weekdays = ['އާދިއްތަ', 'ހޯމަ', 'އަންގާރަ', 'ބުދަ', 'ބުރާސްފަތި', 'ހުކުރު', 'ހޮނިހިރު'];

    var dv = moment.defineLocale('dv', {
        months: months,
        monthsShort: months,
        weekdays: weekdays,
        weekdaysShort: weekdays,
        weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
        longDateFormat: {

            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/M/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /މކ|މފ/,
        isPM: function isPM(input) {
            return 'މފ' === input;
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return 'މކ';
            } else {
                return 'މފ';
            }
        },
        calendar: {
            sameDay: '[މިއަދު] LT',
            nextDay: '[މާދަމާ] LT',
            nextWeek: 'dddd LT',
            lastDay: '[އިއްޔެ] LT',
            lastWeek: '[ފާއިތުވި] dddd LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'ތެރޭގައި %s',
            past: 'ކުރިން %s',
            s: 'ސިކުންތުކޮޅެއް',
            ss: 'd% ސިކުންތު',
            m: 'މިނިޓެއް',
            mm: 'މިނިޓު %d',
            h: 'ގަޑިއިރެއް',
            hh: 'ގަޑިއިރު %d',
            d: 'ދުވަހެއް',
            dd: 'ދުވަސް %d',
            M: 'މަހެއް',
            MM: 'މަސް %d',
            y: 'އަހަރެއް',
            yy: 'އަހަރު %d'
        },
        preparse: function preparse(string) {
            return string.replace(/،/g, ',');
        },
        postformat: function postformat(string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 7,
            doy: 12 }
    });

    return dv;
});

/***/ }),

/***/ 644:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    var el = moment.defineLocale('el', {
        monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
        monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
        months: function months(momentToFormat, format) {
            if (!momentToFormat) {
                return this._monthsNominativeEl;
            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) {
                return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
                return this._monthsNominativeEl[momentToFormat.month()];
            }
        },
        monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
        weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
        weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
        weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'μμ' : 'ΜΜ';
            } else {
                return isLower ? 'πμ' : 'ΠΜ';
            }
        },
        isPM: function isPM(input) {
            return (input + '').toLowerCase()[0] === 'μ';
        },
        meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
        },
        calendarEl: {
            sameDay: '[Σήμερα {}] LT',
            nextDay: '[Αύριο {}] LT',
            nextWeek: 'dddd [{}] LT',
            lastDay: '[Χθες {}] LT',
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 6:
                        return '[το προηγούμενο] dddd [{}] LT';
                    default:
                        return '[την προηγούμενη] dddd [{}] LT';
                }
            },
            sameElse: 'L'
        },
        calendar: function calendar(key, mom) {
            var output = this._calendarEl[key],
                hours = mom && mom.hours();
            if (isFunction(output)) {
                output = output.apply(mom);
            }
            return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');
        },
        relativeTime: {
            future: 'σε %s',
            past: '%s πριν',
            s: 'λίγα δευτερόλεπτα',
            ss: '%d δευτερόλεπτα',
            m: 'ένα λεπτό',
            mm: '%d λεπτά',
            h: 'μία ώρα',
            hh: '%d ώρες',
            d: 'μία μέρα',
            dd: '%d μέρες',
            M: 'ένας μήνας',
            MM: '%d μήνες',
            y: 'ένας χρόνος',
            yy: '%d χρόνια'
        },
        dayOfMonthOrdinalParse: /\d{1,2}η/,
        ordinal: '%dη',
        week: {
            dow: 1,
            doy: 4 }
    });

    return el;
});

/***/ }),

/***/ 645:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var enAu = moment.defineLocale('en-au', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return enAu;
});

/***/ }),

/***/ 646:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var enCa = moment.defineLocale('en-ca', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'YYYY-MM-DD',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY h:mm A',
            LLLL: 'dddd, MMMM D, YYYY h:mm A'
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
        }
    });

    return enCa;
});

/***/ }),

/***/ 647:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var enGb = moment.defineLocale('en-gb', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return enGb;
});

/***/ }),

/***/ 648:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var enIe = moment.defineLocale('en-ie', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return enIe;
});

/***/ }),

/***/ 649:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var enIl = moment.defineLocale('en-il', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
        }
    });

    return enIl;
});

/***/ }),

/***/ 650:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var enNz = moment.defineLocale('en-nz', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return enNz;
});

/***/ }),

/***/ 651:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var eo = moment.defineLocale('eo', {
        months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
        weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
        weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
        weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D[-a de] MMMM, YYYY',
            LLL: 'D[-a de] MMMM, YYYY HH:mm',
            LLLL: 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
        },
        meridiemParse: /[ap]\.t\.m/i,
        isPM: function isPM(input) {
            return input.charAt(0).toLowerCase() === 'p';
        },
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'p.t.m.' : 'P.T.M.';
            } else {
                return isLower ? 'a.t.m.' : 'A.T.M.';
            }
        },
        calendar: {
            sameDay: '[Hodiaŭ je] LT',
            nextDay: '[Morgaŭ je] LT',
            nextWeek: 'dddd [je] LT',
            lastDay: '[Hieraŭ je] LT',
            lastWeek: '[pasinta] dddd [je] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'post %s',
            past: 'antaŭ %s',
            s: 'sekundoj',
            ss: '%d sekundoj',
            m: 'minuto',
            mm: '%d minutoj',
            h: 'horo',
            hh: '%d horoj',
            d: 'tago',
            dd: '%d tagoj',
            M: 'monato',
            MM: '%d monatoj',
            y: 'jaro',
            yy: '%d jaroj'
        },
        dayOfMonthOrdinalParse: /\d{1,2}a/,
        ordinal: '%da',
        week: {
            dow: 1,
            doy: 7 }
    });

    return eo;
});

/***/ }),

/***/ 652:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var es = moment.defineLocale('es', {
        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort: function monthsShort(m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return _monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar: {
            sameDay: function sameDay() {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function nextDay() {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function nextWeek() {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function lastDay() {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function lastWeek() {
                return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1,
            doy: 4 }
    });

    return es;
});

/***/ }),

/***/ 653:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esDo = moment.defineLocale('es-do', {
        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort: function monthsShort(m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return _monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY h:mm A',
            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'
        },
        calendar: {
            sameDay: function sameDay() {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function nextDay() {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function nextWeek() {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function lastDay() {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function lastWeek() {
                return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1,
            doy: 4 }
    });

    return esDo;
});

/***/ }),

/***/ 654:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var esUs = moment.defineLocale('es-us', {
        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort: function monthsShort(m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return _monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsParseExact: true,
        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'MM/DD/YYYY',
            LL: 'MMMM [de] D [de] YYYY',
            LLL: 'MMMM [de] D [de] YYYY h:mm A',
            LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'
        },
        calendar: {
            sameDay: function sameDay() {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function nextDay() {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function nextWeek() {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function lastDay() {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function lastWeek() {
                return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 0,
            doy: 6 }
    });

    return esUs;
});

/***/ }),

/***/ 655:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
            'ss': [number + 'sekundi', number + 'sekundit'],
            'm': ['ühe minuti', 'üks minut'],
            'mm': [number + ' minuti', number + ' minutit'],
            'h': ['ühe tunni', 'tund aega', 'üks tund'],
            'hh': [number + ' tunni', number + ' tundi'],
            'd': ['ühe päeva', 'üks päev'],
            'M': ['kuu aja', 'kuu aega', 'üks kuu'],
            'MM': [number + ' kuu', number + ' kuud'],
            'y': ['ühe aasta', 'aasta', 'üks aasta'],
            'yy': [number + ' aasta', number + ' aastat']
        };
        if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
        }
        return isFuture ? format[key][0] : format[key][1];
    }

    var et = moment.defineLocale('et', {
        months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
        monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
        weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
        weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
        weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[Täna,] LT',
            nextDay: '[Homme,] LT',
            nextWeek: '[Järgmine] dddd LT',
            lastDay: '[Eile,] LT',
            lastWeek: '[Eelmine] dddd LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s pärast',
            past: '%s tagasi',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: '%d päeva',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return et;
});

/***/ }),

/***/ 656:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var eu = moment.defineLocale('eu', {
        months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
        monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
        monthsParseExact: true,
        weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
        weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
        weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY[ko] MMMM[ren] D[a]',
            LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',
            LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
            l: 'YYYY-M-D',
            ll: 'YYYY[ko] MMM D[a]',
            lll: 'YYYY[ko] MMM D[a] HH:mm',
            llll: 'ddd, YYYY[ko] MMM D[a] HH:mm'
        },
        calendar: {
            sameDay: '[gaur] LT[etan]',
            nextDay: '[bihar] LT[etan]',
            nextWeek: 'dddd LT[etan]',
            lastDay: '[atzo] LT[etan]',
            lastWeek: '[aurreko] dddd LT[etan]',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s barru',
            past: 'duela %s',
            s: 'segundo batzuk',
            ss: '%d segundo',
            m: 'minutu bat',
            mm: '%d minutu',
            h: 'ordu bat',
            hh: '%d ordu',
            d: 'egun bat',
            dd: '%d egun',
            M: 'hilabete bat',
            MM: '%d hilabete',
            y: 'urte bat',
            yy: '%d urte'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 7 }
    });

    return eu;
});

/***/ }),

/***/ 657:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '۱',
        '2': '۲',
        '3': '۳',
        '4': '۴',
        '5': '۵',
        '6': '۶',
        '7': '۷',
        '8': '۸',
        '9': '۹',
        '0': '۰'
    },
        numberMap = {
        '۱': '1',
        '۲': '2',
        '۳': '3',
        '۴': '4',
        '۵': '5',
        '۶': '6',
        '۷': '7',
        '۸': '8',
        '۹': '9',
        '۰': '0'
    };

    var fa = moment.defineLocale('fa', {
        months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        weekdays: '\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647'.split('_'),
        weekdaysShort: '\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647'.split('_'),
        weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /قبل از ظهر|بعد از ظهر/,
        isPM: function isPM(input) {
            return (/بعد از ظهر/.test(input)
            );
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return 'قبل از ظهر';
            } else {
                return 'بعد از ظهر';
            }
        },
        calendar: {
            sameDay: '[امروز ساعت] LT',
            nextDay: '[فردا ساعت] LT',
            nextWeek: 'dddd [ساعت] LT',
            lastDay: '[دیروز ساعت] LT',
            lastWeek: 'dddd [پیش] [ساعت] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'در %s',
            past: '%s پیش',
            s: 'چند ثانیه',
            ss: 'ثانیه d%',
            m: 'یک دقیقه',
            mm: '%d دقیقه',
            h: 'یک ساعت',
            hh: '%d ساعت',
            d: 'یک روز',
            dd: '%d روز',
            M: 'یک ماه',
            MM: '%d ماه',
            y: 'یک سال',
            yy: '%d سال'
        },
        preparse: function preparse(string) {
            return string.replace(/[۰-۹]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        dayOfMonthOrdinalParse: /\d{1,2}م/,
        ordinal: '%dم',
        week: {
            dow: 6,
            doy: 12 }
    });

    return fa;
});

/***/ }),

/***/ 658:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
        numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', numbersPast[7], numbersPast[8], numbersPast[9]];
    function translate(number, withoutSuffix, key, isFuture) {
        var result = '';
        switch (key) {
            case 's':
                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
            case 'ss':
                return isFuture ? 'sekunnin' : 'sekuntia';
            case 'm':
                return isFuture ? 'minuutin' : 'minuutti';
            case 'mm':
                result = isFuture ? 'minuutin' : 'minuuttia';
                break;
            case 'h':
                return isFuture ? 'tunnin' : 'tunti';
            case 'hh':
                result = isFuture ? 'tunnin' : 'tuntia';
                break;
            case 'd':
                return isFuture ? 'päivän' : 'päivä';
            case 'dd':
                result = isFuture ? 'päivän' : 'päivää';
                break;
            case 'M':
                return isFuture ? 'kuukauden' : 'kuukausi';
            case 'MM':
                result = isFuture ? 'kuukauden' : 'kuukautta';
                break;
            case 'y':
                return isFuture ? 'vuoden' : 'vuosi';
            case 'yy':
                result = isFuture ? 'vuoden' : 'vuotta';
                break;
        }
        result = verbalNumber(number, isFuture) + ' ' + result;
        return result;
    }
    function verbalNumber(number, isFuture) {
        return number < 10 ? isFuture ? numbersFuture[number] : numbersPast[number] : number;
    }

    var fi = moment.defineLocale('fi', {
        months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
        monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
        weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
        weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
        weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD.MM.YYYY',
            LL: 'Do MMMM[ta] YYYY',
            LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l: 'D.M.YYYY',
            ll: 'Do MMM YYYY',
            lll: 'Do MMM YYYY, [klo] HH.mm',
            llll: 'ddd, Do MMM YYYY, [klo] HH.mm'
        },
        calendar: {
            sameDay: '[tänään] [klo] LT',
            nextDay: '[huomenna] [klo] LT',
            nextWeek: 'dddd [klo] LT',
            lastDay: '[eilen] [klo] LT',
            lastWeek: '[viime] dddd[na] [klo] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s päästä',
            past: '%s sitten',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return fi;
});

/***/ }),

/***/ 659:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var fo = moment.defineLocale('fo', {
        months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
        weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
        weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D. MMMM, YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Í dag kl.] LT',
            nextDay: '[Í morgin kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[Í gjár kl.] LT',
            lastWeek: '[síðstu] dddd [kl] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'um %s',
            past: '%s síðani',
            s: 'fá sekund',
            ss: '%d sekundir',
            m: 'ein minutt',
            mm: '%d minuttir',
            h: 'ein tími',
            hh: '%d tímar',
            d: 'ein dagur',
            dd: '%d dagar',
            M: 'ein mánaði',
            MM: '%d mánaðir',
            y: 'eitt ár',
            yy: '%d ár'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return fo;
});

/***/ }),

/***/ 660:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var fr = moment.defineLocale('fr', {
        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact: true,
        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'D':
                    return number + (number === 1 ? 'er' : '');

                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return fr;
});

/***/ }),

/***/ 661:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var frCa = moment.defineLocale('fr-ca', {
        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact: true,
        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        }
    });

    return frCa;
});

/***/ }),

/***/ 662:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var frCh = moment.defineLocale('fr-ch', {
        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact: true,
        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return frCh;
});

/***/ }),

/***/ 663:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

    var fy = moment.defineLocale('fy', {
        months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
        monthsShort: function monthsShort(m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },
        monthsParseExact: true,
        weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
        weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
        weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'oer %s',
            past: '%s lyn',
            s: 'in pear sekonden',
            ss: '%d sekonden',
            m: 'ien minút',
            mm: '%d minuten',
            h: 'ien oere',
            hh: '%d oeren',
            d: 'ien dei',
            dd: '%d dagen',
            M: 'ien moanne',
            MM: '%d moannen',
            y: 'ien jier',
            yy: '%d jierren'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function ordinal(number) {
            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return fy;
});

/***/ }),

/***/ 664:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var months = ['Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'];

    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

    var gd = moment.defineLocale('gd', {
        months: months,
        monthsShort: monthsShort,
        monthsParseExact: true,
        weekdays: weekdays,
        weekdaysShort: weekdaysShort,
        weekdaysMin: weekdaysMin,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[An-diugh aig] LT',
            nextDay: '[A-màireach aig] LT',
            nextWeek: 'dddd [aig] LT',
            lastDay: '[An-dè aig] LT',
            lastWeek: 'dddd [seo chaidh] [aig] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'ann an %s',
            past: 'bho chionn %s',
            s: 'beagan diogan',
            ss: '%d diogan',
            m: 'mionaid',
            mm: '%d mionaidean',
            h: 'uair',
            hh: '%d uairean',
            d: 'latha',
            dd: '%d latha',
            M: 'mìos',
            MM: '%d mìosan',
            y: 'bliadhna',
            yy: '%d bliadhna'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
        ordinal: function ordinal(number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return gd;
});

/***/ }),

/***/ 665:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var gl = moment.defineLocale('gl', {
        months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
        monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar: {
            sameDay: function sameDay() {
                return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
            },
            nextDay: function nextDay() {
                return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
            },
            nextWeek: function nextWeek() {
                return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
            },
            lastDay: function lastDay() {
                return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';
            },
            lastWeek: function lastWeek() {
                return '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: function future(str) {
                if (str.indexOf('un') === 0) {
                    return 'n' + str;
                }
                return 'en ' + str;
            },
            past: 'hai %s',
            s: 'uns segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'unha hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un ano',
            yy: '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1,
            doy: 4 }
    });

    return gl;
});

/***/ }),

/***/ 666:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['thodde secondanim', 'thodde second'],
            'ss': [number + ' secondanim', number + ' second'],
            'm': ['eka mintan', 'ek minute'],
            'mm': [number + ' mintanim', number + ' mintam'],
            'h': ['eka horan', 'ek hor'],
            'hh': [number + ' horanim', number + ' horam'],
            'd': ['eka disan', 'ek dis'],
            'dd': [number + ' disanim', number + ' dis'],
            'M': ['eka mhoinean', 'ek mhoino'],
            'MM': [number + ' mhoineanim', number + ' mhoine'],
            'y': ['eka vorsan', 'ek voros'],
            'yy': [number + ' vorsanim', number + ' vorsam']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var gomLatn = moment.defineLocale('gom-latn', {
        months: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
        monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
        monthsParseExact: true,
        weekdays: 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
        weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
        weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'A h:mm [vazta]',
            LTS: 'A h:mm:ss [vazta]',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY A h:mm [vazta]',
            LLLL: 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
        },
        calendar: {
            sameDay: '[Aiz] LT',
            nextDay: '[Faleam] LT',
            nextWeek: '[Ieta to] dddd[,] LT',
            lastDay: '[Kal] LT',
            lastWeek: '[Fatlo] dddd[,] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s',
            past: '%s adim',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'D':
                    return number + 'er';
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                    return number;
            }
        },
        week: {
            dow: 1,
            doy: 4 },
        meridiemParse: /rati|sokalli|donparam|sanje/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'rati') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'sokalli') {
                return hour;
            } else if (meridiem === 'donparam') {
                return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'sanje') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'rati';
            } else if (hour < 12) {
                return 'sokalli';
            } else if (hour < 16) {
                return 'donparam';
            } else if (hour < 20) {
                return 'sanje';
            } else {
                return 'rati';
            }
        }
    });

    return gomLatn;
});

/***/ }),

/***/ 667:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '૧',
        '2': '૨',
        '3': '૩',
        '4': '૪',
        '5': '૫',
        '6': '૬',
        '7': '૭',
        '8': '૮',
        '9': '૯',
        '0': '૦'
    },
        numberMap = {
        '૧': '1',
        '૨': '2',
        '૩': '3',
        '૪': '4',
        '૫': '5',
        '૬': '6',
        '૭': '7',
        '૮': '8',
        '૯': '9',
        '૦': '0'
    };

    var gu = moment.defineLocale('gu', {
        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
        monthsParseExact: true,
        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm વાગ્યે',
            LTS: 'A h:mm:ss વાગ્યે',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
        },
        calendar: {
            sameDay: '[આજ] LT',
            nextDay: '[કાલે] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ગઇકાલે] LT',
            lastWeek: '[પાછલા] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s મા',
            past: '%s પેહલા',
            s: 'અમુક પળો',
            ss: '%d સેકંડ',
            m: 'એક મિનિટ',
            mm: '%d મિનિટ',
            h: 'એક કલાક',
            hh: '%d કલાક',
            d: 'એક દિવસ',
            dd: '%d દિવસ',
            M: 'એક મહિનો',
            MM: '%d મહિનો',
            y: 'એક વર્ષ',
            yy: '%d વર્ષ'
        },
        preparse: function preparse(string) {
            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },

        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'રાત') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'સવાર') {
                return hour;
            } else if (meridiem === 'બપોર') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'સાંજ') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'રાત';
            } else if (hour < 10) {
                return 'સવાર';
            } else if (hour < 17) {
                return 'બપોર';
            } else if (hour < 20) {
                return 'સાંજ';
            } else {
                return 'રાત';
            }
        },
        week: {
            dow: 0,
            doy: 6 }
    });

    return gu;
});

/***/ }),

/***/ 668:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var he = moment.defineLocale('he', {
        months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
        monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
        weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
        weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
        weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [ב]MMMM YYYY',
            LLL: 'D [ב]MMMM YYYY HH:mm',
            LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',
            l: 'D/M/YYYY',
            ll: 'D MMM YYYY',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd, D MMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[היום ב־]LT',
            nextDay: '[מחר ב־]LT',
            nextWeek: 'dddd [בשעה] LT',
            lastDay: '[אתמול ב־]LT',
            lastWeek: '[ביום] dddd [האחרון בשעה] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'בעוד %s',
            past: 'לפני %s',
            s: 'מספר שניות',
            ss: '%d שניות',
            m: 'דקה',
            mm: '%d דקות',
            h: 'שעה',
            hh: function hh(number) {
                if (number === 2) {
                    return 'שעתיים';
                }
                return number + ' שעות';
            },
            d: 'יום',
            dd: function dd(number) {
                if (number === 2) {
                    return 'יומיים';
                }
                return number + ' ימים';
            },
            M: 'חודש',
            MM: function MM(number) {
                if (number === 2) {
                    return 'חודשיים';
                }
                return number + ' חודשים';
            },
            y: 'שנה',
            yy: function yy(number) {
                if (number === 2) {
                    return 'שנתיים';
                } else if (number % 10 === 0 && number !== 10) {
                    return number + ' שנה';
                }
                return number + ' שנים';
            }
        },
        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
        isPM: function isPM(input) {
            return (/^(אחה"צ|אחרי הצהריים|בערב)$/.test(input)
            );
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 5) {
                return 'לפנות בוקר';
            } else if (hour < 10) {
                return 'בבוקר';
            } else if (hour < 12) {
                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
            } else if (hour < 18) {
                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
            } else {
                return 'בערב';
            }
        }
    });

    return he;
});

/***/ }),

/***/ 669:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
        numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var hi = moment.defineLocale('hi', {
        months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
        monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
        monthsParseExact: true,
        weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat: {
            LT: 'A h:mm बजे',
            LTS: 'A h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'
        },
        calendar: {
            sameDay: '[आज] LT',
            nextDay: '[कल] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[कल] LT',
            lastWeek: '[पिछले] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s में',
            past: '%s पहले',
            s: 'कुछ ही क्षण',
            ss: '%d सेकंड',
            m: 'एक मिनट',
            mm: '%d मिनट',
            h: 'एक घंटा',
            hh: '%d घंटे',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महीने',
            MM: '%d महीने',
            y: 'एक वर्ष',
            yy: '%d वर्ष'
        },
        preparse: function preparse(string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },

        meridiemParse: /रात|सुबह|दोपहर|शाम/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सुबह') {
                return hour;
            } else if (meridiem === 'दोपहर') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'शाम') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'रात';
            } else if (hour < 10) {
                return 'सुबह';
            } else if (hour < 17) {
                return 'दोपहर';
            } else if (hour < 20) {
                return 'शाम';
            } else {
                return 'रात';
            }
        },
        week: {
            dow: 0,
            doy: 6 }
    });

    return hi;
});

/***/ }),

/***/ 670:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var hr = moment.defineLocale('hr', {
        months: {
            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
        },
        monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
        monthsParseExact: true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function nextWeek() {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[jučer u] LT',
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'par sekundi',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: 'dan',
            dd: translate,
            M: 'mjesec',
            MM: translate,
            y: 'godinu',
            yy: translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 7 }
    });

    return hr;
});

/***/ }),

/***/ 671:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
    function translate(number, withoutSuffix, key, isFuture) {
        var num = number;
        switch (key) {
            case 's':
                return isFuture || withoutSuffix ? 'néhány másodperc' : 'néhány másodperce';
            case 'ss':
                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';
            case 'm':
                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'mm':
                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'h':
                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'hh':
                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'd':
                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'dd':
                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'M':
                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'MM':
                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'y':
                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
            case 'yy':
                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
        }
        return '';
    }
    function week(isFuture) {
        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
    }

    var hu = moment.defineLocale('hu', {
        months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
        monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
        weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
        weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
        weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'YYYY.MM.DD.',
            LL: 'YYYY. MMMM D.',
            LLL: 'YYYY. MMMM D. H:mm',
            LLLL: 'YYYY. MMMM D., dddd H:mm'
        },
        meridiemParse: /de|du/i,
        isPM: function isPM(input) {
            return input.charAt(1).toLowerCase() === 'u';
        },
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 12) {
                return isLower === true ? 'de' : 'DE';
            } else {
                return isLower === true ? 'du' : 'DU';
            }
        },
        calendar: {
            sameDay: '[ma] LT[-kor]',
            nextDay: '[holnap] LT[-kor]',
            nextWeek: function nextWeek() {
                return week.call(this, true);
            },
            lastDay: '[tegnap] LT[-kor]',
            lastWeek: function lastWeek() {
                return week.call(this, false);
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s múlva',
            past: '%s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return hu;
});

/***/ }),

/***/ 672:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var hyAm = moment.defineLocale('hy-am', {
        months: {
            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
        },
        monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
        weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
        weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY թ.',
            LLL: 'D MMMM YYYY թ., HH:mm',
            LLLL: 'dddd, D MMMM YYYY թ., HH:mm'
        },
        calendar: {
            sameDay: '[այսօր] LT',
            nextDay: '[վաղը] LT',
            lastDay: '[երեկ] LT',
            nextWeek: function nextWeek() {
                return 'dddd [օրը ժամը] LT';
            },
            lastWeek: function lastWeek() {
                return '[անցած] dddd [օրը ժամը] LT';
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s հետո',
            past: '%s առաջ',
            s: 'մի քանի վայրկյան',
            ss: '%d վայրկյան',
            m: 'րոպե',
            mm: '%d րոպե',
            h: 'ժամ',
            hh: '%d ժամ',
            d: 'օր',
            dd: '%d օր',
            M: 'ամիս',
            MM: '%d ամիս',
            y: 'տարի',
            yy: '%d տարի'
        },
        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
        isPM: function isPM(input) {
            return (/^(ցերեկվա|երեկոյան)$/.test(input)
            );
        },
        meridiem: function meridiem(hour) {
            if (hour < 4) {
                return 'գիշերվա';
            } else if (hour < 12) {
                return 'առավոտվա';
            } else if (hour < 17) {
                return 'ցերեկվա';
            } else {
                return 'երեկոյան';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'DDD':
                case 'w':
                case 'W':
                case 'DDDo':
                    if (number === 1) {
                        return number + '-ին';
                    }
                    return number + '-րդ';
                default:
                    return number;
            }
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return hyAm;
});

/***/ }),

/***/ 673:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var id = moment.defineLocale('id', {
        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
        weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
        weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|siang|sore|malam/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'siang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sore' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'siang';
            } else if (hours < 19) {
                return 'sore';
            } else {
                return 'malam';
            }
        },
        calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Besok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kemarin pukul] LT',
            lastWeek: 'dddd [lalu pukul] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'dalam %s',
            past: '%s yang lalu',
            s: 'beberapa detik',
            ss: '%d detik',
            m: 'semenit',
            mm: '%d menit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun'
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return id;
});

/***/ }),

/***/ 674:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function plural(n) {
        if (n % 100 === 11) {
            return true;
        } else if (n % 10 === 1) {
            return false;
        }
        return true;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
            case 'ss':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');
                }
                return result + 'sekúnda';
            case 'm':
                return withoutSuffix ? 'mínúta' : 'mínútu';
            case 'mm':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
                } else if (withoutSuffix) {
                    return result + 'mínúta';
                }
                return result + 'mínútu';
            case 'hh':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
                }
                return result + 'klukkustund';
            case 'd':
                if (withoutSuffix) {
                    return 'dagur';
                }
                return isFuture ? 'dag' : 'degi';
            case 'dd':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'dagar';
                    }
                    return result + (isFuture ? 'daga' : 'dögum');
                } else if (withoutSuffix) {
                    return result + 'dagur';
                }
                return result + (isFuture ? 'dag' : 'degi');
            case 'M':
                if (withoutSuffix) {
                    return 'mánuður';
                }
                return isFuture ? 'mánuð' : 'mánuði';
            case 'MM':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'mánuðir';
                    }
                    return result + (isFuture ? 'mánuði' : 'mánuðum');
                } else if (withoutSuffix) {
                    return result + 'mánuður';
                }
                return result + (isFuture ? 'mánuð' : 'mánuði');
            case 'y':
                return withoutSuffix || isFuture ? 'ár' : 'ári';
            case 'yy':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
                }
                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
        }
    }

    var is = moment.defineLocale('is', {
        months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
        monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
        weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
        weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
        weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] H:mm',
            LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm'
        },
        calendar: {
            sameDay: '[í dag kl.] LT',
            nextDay: '[á morgun kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[í gær kl.] LT',
            lastWeek: '[síðasta] dddd [kl.] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'eftir %s',
            past: 'fyrir %s síðan',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: 'klukkustund',
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return is;
});

/***/ }),

/***/ 675:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var it = moment.defineLocale('it', {
        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: function future(s) {
                return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past: '%s fa',
            s: 'alcuni secondi',
            ss: '%d secondi',
            m: 'un minuto',
            mm: '%d minuti',
            h: 'un\'ora',
            hh: '%d ore',
            d: 'un giorno',
            dd: '%d giorni',
            M: 'un mese',
            MM: '%d mesi',
            y: 'un anno',
            yy: '%d anni'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1,
            doy: 4 }
    });

    return it;
});

/***/ }),

/***/ 676:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var ja = moment.defineLocale('ja', {
        months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
        weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
        weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日 dddd HH:mm',
            l: 'YYYY/MM/DD',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日(ddd) HH:mm'
        },
        meridiemParse: /午前|午後/i,
        isPM: function isPM(input) {
            return input === '午後';
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return '午前';
            } else {
                return '午後';
            }
        },
        calendar: {
            sameDay: '[今日] LT',
            nextDay: '[明日] LT',
            nextWeek: function nextWeek(now) {
                if (now.week() < this.week()) {
                    return '[来週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            lastDay: '[昨日] LT',
            lastWeek: function lastWeek(now) {
                if (this.week() < now.week()) {
                    return '[先週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            sameElse: 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}日/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s後',
            past: '%s前',
            s: '数秒',
            ss: '%d秒',
            m: '1分',
            mm: '%d分',
            h: '1時間',
            hh: '%d時間',
            d: '1日',
            dd: '%d日',
            M: '1ヶ月',
            MM: '%dヶ月',
            y: '1年',
            yy: '%d年'
        }
    });

    return ja;
});

/***/ }),

/***/ 677:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var jv = moment.defineLocale('jv', {
        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
        weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
        weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /enjing|siyang|sonten|ndalu/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'enjing') {
                return hour;
            } else if (meridiem === 'siyang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 11) {
                return 'enjing';
            } else if (hours < 15) {
                return 'siyang';
            } else if (hours < 19) {
                return 'sonten';
            } else {
                return 'ndalu';
            }
        },
        calendar: {
            sameDay: '[Dinten puniko pukul] LT',
            nextDay: '[Mbenjang pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kala wingi pukul] LT',
            lastWeek: 'dddd [kepengker pukul] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'wonten ing %s',
            past: '%s ingkang kepengker',
            s: 'sawetawis detik',
            ss: '%d detik',
            m: 'setunggal menit',
            mm: '%d menit',
            h: 'setunggal jam',
            hh: '%d jam',
            d: 'sedinten',
            dd: '%d dinten',
            M: 'sewulan',
            MM: '%d wulan',
            y: 'setaun',
            yy: '%d taun'
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return jv;
});

/***/ }),

/***/ 678:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var ka = moment.defineLocale('ka', {
        months: {
            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
        },
        monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
        weekdays: {
            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
            isFormat: /(წინა|შემდეგ)/
        },
        weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
        weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
        },
        calendar: {
            sameDay: '[დღეს] LT[-ზე]',
            nextDay: '[ხვალ] LT[-ზე]',
            lastDay: '[გუშინ] LT[-ზე]',
            nextWeek: '[შემდეგ] dddd LT[-ზე]',
            lastWeek: '[წინა] dddd LT-ზე',
            sameElse: 'L'
        },
        relativeTime: {
            future: function future(s) {
                return (/(წამი|წუთი|საათი|წელი)/.test(s) ? s.replace(/ი$/, 'ში') : s + 'ში'
                );
            },
            past: function past(s) {
                if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {
                    return s.replace(/(ი|ე)$/, 'ის წინ');
                }
                if (/წელი/.test(s)) {
                    return s.replace(/წელი$/, 'წლის წინ');
                }
            },
            s: 'რამდენიმე წამი',
            ss: '%d წამი',
            m: 'წუთი',
            mm: '%d წუთი',
            h: 'საათი',
            hh: '%d საათი',
            d: 'დღე',
            dd: '%d დღე',
            M: 'თვე',
            MM: '%d თვე',
            y: 'წელი',
            yy: '%d წელი'
        },
        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
        ordinal: function ordinal(number) {
            if (number === 0) {
                return number;
            }
            if (number === 1) {
                return number + '-ლი';
            }
            if (number < 20 || number <= 100 && number % 20 === 0 || number % 100 === 0) {
                return 'მე-' + number;
            }
            return number + '-ე';
        },
        week: {
            dow: 1,
            doy: 7
        }
    });

    return ka;
});

/***/ }),

/***/ 679:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var suffixes = {
        0: '-ші',
        1: '-ші',
        2: '-ші',
        3: '-ші',
        4: '-ші',
        5: '-ші',
        6: '-шы',
        7: '-ші',
        8: '-ші',
        9: '-шы',
        10: '-шы',
        20: '-шы',
        30: '-шы',
        40: '-шы',
        50: '-ші',
        60: '-шы',
        70: '-ші',
        80: '-ші',
        90: '-шы',
        100: '-ші'
    };

    var kk = moment.defineLocale('kk', {
        months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
        monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
        weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
        weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
        weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Бүгін сағат] LT',
            nextDay: '[Ертең сағат] LT',
            nextWeek: 'dddd [сағат] LT',
            lastDay: '[Кеше сағат] LT',
            lastWeek: '[Өткен аптаның] dddd [сағат] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s ішінде',
            past: '%s бұрын',
            s: 'бірнеше секунд',
            ss: '%d секунд',
            m: 'бір минут',
            mm: '%d минут',
            h: 'бір сағат',
            hh: '%d сағат',
            d: 'бір күн',
            dd: '%d күн',
            M: 'бір ай',
            MM: '%d ай',
            y: 'бір жыл',
            yy: '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
        ordinal: function ordinal(number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return kk;
});

/***/ }),

/***/ 680:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '១',
        '2': '២',
        '3': '៣',
        '4': '៤',
        '5': '៥',
        '6': '៦',
        '7': '៧',
        '8': '៨',
        '9': '៩',
        '0': '០'
    },
        numberMap = {
        '១': '1',
        '២': '2',
        '៣': '3',
        '៤': '4',
        '៥': '5',
        '៦': '6',
        '៧': '7',
        '៨': '8',
        '៩': '9',
        '០': '0'
    };

    var km = moment.defineLocale('km', {
        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /ព្រឹក|ល្ងាច/,
        isPM: function isPM(input) {
            return input === 'ល្ងាច';
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return 'ព្រឹក';
            } else {
                return 'ល្ងាច';
            }
        },
        calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            ss: '%d វិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ'
        },
        dayOfMonthOrdinalParse: /ទី\d{1,2}/,
        ordinal: 'ទី%d',
        preparse: function preparse(string) {
            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return km;
});

/***/ }),

/***/ 681:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '೧',
        '2': '೨',
        '3': '೩',
        '4': '೪',
        '5': '೫',
        '6': '೬',
        '7': '೭',
        '8': '೮',
        '9': '೯',
        '0': '೦'
    },
        numberMap = {
        '೧': '1',
        '೨': '2',
        '೩': '3',
        '೪': '4',
        '೫': '5',
        '೬': '6',
        '೭': '7',
        '೮': '8',
        '೯': '9',
        '೦': '0'
    };

    var kn = moment.defineLocale('kn', {
        months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
        monthsShort: 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),
        monthsParseExact: true,
        weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
        weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
        weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar: {
            sameDay: '[ಇಂದು] LT',
            nextDay: '[ನಾಳೆ] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ನಿನ್ನೆ] LT',
            lastWeek: '[ಕೊನೆಯ] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s ನಂತರ',
            past: '%s ಹಿಂದೆ',
            s: 'ಕೆಲವು ಕ್ಷಣಗಳು',
            ss: '%d ಸೆಕೆಂಡುಗಳು',
            m: 'ಒಂದು ನಿಮಿಷ',
            mm: '%d ನಿಮಿಷ',
            h: 'ಒಂದು ಗಂಟೆ',
            hh: '%d ಗಂಟೆ',
            d: 'ಒಂದು ದಿನ',
            dd: '%d ದಿನ',
            M: 'ಒಂದು ತಿಂಗಳು',
            MM: '%d ತಿಂಗಳು',
            y: 'ಒಂದು ವರ್ಷ',
            yy: '%d ವರ್ಷ'
        },
        preparse: function preparse(string) {
            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ರಾತ್ರಿ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
                return hour;
            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ಸಂಜೆ') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'ರಾತ್ರಿ';
            } else if (hour < 10) {
                return 'ಬೆಳಿಗ್ಗೆ';
            } else if (hour < 17) {
                return 'ಮಧ್ಯಾಹ್ನ';
            } else if (hour < 20) {
                return 'ಸಂಜೆ';
            } else {
                return 'ರಾತ್ರಿ';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
        ordinal: function ordinal(number) {
            return number + 'ನೇ';
        },
        week: {
            dow: 0,
            doy: 6 }
    });

    return kn;
});

/***/ }),

/***/ 682:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var ko = moment.defineLocale('ko', {
        months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
        weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
        weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'YYYY.MM.DD.',
            LL: 'YYYY년 MMMM D일',
            LLL: 'YYYY년 MMMM D일 A h:mm',
            LLLL: 'YYYY년 MMMM D일 dddd A h:mm',
            l: 'YYYY.MM.DD.',
            ll: 'YYYY년 MMMM D일',
            lll: 'YYYY년 MMMM D일 A h:mm',
            llll: 'YYYY년 MMMM D일 dddd A h:mm'
        },
        calendar: {
            sameDay: '오늘 LT',
            nextDay: '내일 LT',
            nextWeek: 'dddd LT',
            lastDay: '어제 LT',
            lastWeek: '지난주 dddd LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s 후',
            past: '%s 전',
            s: '몇 초',
            ss: '%d초',
            m: '1분',
            mm: '%d분',
            h: '한 시간',
            hh: '%d시간',
            d: '하루',
            dd: '%d일',
            M: '한 달',
            MM: '%d달',
            y: '일 년',
            yy: '%d년'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '일';
                case 'M':
                    return number + '월';
                case 'w':
                case 'W':
                    return number + '주';
                default:
                    return number;
            }
        },
        meridiemParse: /오전|오후/,
        isPM: function isPM(token) {
            return token === '오후';
        },
        meridiem: function meridiem(hour, minute, isUpper) {
            return hour < 12 ? '오전' : '오후';
        }
    });

    return ko;
});

/***/ }),

/***/ 683:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var suffixes = {
        0: '-чү',
        1: '-чи',
        2: '-чи',
        3: '-чү',
        4: '-чү',
        5: '-чи',
        6: '-чы',
        7: '-чи',
        8: '-чи',
        9: '-чу',
        10: '-чу',
        20: '-чы',
        30: '-чу',
        40: '-чы',
        50: '-чү',
        60: '-чы',
        70: '-чи',
        80: '-чи',
        90: '-чу',
        100: '-чү'
    };

    var ky = moment.defineLocale('ky', {
        months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
        monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
        weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
        weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
        weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Бүгүн саат] LT',
            nextDay: '[Эртең саат] LT',
            nextWeek: 'dddd [саат] LT',
            lastDay: '[Кече саат] LT',
            lastWeek: '[Өткен аптанын] dddd [күнү] [саат] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s ичинде',
            past: '%s мурун',
            s: 'бирнече секунд',
            ss: '%d секунд',
            m: 'бир мүнөт',
            mm: '%d мүнөт',
            h: 'бир саат',
            hh: '%d саат',
            d: 'бир күн',
            dd: '%d күн',
            M: 'бир ай',
            MM: '%d ай',
            y: 'бир жыл',
            yy: '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
        ordinal: function ordinal(number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return ky;
});

/***/ }),

/***/ 684:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eng Minutt', 'enger Minutt'],
            'h': ['eng Stonn', 'enger Stonn'],
            'd': ['een Dag', 'engem Dag'],
            'M': ['ee Mount', 'engem Mount'],
            'y': ['ee Joer', 'engem Joer']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }
    function processFutureTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'a ' + string;
        }
        return 'an ' + string;
    }
    function processPastTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'viru ' + string;
        }
        return 'virun ' + string;
    }

    function eifelerRegelAppliesToNumber(number) {
        number = parseInt(number, 10);
        if (isNaN(number)) {
            return false;
        }
        if (number < 0) {
            return true;
        } else if (number < 10) {
            if (4 <= number && number <= 7) {
                return true;
            }
            return false;
        } else if (number < 100) {
            var lastDigit = number % 10,
                firstDigit = number / 10;
            if (lastDigit === 0) {
                return eifelerRegelAppliesToNumber(firstDigit);
            }
            return eifelerRegelAppliesToNumber(lastDigit);
        } else if (number < 10000) {
            while (number >= 10) {
                number = number / 10;
            }
            return eifelerRegelAppliesToNumber(number);
        } else {
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
        }
    }

    var lb = moment.defineLocale('lb', {
        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
        monthsParseExact: true,
        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm [Auer]',
            LTS: 'H:mm:ss [Auer]',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm [Auer]',
            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
        },
        calendar: {
            sameDay: '[Haut um] LT',
            sameElse: 'L',
            nextDay: '[Muer um] LT',
            nextWeek: 'dddd [um] LT',
            lastDay: '[Gëschter um] LT',
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 2:
                    case 4:
                        return '[Leschten] dddd [um] LT';
                    default:
                        return '[Leschte] dddd [um] LT';
                }
            }
        },
        relativeTime: {
            future: processFutureTime,
            past: processPastTime,
            s: 'e puer Sekonnen',
            ss: '%d Sekonnen',
            m: processRelativeTime,
            mm: '%d Minutten',
            h: processRelativeTime,
            hh: '%d Stonnen',
            d: processRelativeTime,
            dd: '%d Deeg',
            M: processRelativeTime,
            MM: '%d Méint',
            y: processRelativeTime,
            yy: '%d Joer'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return lb;
});

/***/ }),

/***/ 685:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var lo = moment.defineLocale('lo', {
        months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'ວັນdddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
        isPM: function isPM(input) {
            return input === 'ຕອນແລງ';
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return 'ຕອນເຊົ້າ';
            } else {
                return 'ຕອນແລງ';
            }
        },
        calendar: {
            sameDay: '[ມື້ນີ້ເວລາ] LT',
            nextDay: '[ມື້ອື່ນເວລາ] LT',
            nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',
            lastDay: '[ມື້ວານນີ້ເວລາ] LT',
            lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'ອີກ %s',
            past: '%sຜ່ານມາ',
            s: 'ບໍ່ເທົ່າໃດວິນາທີ',
            ss: '%d ວິນາທີ',
            m: '1 ນາທີ',
            mm: '%d ນາທີ',
            h: '1 ຊົ່ວໂມງ',
            hh: '%d ຊົ່ວໂມງ',
            d: '1 ມື້',
            dd: '%d ມື້',
            M: '1 ເດືອນ',
            MM: '%d ເດືອນ',
            y: '1 ປີ',
            yy: '%d ປີ'
        },
        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
        ordinal: function ordinal(number) {
            return 'ທີ່' + number;
        }
    });

    return lo;
});

/***/ }),

/***/ 686:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var units = {
        'ss': 'sekundė_sekundžių_sekundes',
        'm': 'minutė_minutės_minutę',
        'mm': 'minutės_minučių_minutes',
        'h': 'valanda_valandos_valandą',
        'hh': 'valandos_valandų_valandas',
        'd': 'diena_dienos_dieną',
        'dd': 'dienos_dienų_dienas',
        'M': 'mėnuo_mėnesio_mėnesį',
        'MM': 'mėnesiai_mėnesių_mėnesius',
        'y': 'metai_metų_metus',
        'yy': 'metai_metų_metus'
    };
    function translateSeconds(number, withoutSuffix, key, isFuture) {
        if (withoutSuffix) {
            return 'kelios sekundės';
        } else {
            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
        }
    }
    function translateSingular(number, withoutSuffix, key, isFuture) {
        return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];
    }
    function special(number) {
        return number % 10 === 0 || number > 10 && number < 20;
    }
    function forms(key) {
        return units[key].split('_');
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        if (number === 1) {
            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
        } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
        } else {
            if (isFuture) {
                return result + forms(key)[1];
            } else {
                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
        }
    }
    var lt = moment.defineLocale('lt', {
        months: {
            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
        },
        monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
        weekdays: {
            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
            isFormat: /dddd HH:mm/
        },
        weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
        weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY [m.] MMMM D [d.]',
            LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
            l: 'YYYY-MM-DD',
            ll: 'YYYY [m.] MMMM D [d.]',
            lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
        },
        calendar: {
            sameDay: '[Šiandien] LT',
            nextDay: '[Rytoj] LT',
            nextWeek: 'dddd LT',
            lastDay: '[Vakar] LT',
            lastWeek: '[Praėjusį] dddd LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'po %s',
            past: 'prieš %s',
            s: translateSeconds,
            ss: translate,
            m: translateSingular,
            mm: translate,
            h: translateSingular,
            hh: translate,
            d: translateSingular,
            dd: translate,
            M: translateSingular,
            MM: translate,
            y: translateSingular,
            yy: translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
        ordinal: function ordinal(number) {
            return number + '-oji';
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return lt;
});

/***/ }),

/***/ 687:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var units = {
        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'h': 'stundas_stundām_stunda_stundas'.split('_'),
        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
        'd': 'dienas_dienām_diena_dienas'.split('_'),
        'dd': 'dienas_dienām_diena_dienas'.split('_'),
        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'y': 'gada_gadiem_gads_gadi'.split('_'),
        'yy': 'gada_gadiem_gads_gadi'.split('_')
    };

    function format(forms, number, withoutSuffix) {
        if (withoutSuffix) {
            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
        } else {
            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
        }
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        return number + ' ' + format(units[key], number, withoutSuffix);
    }
    function relativeTimeWithSingular(number, withoutSuffix, key) {
        return format(units[key], number, withoutSuffix);
    }
    function relativeSeconds(number, withoutSuffix) {
        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
    }

    var lv = moment.defineLocale('lv', {
        months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
        monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
        weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
        weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY.',
            LL: 'YYYY. [gada] D. MMMM',
            LLL: 'YYYY. [gada] D. MMMM, HH:mm',
            LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm'
        },
        calendar: {
            sameDay: '[Šodien pulksten] LT',
            nextDay: '[Rīt pulksten] LT',
            nextWeek: 'dddd [pulksten] LT',
            lastDay: '[Vakar pulksten] LT',
            lastWeek: '[Pagājušā] dddd [pulksten] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'pēc %s',
            past: 'pirms %s',
            s: relativeSeconds,
            ss: relativeTimeWithPlural,
            m: relativeTimeWithSingular,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithSingular,
            hh: relativeTimeWithPlural,
            d: relativeTimeWithSingular,
            dd: relativeTimeWithPlural,
            M: relativeTimeWithSingular,
            MM: relativeTimeWithPlural,
            y: relativeTimeWithSingular,
            yy: relativeTimeWithPlural
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return lv;
});

/***/ }),

/***/ 688:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var translator = {
        words: {
            ss: ['sekund', 'sekunda', 'sekundi'],
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
            return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
        },
        translate: function translate(number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var me = moment.defineLocale('me', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',

            nextWeek: function nextWeek() {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[juče u] LT',
            lastWeek: function lastWeek() {
                var lastWeekDays = ['[prošle] [nedjelje] [u] LT', '[prošlog] [ponedjeljka] [u] LT', '[prošlog] [utorka] [u] LT', '[prošle] [srijede] [u] LT', '[prošlog] [četvrtka] [u] LT', '[prošlog] [petka] [u] LT', '[prošle] [subote] [u] LT'];
                return lastWeekDays[this.day()];
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'nekoliko sekundi',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'dan',
            dd: translator.translate,
            M: 'mjesec',
            MM: translator.translate,
            y: 'godinu',
            yy: translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 7 }
    });

    return me;
});

/***/ }),

/***/ 689:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var mi = moment.defineLocale('mi', {
        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [i] HH:mm',
            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
        },
        calendar: {
            sameDay: '[i teie mahana, i] LT',
            nextDay: '[apopo i] LT',
            nextWeek: 'dddd [i] LT',
            lastDay: '[inanahi i] LT',
            lastWeek: 'dddd [whakamutunga i] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'i roto i %s',
            past: '%s i mua',
            s: 'te hēkona ruarua',
            ss: '%d hēkona',
            m: 'he meneti',
            mm: '%d meneti',
            h: 'te haora',
            hh: '%d haora',
            d: 'he ra',
            dd: '%d ra',
            M: 'he marama',
            MM: '%d marama',
            y: 'he tau',
            yy: '%d tau'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1,
            doy: 4 }
    });

    return mi;
});

/***/ }),

/***/ 690:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var mk = moment.defineLocale('mk', {
        months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
        weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
        weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
        weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[Денес во] LT',
            nextDay: '[Утре во] LT',
            nextWeek: '[Во] dddd [во] LT',
            lastDay: '[Вчера во] LT',
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[Изминатата] dddd [во] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[Изминатиот] dddd [во] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'после %s',
            past: 'пред %s',
            s: 'неколку секунди',
            ss: '%d секунди',
            m: 'минута',
            mm: '%d минути',
            h: 'час',
            hh: '%d часа',
            d: 'ден',
            dd: '%d дена',
            M: 'месец',
            MM: '%d месеци',
            y: 'година',
            yy: '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal: function ordinal(number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return mk;
});

/***/ }),

/***/ 691:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var ml = moment.defineLocale('ml', {
        months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
        monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
        monthsParseExact: true,
        weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
        weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
        weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm -നു',
            LTS: 'A h:mm:ss -നു',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm -നു',
            LLLL: 'dddd, D MMMM YYYY, A h:mm -നു'
        },
        calendar: {
            sameDay: '[ഇന്ന്] LT',
            nextDay: '[നാളെ] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ഇന്നലെ] LT',
            lastWeek: '[കഴിഞ്ഞ] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s കഴിഞ്ഞ്',
            past: '%s മുൻപ്',
            s: 'അൽപ നിമിഷങ്ങൾ',
            ss: '%d സെക്കൻഡ്',
            m: 'ഒരു മിനിറ്റ്',
            mm: '%d മിനിറ്റ്',
            h: 'ഒരു മണിക്കൂർ',
            hh: '%d മണിക്കൂർ',
            d: 'ഒരു ദിവസം',
            dd: '%d ദിവസം',
            M: 'ഒരു മാസം',
            MM: '%d മാസം',
            y: 'ഒരു വർഷം',
            yy: '%d വർഷം'
        },
        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'രാത്രി' && hour >= 4 || meridiem === 'ഉച്ച കഴിഞ്ഞ്' || meridiem === 'വൈകുന്നേരം') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'രാത്രി';
            } else if (hour < 12) {
                return 'രാവിലെ';
            } else if (hour < 17) {
                return 'ഉച്ച കഴിഞ്ഞ്';
            } else if (hour < 20) {
                return 'വൈകുന്നേരം';
            } else {
                return 'രാത്രി';
            }
        }
    });

    return ml;
});

/***/ }),

/***/ 692:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function translate(number, withoutSuffix, key, isFuture) {
        switch (key) {
            case 's':
                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
            case 'ss':
                return number + (withoutSuffix ? ' секунд' : ' секундын');
            case 'm':
            case 'mm':
                return number + (withoutSuffix ? ' минут' : ' минутын');
            case 'h':
            case 'hh':
                return number + (withoutSuffix ? ' цаг' : ' цагийн');
            case 'd':
            case 'dd':
                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
            case 'M':
            case 'MM':
                return number + (withoutSuffix ? ' сар' : ' сарын');
            case 'y':
            case 'yy':
                return number + (withoutSuffix ? ' жил' : ' жилийн');
            default:
                return number;
        }
    }

    var mn = moment.defineLocale('mn', {
        months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),
        monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),
        monthsParseExact: true,
        weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
        weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
        weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY оны MMMMын D',
            LLL: 'YYYY оны MMMMын D HH:mm',
            LLLL: 'dddd, YYYY оны MMMMын D HH:mm'
        },
        meridiemParse: /ҮӨ|ҮХ/i,
        isPM: function isPM(input) {
            return input === 'ҮХ';
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return 'ҮӨ';
            } else {
                return 'ҮХ';
            }
        },
        calendar: {
            sameDay: '[Өнөөдөр] LT',
            nextDay: '[Маргааш] LT',
            nextWeek: '[Ирэх] dddd LT',
            lastDay: '[Өчигдөр] LT',
            lastWeek: '[Өнгөрсөн] dddd LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s дараа',
            past: '%s өмнө',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
        },
        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + ' өдөр';
                default:
                    return number;
            }
        }
    });

    return mn;
});

/***/ }),

/***/ 693:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
        numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    function relativeTimeMr(number, withoutSuffix, string, isFuture) {
        var output = '';
        if (withoutSuffix) {
            switch (string) {
                case 's':
                    output = 'काही सेकंद';break;
                case 'ss':
                    output = '%d सेकंद';break;
                case 'm':
                    output = 'एक मिनिट';break;
                case 'mm':
                    output = '%d मिनिटे';break;
                case 'h':
                    output = 'एक तास';break;
                case 'hh':
                    output = '%d तास';break;
                case 'd':
                    output = 'एक दिवस';break;
                case 'dd':
                    output = '%d दिवस';break;
                case 'M':
                    output = 'एक महिना';break;
                case 'MM':
                    output = '%d महिने';break;
                case 'y':
                    output = 'एक वर्ष';break;
                case 'yy':
                    output = '%d वर्षे';break;
            }
        } else {
            switch (string) {
                case 's':
                    output = 'काही सेकंदां';break;
                case 'ss':
                    output = '%d सेकंदां';break;
                case 'm':
                    output = 'एका मिनिटा';break;
                case 'mm':
                    output = '%d मिनिटां';break;
                case 'h':
                    output = 'एका तासा';break;
                case 'hh':
                    output = '%d तासां';break;
                case 'd':
                    output = 'एका दिवसा';break;
                case 'dd':
                    output = '%d दिवसां';break;
                case 'M':
                    output = 'एका महिन्या';break;
                case 'MM':
                    output = '%d महिन्यां';break;
                case 'y':
                    output = 'एका वर्षा';break;
                case 'yy':
                    output = '%d वर्षां';break;
            }
        }
        return output.replace(/%d/i, number);
    }

    var mr = moment.defineLocale('mr', {
        months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
        monthsParseExact: true,
        weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat: {
            LT: 'A h:mm वाजता',
            LTS: 'A h:mm:ss वाजता',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm वाजता',
            LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता'
        },
        calendar: {
            sameDay: '[आज] LT',
            nextDay: '[उद्या] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[काल] LT',
            lastWeek: '[मागील] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%sमध्ये',
            past: '%sपूर्वी',
            s: relativeTimeMr,
            ss: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr
        },
        preparse: function preparse(string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात्री') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सकाळी') {
                return hour;
            } else if (meridiem === 'दुपारी') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'सायंकाळी') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'रात्री';
            } else if (hour < 10) {
                return 'सकाळी';
            } else if (hour < 17) {
                return 'दुपारी';
            } else if (hour < 20) {
                return 'सायंकाळी';
            } else {
                return 'रात्री';
            }
        },
        week: {
            dow: 0,
            doy: 6 }
    });

    return mr;
});

/***/ }),

/***/ 694:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var ms = moment.defineLocale('ms', {
        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Esok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kelmarin pukul] LT',
            lastWeek: 'dddd [lepas pukul] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'dalam %s',
            past: '%s yang lepas',
            s: 'beberapa saat',
            ss: '%d saat',
            m: 'seminit',
            mm: '%d minit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun'
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return ms;
});

/***/ }),

/***/ 695:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var msMy = moment.defineLocale('ms-my', {
        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Esok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kelmarin pukul] LT',
            lastWeek: 'dddd [lepas pukul] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'dalam %s',
            past: '%s yang lepas',
            s: 'beberapa saat',
            ss: '%d saat',
            m: 'seminit',
            mm: '%d minit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun'
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return msMy;
});

/***/ }),

/***/ 696:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var mt = moment.defineLocale('mt', {
        months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
        monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
        weekdays: 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
        weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
        weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Illum fil-]LT',
            nextDay: '[Għada fil-]LT',
            nextWeek: 'dddd [fil-]LT',
            lastDay: '[Il-bieraħ fil-]LT',
            lastWeek: 'dddd [li għadda] [fil-]LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'f’ %s',
            past: '%s ilu',
            s: 'ftit sekondi',
            ss: '%d sekondi',
            m: 'minuta',
            mm: '%d minuti',
            h: 'siegħa',
            hh: '%d siegħat',
            d: 'ġurnata',
            dd: '%d ġranet',
            M: 'xahar',
            MM: '%d xhur',
            y: 'sena',
            yy: '%d sni'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1,
            doy: 4 }
    });

    return mt;
});

/***/ }),

/***/ 697:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '၁',
        '2': '၂',
        '3': '၃',
        '4': '၄',
        '5': '၅',
        '6': '၆',
        '7': '၇',
        '8': '၈',
        '9': '၉',
        '0': '၀'
    },
        numberMap = {
        '၁': '1',
        '၂': '2',
        '၃': '3',
        '၄': '4',
        '၅': '5',
        '၆': '6',
        '၇': '7',
        '၈': '8',
        '၉': '9',
        '၀': '0'
    };

    var my = moment.defineLocale('my', {
        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            ss: '%d စက္ကန့်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်'
        },
        preparse: function preparse(string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return my;
});

/***/ }),

/***/ 698:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var nb = moment.defineLocale('nb', {
        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
        monthsParseExact: true,
        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),
        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] HH:mm',
            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar: {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[forrige] dddd [kl.] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'om %s',
            past: '%s siden',
            s: 'noen sekunder',
            ss: '%d sekunder',
            m: 'ett minutt',
            mm: '%d minutter',
            h: 'en time',
            hh: '%d timer',
            d: 'en dag',
            dd: '%d dager',
            M: 'en måned',
            MM: '%d måneder',
            y: 'ett år',
            yy: '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return nb;
});

/***/ }),

/***/ 699:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
        numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var ne = moment.defineLocale('ne', {
        months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
        monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
        monthsParseExact: true,
        weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
        weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
        weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'Aको h:mm बजे',
            LTS: 'Aको h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, Aको h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे'
        },
        preparse: function preparse(string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'राति') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'बिहान') {
                return hour;
            } else if (meridiem === 'दिउँसो') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'साँझ') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 3) {
                return 'राति';
            } else if (hour < 12) {
                return 'बिहान';
            } else if (hour < 16) {
                return 'दिउँसो';
            } else if (hour < 20) {
                return 'साँझ';
            } else {
                return 'राति';
            }
        },
        calendar: {
            sameDay: '[आज] LT',
            nextDay: '[भोलि] LT',
            nextWeek: '[आउँदो] dddd[,] LT',
            lastDay: '[हिजो] LT',
            lastWeek: '[गएको] dddd[,] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%sमा',
            past: '%s अगाडि',
            s: 'केही क्षण',
            ss: '%d सेकेण्ड',
            m: 'एक मिनेट',
            mm: '%d मिनेट',
            h: 'एक घण्टा',
            hh: '%d घण्टा',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महिना',
            MM: '%d महिना',
            y: 'एक बर्ष',
            yy: '%d बर्ष'
        },
        week: {
            dow: 0,
            doy: 6 }
    });

    return ne;
});

/***/ }),

/***/ 700:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nl = moment.defineLocale('nl', {
        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort: function monthsShort(m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,

        weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'over %s',
            past: '%s geleden',
            s: 'een paar seconden',
            ss: '%d seconden',
            m: 'één minuut',
            mm: '%d minuten',
            h: 'één uur',
            hh: '%d uur',
            d: 'één dag',
            dd: '%d dagen',
            M: 'één maand',
            MM: '%d maanden',
            y: 'één jaar',
            yy: '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function ordinal(number) {
            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return nl;
});

/***/ }),

/***/ 701:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nlBe = moment.defineLocale('nl-be', {
        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort: function monthsShort(m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,

        weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'over %s',
            past: '%s geleden',
            s: 'een paar seconden',
            ss: '%d seconden',
            m: 'één minuut',
            mm: '%d minuten',
            h: 'één uur',
            hh: '%d uur',
            d: 'één dag',
            dd: '%d dagen',
            M: 'één maand',
            MM: '%d maanden',
            y: 'één jaar',
            yy: '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function ordinal(number) {
            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return nlBe;
});

/***/ }),

/***/ 702:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var nn = moment.defineLocale('nn', {
        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
        weekdaysShort: 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
        weekdaysMin: 'su_må_ty_on_to_fr_lø'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] H:mm',
            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar: {
            sameDay: '[I dag klokka] LT',
            nextDay: '[I morgon klokka] LT',
            nextWeek: 'dddd [klokka] LT',
            lastDay: '[I går klokka] LT',
            lastWeek: '[Føregåande] dddd [klokka] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'om %s',
            past: '%s sidan',
            s: 'nokre sekund',
            ss: '%d sekund',
            m: 'eit minutt',
            mm: '%d minutt',
            h: 'ein time',
            hh: '%d timar',
            d: 'ein dag',
            dd: '%d dagar',
            M: 'ein månad',
            MM: '%d månader',
            y: 'eit år',
            yy: '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return nn;
});

/***/ }),

/***/ 703:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '੧',
        '2': '੨',
        '3': '੩',
        '4': '੪',
        '5': '੫',
        '6': '੬',
        '7': '੭',
        '8': '੮',
        '9': '੯',
        '0': '੦'
    },
        numberMap = {
        '੧': '1',
        '੨': '2',
        '੩': '3',
        '੪': '4',
        '੫': '5',
        '੬': '6',
        '੭': '7',
        '੮': '8',
        '੯': '9',
        '੦': '0'
    };

    var paIn = moment.defineLocale('pa-in', {
        months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
        weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm ਵਜੇ',
            LTS: 'A h:mm:ss ਵਜੇ',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
        },
        calendar: {
            sameDay: '[ਅਜ] LT',
            nextDay: '[ਕਲ] LT',
            nextWeek: '[ਅਗਲਾ] dddd, LT',
            lastDay: '[ਕਲ] LT',
            lastWeek: '[ਪਿਛਲੇ] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s ਵਿੱਚ',
            past: '%s ਪਿਛਲੇ',
            s: 'ਕੁਝ ਸਕਿੰਟ',
            ss: '%d ਸਕਿੰਟ',
            m: 'ਇਕ ਮਿੰਟ',
            mm: '%d ਮਿੰਟ',
            h: 'ਇੱਕ ਘੰਟਾ',
            hh: '%d ਘੰਟੇ',
            d: 'ਇੱਕ ਦਿਨ',
            dd: '%d ਦਿਨ',
            M: 'ਇੱਕ ਮਹੀਨਾ',
            MM: '%d ਮਹੀਨੇ',
            y: 'ਇੱਕ ਸਾਲ',
            yy: '%d ਸਾਲ'
        },
        preparse: function preparse(string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },

        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ਰਾਤ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ਸਵੇਰ') {
                return hour;
            } else if (meridiem === 'ਦੁਪਹਿਰ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ਸ਼ਾਮ') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'ਰਾਤ';
            } else if (hour < 10) {
                return 'ਸਵੇਰ';
            } else if (hour < 17) {
                return 'ਦੁਪਹਿਰ';
            } else if (hour < 20) {
                return 'ਸ਼ਾਮ';
            } else {
                return 'ਰਾਤ';
            }
        },
        week: {
            dow: 0,
            doy: 6 }
    });

    return paIn;
});

/***/ }),

/***/ 704:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
    function plural(n) {
        return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;
    }
    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                return result + (plural(number) ? 'sekundy' : 'sekund');
            case 'm':
                return withoutSuffix ? 'minuta' : 'minutę';
            case 'mm':
                return result + (plural(number) ? 'minuty' : 'minut');
            case 'h':
                return withoutSuffix ? 'godzina' : 'godzinę';
            case 'hh':
                return result + (plural(number) ? 'godziny' : 'godzin');
            case 'MM':
                return result + (plural(number) ? 'miesiące' : 'miesięcy');
            case 'yy':
                return result + (plural(number) ? 'lata' : 'lat');
        }
    }

    var pl = moment.defineLocale('pl', {
        months: function months(momentToFormat, format) {
            if (!momentToFormat) {
                return monthsNominative;
            } else if (format === '') {
                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
            } else if (/D MMMM/.test(format)) {
                return monthsSubjective[momentToFormat.month()];
            } else {
                return monthsNominative[momentToFormat.month()];
            }
        },
        monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
        weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
        weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
        weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Dziś o] LT',
            nextDay: '[Jutro o] LT',
            nextWeek: function nextWeek() {
                switch (this.day()) {
                    case 0:
                        return '[W niedzielę o] LT';

                    case 2:
                        return '[We wtorek o] LT';

                    case 3:
                        return '[W środę o] LT';

                    case 6:
                        return '[W sobotę o] LT';

                    default:
                        return '[W] dddd [o] LT';
                }
            },
            lastDay: '[Wczoraj o] LT',
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 0:
                        return '[W zeszłą niedzielę o] LT';
                    case 3:
                        return '[W zeszłą środę o] LT';
                    case 6:
                        return '[W zeszłą sobotę o] LT';
                    default:
                        return '[W zeszły] dddd [o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'za %s',
            past: '%s temu',
            s: 'kilka sekund',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: '1 dzień',
            dd: '%d dni',
            M: 'miesiąc',
            MM: translate,
            y: 'rok',
            yy: translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return pl;
});

/***/ }),

/***/ 705:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var pt = moment.defineLocale('pt', {
        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
        weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY HH:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function lastWeek() {
                return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' : '[Última] dddd [às] LT';
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'em %s',
            past: 'há %s',
            s: 'segundos',
            ss: '%d segundos',
            m: 'um minuto',
            mm: '%d minutos',
            h: 'uma hora',
            hh: '%d horas',
            d: 'um dia',
            dd: '%d dias',
            M: 'um mês',
            MM: '%d meses',
            y: 'um ano',
            yy: '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1,
            doy: 4 }
    });

    return pt;
});

/***/ }),

/***/ 706:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var ptBr = moment.defineLocale('pt-br', {
        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
        weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
        },
        calendar: {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function lastWeek() {
                return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' : '[Última] dddd [às] LT';
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'em %s',
            past: 'há %s',
            s: 'poucos segundos',
            ss: '%d segundos',
            m: 'um minuto',
            mm: '%d minutos',
            h: 'uma hora',
            hh: '%d horas',
            d: 'um dia',
            dd: '%d dias',
            M: 'um mês',
            MM: '%d meses',
            y: 'um ano',
            yy: '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº'
    });

    return ptBr;
});

/***/ }),

/***/ 707:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': 'secunde',
            'mm': 'minute',
            'hh': 'ore',
            'dd': 'zile',
            'MM': 'luni',
            'yy': 'ani'
        },
            separator = ' ';
        if (number % 100 >= 20 || number >= 100 && number % 100 === 0) {
            separator = ' de ';
        }
        return number + separator + format[key];
    }

    var ro = moment.defineLocale('ro', {
        months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
        monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
        weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
        weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[azi la] LT',
            nextDay: '[mâine la] LT',
            nextWeek: 'dddd [la] LT',
            lastDay: '[ieri la] LT',
            lastWeek: '[fosta] dddd [la] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'peste %s',
            past: '%s în urmă',
            s: 'câteva secunde',
            ss: relativeTimeWithPlural,
            m: 'un minut',
            mm: relativeTimeWithPlural,
            h: 'o oră',
            hh: relativeTimeWithPlural,
            d: 'o zi',
            dd: relativeTimeWithPlural,
            M: 'o lună',
            MM: relativeTimeWithPlural,
            y: 'un an',
            yy: relativeTimeWithPlural
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return ro;
});

/***/ }),

/***/ 708:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            'hh': 'час_часа_часов',
            'dd': 'день_дня_дней',
            'MM': 'месяц_месяца_месяцев',
            'yy': 'год_года_лет'
        };
        if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
        } else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

    var ru = moment.defineLocale('ru', {
        months: {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
        },
        monthsShort: {
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
        },
        weekdays: {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
        },
        weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,

        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY г.',
            LLL: 'D MMMM YYYY г., H:mm',
            LLLL: 'dddd, D MMMM YYYY г., H:mm'
        },
        calendar: {
            sameDay: '[Сегодня, в] LT',
            nextDay: '[Завтра, в] LT',
            lastDay: '[Вчера, в] LT',
            nextWeek: function nextWeek(now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В следующее] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В следующий] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В следующую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            lastWeek: function lastWeek(now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В прошлое] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В прошлый] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В прошлую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'через %s',
            past: '%s назад',
            s: 'несколько секунд',
            ss: relativeTimeWithPlural,
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: 'час',
            hh: relativeTimeWithPlural,
            d: 'день',
            dd: relativeTimeWithPlural,
            M: 'месяц',
            MM: relativeTimeWithPlural,
            y: 'год',
            yy: relativeTimeWithPlural
        },
        meridiemParse: /ночи|утра|дня|вечера/i,
        isPM: function isPM(input) {
            return (/^(дня|вечера)$/.test(input)
            );
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'ночи';
            } else if (hour < 12) {
                return 'утра';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечера';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                case 'w':
                case 'W':
                    return number + '-я';
                default:
                    return number;
            }
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return ru;
});

/***/ }),

/***/ 709:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var months = ['جنوري', 'فيبروري', 'مارچ', 'اپريل', 'مئي', 'جون', 'جولاءِ', 'آگسٽ', 'سيپٽمبر', 'آڪٽوبر', 'نومبر', 'ڊسمبر'];
    var days = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'];

    var sd = moment.defineLocale('sd', {
        months: months,
        monthsShort: months,
        weekdays: days,
        weekdaysShort: days,
        weekdaysMin: days,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM: function isPM(input) {
            return 'شام' === input;
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar: {
            sameDay: '[اڄ] LT',
            nextDay: '[سڀاڻي] LT',
            nextWeek: 'dddd [اڳين هفتي تي] LT',
            lastDay: '[ڪالهه] LT',
            lastWeek: '[گزريل هفتي] dddd [تي] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s پوء',
            past: '%s اڳ',
            s: 'چند سيڪنڊ',
            ss: '%d سيڪنڊ',
            m: 'هڪ منٽ',
            mm: '%d منٽ',
            h: 'هڪ ڪلاڪ',
            hh: '%d ڪلاڪ',
            d: 'هڪ ڏينهن',
            dd: '%d ڏينهن',
            M: 'هڪ مهينو',
            MM: '%d مهينا',
            y: 'هڪ سال',
            yy: '%d سال'
        },
        preparse: function preparse(string) {
            return string.replace(/،/g, ',');
        },
        postformat: function postformat(string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return sd;
});

/***/ }),

/***/ 710:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var se = moment.defineLocale('se', {
        months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
        monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
        weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
        weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
        weekdaysMin: 's_v_m_g_d_b_L'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'MMMM D. [b.] YYYY',
            LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',
            LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
        },
        calendar: {
            sameDay: '[otne ti] LT',
            nextDay: '[ihttin ti] LT',
            nextWeek: 'dddd [ti] LT',
            lastDay: '[ikte ti] LT',
            lastWeek: '[ovddit] dddd [ti] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s geažes',
            past: 'maŋit %s',
            s: 'moadde sekunddat',
            ss: '%d sekunddat',
            m: 'okta minuhta',
            mm: '%d minuhtat',
            h: 'okta diimmu',
            hh: '%d diimmut',
            d: 'okta beaivi',
            dd: '%d beaivvit',
            M: 'okta mánnu',
            MM: '%d mánut',
            y: 'okta jahki',
            yy: '%d jagit'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return se;
});

/***/ }),

/***/ 711:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var si = moment.defineLocale('si', {
        months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
        monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
        weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
        weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
        weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'a h:mm',
            LTS: 'a h:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY MMMM D',
            LLL: 'YYYY MMMM D, a h:mm',
            LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
        },
        calendar: {
            sameDay: '[අද] LT[ට]',
            nextDay: '[හෙට] LT[ට]',
            nextWeek: 'dddd LT[ට]',
            lastDay: '[ඊයේ] LT[ට]',
            lastWeek: '[පසුගිය] dddd LT[ට]',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%sකින්',
            past: '%sකට පෙර',
            s: 'තත්පර කිහිපය',
            ss: 'තත්පර %d',
            m: 'මිනිත්තුව',
            mm: 'මිනිත්තු %d',
            h: 'පැය',
            hh: 'පැය %d',
            d: 'දිනය',
            dd: 'දින %d',
            M: 'මාසය',
            MM: 'මාස %d',
            y: 'වසර',
            yy: 'වසර %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
        ordinal: function ordinal(number) {
            return number + ' වැනි';
        },
        meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
        isPM: function isPM(input) {
            return input === 'ප.ව.' || input === 'පස් වරු';
        },
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'ප.ව.' : 'පස් වරු';
            } else {
                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
            }
        }
    });

    return si;
});

/***/ }),

/***/ 712:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
    function plural(n) {
        return n > 1 && n < 5;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';
            case 'ss':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekúnd');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':
                return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';
            case 'mm':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minúty' : 'minút');
                } else {
                    return result + 'minútami';
                }
                break;
            case 'h':
                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
            case 'hh':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodín');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':
                return withoutSuffix || isFuture ? 'deň' : 'dňom';
            case 'dd':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dni' : 'dní');
                } else {
                    return result + 'dňami';
                }
                break;
            case 'M':
                return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';
            case 'MM':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
                } else {
                    return result + 'mesiacmi';
                }
                break;
            case 'y':
                return withoutSuffix || isFuture ? 'rok' : 'rokom';
            case 'yy':
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'rokov');
                } else {
                    return result + 'rokmi';
                }
                break;
        }
    }

    var sk = moment.defineLocale('sk', {
        months: months,
        monthsShort: monthsShort,
        weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
        weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
        weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[dnes o] LT',
            nextDay: '[zajtra o] LT',
            nextWeek: function nextWeek() {
                switch (this.day()) {
                    case 0:
                        return '[v nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [o] LT';
                    case 3:
                        return '[v stredu o] LT';
                    case 4:
                        return '[vo štvrtok o] LT';
                    case 5:
                        return '[v piatok o] LT';
                    case 6:
                        return '[v sobotu o] LT';
                }
            },
            lastDay: '[včera o] LT',
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 0:
                        return '[minulú nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[minulý] dddd [o] LT';
                    case 3:
                        return '[minulú stredu o] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [o] LT';
                    case 6:
                        return '[minulú sobotu o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'za %s',
            past: 'pred %s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return sk;
});

/***/ }),

/***/ 713:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
            case 'ss':
                if (number === 1) {
                    result += withoutSuffix ? 'sekundo' : 'sekundi';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
                } else {
                    result += withoutSuffix || isFuture ? 'sekund' : 'sekund';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'ena minuta' : 'eno minuto';
            case 'mm':
                if (number === 1) {
                    result += withoutSuffix ? 'minuta' : 'minuto';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
                } else {
                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'ena ura' : 'eno uro';
            case 'hh':
                if (number === 1) {
                    result += withoutSuffix ? 'ura' : 'uro';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
                } else {
                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
                }
                return result;
            case 'd':
                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
            case 'dd':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
                } else {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
                }
                return result;
            case 'M':
                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
            case 'MM':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
                } else {
                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
                }
                return result;
            case 'y':
                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
            case 'yy':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
                } else {
                    result += withoutSuffix || isFuture ? 'let' : 'leti';
                }
                return result;
        }
    }

    var sl = moment.defineLocale('sl', {
        months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
        weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
        weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danes ob] LT',
            nextDay: '[jutri ob] LT',

            nextWeek: function nextWeek() {
                switch (this.day()) {
                    case 0:
                        return '[v] [nedeljo] [ob] LT';
                    case 3:
                        return '[v] [sredo] [ob] LT';
                    case 6:
                        return '[v] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[v] dddd [ob] LT';
                }
            },
            lastDay: '[včeraj ob] LT',
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 0:
                        return '[prejšnjo] [nedeljo] [ob] LT';
                    case 3:
                        return '[prejšnjo] [sredo] [ob] LT';
                    case 6:
                        return '[prejšnjo] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prejšnji] dddd [ob] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'čez %s',
            past: 'pred %s',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 7 }
    });

    return sl;
});

/***/ }),

/***/ 714:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var sq = moment.defineLocale('sq', {
        months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
        monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
        weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
        weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
        weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
        weekdaysParseExact: true,
        meridiemParse: /PD|MD/,
        isPM: function isPM(input) {
            return input.charAt(0) === 'M';
        },
        meridiem: function meridiem(hours, minutes, isLower) {
            return hours < 12 ? 'PD' : 'MD';
        },
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Sot në] LT',
            nextDay: '[Nesër në] LT',
            nextWeek: 'dddd [në] LT',
            lastDay: '[Dje në] LT',
            lastWeek: 'dddd [e kaluar në] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'në %s',
            past: '%s më parë',
            s: 'disa sekonda',
            ss: '%d sekonda',
            m: 'një minutë',
            mm: '%d minuta',
            h: 'një orë',
            hh: '%d orë',
            d: 'një ditë',
            dd: '%d ditë',
            M: 'një muaj',
            MM: '%d muaj',
            y: 'një vit',
            yy: '%d vite'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return sq;
});

/***/ }),

/***/ 715:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var translator = {
        words: {
            ss: ['sekunda', 'sekunde', 'sekundi'],
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
            return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
        },
        translate: function translate(number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var sr = moment.defineLocale('sr', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function nextWeek() {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedelju] [u] LT';
                    case 3:
                        return '[u] [sredu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[juče u] LT',
            lastWeek: function lastWeek() {
                var lastWeekDays = ['[prošle] [nedelje] [u] LT', '[prošlog] [ponedeljka] [u] LT', '[prošlog] [utorka] [u] LT', '[prošle] [srede] [u] LT', '[prošlog] [četvrtka] [u] LT', '[prošlog] [petka] [u] LT', '[prošle] [subote] [u] LT'];
                return lastWeekDays[this.day()];
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'za %s',
            past: 'pre %s',
            s: 'nekoliko sekundi',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'dan',
            dd: translator.translate,
            M: 'mesec',
            MM: translator.translate,
            y: 'godinu',
            yy: translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 7 }
    });

    return sr;
});

/***/ }),

/***/ 716:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var translator = {
        words: {
            ss: ['секунда', 'секунде', 'секунди'],
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година']
        },
        correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
            return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
        },
        translate: function translate(number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var srCyrl = moment.defineLocale('sr-cyrl', {
        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
        monthsParseExact: true,
        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function nextWeek() {
                switch (this.day()) {
                    case 0:
                        return '[у] [недељу] [у] LT';
                    case 3:
                        return '[у] [среду] [у] LT';
                    case 6:
                        return '[у] [суботу] [у] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[у] dddd [у] LT';
                }
            },
            lastDay: '[јуче у] LT',
            lastWeek: function lastWeek() {
                var lastWeekDays = ['[прошле] [недеље] [у] LT', '[прошлог] [понедељка] [у] LT', '[прошлог] [уторка] [у] LT', '[прошле] [среде] [у] LT', '[прошлог] [четвртка] [у] LT', '[прошлог] [петка] [у] LT', '[прошле] [суботе] [у] LT'];
                return lastWeekDays[this.day()];
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'за %s',
            past: 'пре %s',
            s: 'неколико секунди',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'дан',
            dd: translator.translate,
            M: 'месец',
            MM: translator.translate,
            y: 'годину',
            yy: translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 7 }
    });

    return srCyrl;
});

/***/ }),

/***/ 717:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var ss = moment.defineLocale('ss', {
        months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
        monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
        weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
        weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
        weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
        },
        calendar: {
            sameDay: '[Namuhla nga] LT',
            nextDay: '[Kusasa nga] LT',
            nextWeek: 'dddd [nga] LT',
            lastDay: '[Itolo nga] LT',
            lastWeek: 'dddd [leliphelile] [nga] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'nga %s',
            past: 'wenteka nga %s',
            s: 'emizuzwana lomcane',
            ss: '%d mzuzwana',
            m: 'umzuzu',
            mm: '%d emizuzu',
            h: 'lihora',
            hh: '%d emahora',
            d: 'lilanga',
            dd: '%d emalanga',
            M: 'inyanga',
            MM: '%d tinyanga',
            y: 'umnyaka',
            yy: '%d iminyaka'
        },
        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 11) {
                return 'ekuseni';
            } else if (hours < 15) {
                return 'emini';
            } else if (hours < 19) {
                return 'entsambama';
            } else {
                return 'ebusuku';
            }
        },
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ekuseni') {
                return hour;
            } else if (meridiem === 'emini') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
                if (hour === 0) {
                    return 0;
                }
                return hour + 12;
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: '%d',
        week: {
            dow: 1,
            doy: 4 }
    });

    return ss;
});

/***/ }),

/***/ 718:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var sv = moment.defineLocale('sv', {
        months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
        weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
        weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [kl.] HH:mm',
            LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd D MMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Idag] LT',
            nextDay: '[Imorgon] LT',
            lastDay: '[Igår] LT',
            nextWeek: '[På] dddd LT',
            lastWeek: '[I] dddd[s] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'om %s',
            past: 'för %s sedan',
            s: 'några sekunder',
            ss: '%d sekunder',
            m: 'en minut',
            mm: '%d minuter',
            h: 'en timme',
            hh: '%d timmar',
            d: 'en dag',
            dd: '%d dagar',
            M: 'en månad',
            MM: '%d månader',
            y: 'ett år',
            yy: '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
        ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'e' : b === 1 ? 'a' : b === 2 ? 'a' : b === 3 ? 'e' : 'e';
            return number + output;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return sv;
});

/***/ }),

/***/ 719:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var sw = moment.defineLocale('sw', {
        months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
        weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
        weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
        weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[leo saa] LT',
            nextDay: '[kesho saa] LT',
            nextWeek: '[wiki ijayo] dddd [saat] LT',
            lastDay: '[jana] LT',
            lastWeek: '[wiki iliyopita] dddd [saat] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s baadaye',
            past: 'tokea %s',
            s: 'hivi punde',
            ss: 'sekunde %d',
            m: 'dakika moja',
            mm: 'dakika %d',
            h: 'saa limoja',
            hh: 'masaa %d',
            d: 'siku moja',
            dd: 'masiku %d',
            M: 'mwezi mmoja',
            MM: 'miezi %d',
            y: 'mwaka mmoja',
            yy: 'miaka %d'
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return sw;
});

/***/ }),

/***/ 720:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var symbolMap = {
        '1': '௧',
        '2': '௨',
        '3': '௩',
        '4': '௪',
        '5': '௫',
        '6': '௬',
        '7': '௭',
        '8': '௮',
        '9': '௯',
        '0': '௦'
    },
        numberMap = {
        '௧': '1',
        '௨': '2',
        '௩': '3',
        '௪': '4',
        '௫': '5',
        '௬': '6',
        '௭': '7',
        '௮': '8',
        '௯': '9',
        '௦': '0'
    };

    var ta = moment.defineLocale('ta', {
        months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
        weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
        weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, HH:mm',
            LLLL: 'dddd, D MMMM YYYY, HH:mm'
        },
        calendar: {
            sameDay: '[இன்று] LT',
            nextDay: '[நாளை] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[நேற்று] LT',
            lastWeek: '[கடந்த வாரம்] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s இல்',
            past: '%s முன்',
            s: 'ஒரு சில விநாடிகள்',
            ss: '%d விநாடிகள்',
            m: 'ஒரு நிமிடம்',
            mm: '%d நிமிடங்கள்',
            h: 'ஒரு மணி நேரம்',
            hh: '%d மணி நேரம்',
            d: 'ஒரு நாள்',
            dd: '%d நாட்கள்',
            M: 'ஒரு மாதம்',
            MM: '%d மாதங்கள்',
            y: 'ஒரு வருடம்',
            yy: '%d ஆண்டுகள்'
        },
        dayOfMonthOrdinalParse: /\d{1,2}வது/,
        ordinal: function ordinal(number) {
            return number + 'வது';
        },
        preparse: function preparse(string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },

        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 2) {
                return ' யாமம்';
            } else if (hour < 6) {
                return ' வைகறை';
            } else if (hour < 10) {
                return ' காலை';
            } else if (hour < 14) {
                return ' நண்பகல்';
            } else if (hour < 18) {
                return ' எற்பாடு';
            } else if (hour < 22) {
                return ' மாலை';
            } else {
                return ' யாமம்';
            }
        },
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'யாமம்') {
                return hour < 2 ? hour : hour + 12;
            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
                return hour;
            } else if (meridiem === 'நண்பகல்') {
                return hour >= 10 ? hour : hour + 12;
            } else {
                return hour + 12;
            }
        },
        week: {
            dow: 0,
            doy: 6 }
    });

    return ta;
});

/***/ }),

/***/ 721:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var te = moment.defineLocale('te', {
        months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
        monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
        monthsParseExact: true,
        weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
        weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
        weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar: {
            sameDay: '[నేడు] LT',
            nextDay: '[రేపు] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[నిన్న] LT',
            lastWeek: '[గత] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s లో',
            past: '%s క్రితం',
            s: 'కొన్ని క్షణాలు',
            ss: '%d సెకన్లు',
            m: 'ఒక నిమిషం',
            mm: '%d నిమిషాలు',
            h: 'ఒక గంట',
            hh: '%d గంటలు',
            d: 'ఒక రోజు',
            dd: '%d రోజులు',
            M: 'ఒక నెల',
            MM: '%d నెలలు',
            y: 'ఒక సంవత్సరం',
            yy: '%d సంవత్సరాలు'
        },
        dayOfMonthOrdinalParse: /\d{1,2}వ/,
        ordinal: '%dవ',
        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'రాత్రి') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ఉదయం') {
                return hour;
            } else if (meridiem === 'మధ్యాహ్నం') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'సాయంత్రం') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'రాత్రి';
            } else if (hour < 10) {
                return 'ఉదయం';
            } else if (hour < 17) {
                return 'మధ్యాహ్నం';
            } else if (hour < 20) {
                return 'సాయంత్రం';
            } else {
                return 'రాత్రి';
            }
        },
        week: {
            dow: 0,
            doy: 6 }
    });

    return te;
});

/***/ }),

/***/ 722:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var tet = moment.defineLocale('tet', {
        months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
        monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
        weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
        weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Ohin iha] LT',
            nextDay: '[Aban iha] LT',
            nextWeek: 'dddd [iha] LT',
            lastDay: '[Horiseik iha] LT',
            lastWeek: 'dddd [semana kotuk] [iha] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'iha %s',
            past: '%s liuba',
            s: 'minutu balun',
            ss: 'minutu %d',
            m: 'minutu ida',
            mm: 'minutu %d',
            h: 'oras ida',
            hh: 'oras %d',
            d: 'loron ida',
            dd: 'loron %d',
            M: 'fulan ida',
            MM: 'fulan %d',
            y: 'tinan ida',
            yy: 'tinan %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return tet;
});

/***/ }),

/***/ 723:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var suffixes = {
        0: '-ум',
        1: '-ум',
        2: '-юм',
        3: '-юм',
        4: '-ум',
        5: '-ум',
        6: '-ум',
        7: '-ум',
        8: '-ум',
        9: '-ум',
        10: '-ум',
        12: '-ум',
        13: '-ум',
        20: '-ум',
        30: '-юм',
        40: '-ум',
        50: '-ум',
        60: '-ум',
        70: '-ум',
        80: '-ум',
        90: '-ум',
        100: '-ум'
    };

    var tg = moment.defineLocale('tg', {
        months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),
        weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
        weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Имрӯз соати] LT',
            nextDay: '[Пагоҳ соати] LT',
            lastDay: '[Дирӯз соати] LT',
            nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',
            lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'баъди %s',
            past: '%s пеш',
            s: 'якчанд сония',
            m: 'як дақиқа',
            mm: '%d дақиқа',
            h: 'як соат',
            hh: '%d соат',
            d: 'як рӯз',
            dd: '%d рӯз',
            M: 'як моҳ',
            MM: '%d моҳ',
            y: 'як сол',
            yy: '%d сол'
        },
        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'шаб') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'субҳ') {
                return hour;
            } else if (meridiem === 'рӯз') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'бегоҳ') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'шаб';
            } else if (hour < 11) {
                return 'субҳ';
            } else if (hour < 16) {
                return 'рӯз';
            } else if (hour < 19) {
                return 'бегоҳ';
            } else {
                return 'шаб';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
        ordinal: function ordinal(number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return tg;
});

/***/ }),

/***/ 724:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var th = moment.defineLocale('th', {
        months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
        monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
        monthsParseExact: true,
        weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
        weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'),
        weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY เวลา H:mm',
            LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'
        },
        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
        isPM: function isPM(input) {
            return input === 'หลังเที่ยง';
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return 'ก่อนเที่ยง';
            } else {
                return 'หลังเที่ยง';
            }
        },
        calendar: {
            sameDay: '[วันนี้ เวลา] LT',
            nextDay: '[พรุ่งนี้ เวลา] LT',
            nextWeek: 'dddd[หน้า เวลา] LT',
            lastDay: '[เมื่อวานนี้ เวลา] LT',
            lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'อีก %s',
            past: '%sที่แล้ว',
            s: 'ไม่กี่วินาที',
            ss: '%d วินาที',
            m: '1 นาที',
            mm: '%d นาที',
            h: '1 ชั่วโมง',
            hh: '%d ชั่วโมง',
            d: '1 วัน',
            dd: '%d วัน',
            M: '1 เดือน',
            MM: '%d เดือน',
            y: '1 ปี',
            yy: '%d ปี'
        }
    });

    return th;
});

/***/ }),

/***/ 725:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var tlPh = moment.defineLocale('tl-ph', {
        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'MM/D/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY HH:mm',
            LLLL: 'dddd, MMMM DD, YYYY HH:mm'
        },
        calendar: {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'sa loob ng %s',
            past: '%s ang nakalipas',
            s: 'ilang segundo',
            ss: '%d segundo',
            m: 'isang minuto',
            mm: '%d minuto',
            h: 'isang oras',
            hh: '%d oras',
            d: 'isang araw',
            dd: '%d araw',
            M: 'isang buwan',
            MM: '%d buwan',
            y: 'isang taon',
            yy: '%d taon'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function ordinal(number) {
            return number;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return tlPh;
});

/***/ }),

/***/ 726:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

    function translateFuture(output) {
        var time = output;
        time = output.indexOf('jaj') !== -1 ? time.slice(0, -3) + 'leS' : output.indexOf('jar') !== -1 ? time.slice(0, -3) + 'waQ' : output.indexOf('DIS') !== -1 ? time.slice(0, -3) + 'nem' : time + ' pIq';
        return time;
    }

    function translatePast(output) {
        var time = output;
        time = output.indexOf('jaj') !== -1 ? time.slice(0, -3) + 'Hu’' : output.indexOf('jar') !== -1 ? time.slice(0, -3) + 'wen' : output.indexOf('DIS') !== -1 ? time.slice(0, -3) + 'ben' : time + ' ret';
        return time;
    }

    function translate(number, withoutSuffix, string, isFuture) {
        var numberNoun = numberAsNoun(number);
        switch (string) {
            case 'ss':
                return numberNoun + ' lup';
            case 'mm':
                return numberNoun + ' tup';
            case 'hh':
                return numberNoun + ' rep';
            case 'dd':
                return numberNoun + ' jaj';
            case 'MM':
                return numberNoun + ' jar';
            case 'yy':
                return numberNoun + ' DIS';
        }
    }

    function numberAsNoun(number) {
        var hundred = Math.floor(number % 1000 / 100),
            ten = Math.floor(number % 100 / 10),
            one = number % 10,
            word = '';
        if (hundred > 0) {
            word += numbersNouns[hundred] + 'vatlh';
        }
        if (ten > 0) {
            word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';
        }
        if (one > 0) {
            word += (word !== '' ? ' ' : '') + numbersNouns[one];
        }
        return word === '' ? 'pagh' : word;
    }

    var tlh = moment.defineLocale('tlh', {
        months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
        monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
        monthsParseExact: true,
        weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[DaHjaj] LT',
            nextDay: '[wa’leS] LT',
            nextWeek: 'LLL',
            lastDay: '[wa’Hu’] LT',
            lastWeek: 'LLL',
            sameElse: 'L'
        },
        relativeTime: {
            future: translateFuture,
            past: translatePast,
            s: 'puS lup',
            ss: translate,
            m: 'wa’ tup',
            mm: translate,
            h: 'wa’ rep',
            hh: translate,
            d: 'wa’ jaj',
            dd: translate,
            M: 'wa’ jar',
            MM: translate,
            y: 'wa’ DIS',
            yy: translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    return tlh;
});

/***/ }),

/***/ 727:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);


;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var suffixes = {
        1: '\'inci',
        5: '\'inci',
        8: '\'inci',
        70: '\'inci',
        80: '\'inci',
        2: '\'nci',
        7: '\'nci',
        20: '\'nci',
        50: '\'nci',
        3: '\'üncü',
        4: '\'üncü',
        100: '\'üncü',
        6: '\'ncı',
        9: '\'uncu',
        10: '\'uncu',
        30: '\'uncu',
        60: '\'ıncı',
        90: '\'ıncı'
    };

    var tr = moment.defineLocale('tr', {
        months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
        monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
        weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
        weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
        weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[yarın saat] LT',
            nextWeek: '[gelecek] dddd [saat] LT',
            lastDay: '[dün] LT',
            lastWeek: '[geçen] dddd [saat] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s sonra',
            past: '%s önce',
            s: 'birkaç saniye',
            ss: '%d saniye',
            m: 'bir dakika',
            mm: '%d dakika',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir yıl',
            yy: '%d yıl'
        },
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                    return number;
                default:
                    if (number === 0) {
                        return number + '\'ıncı';
                    }
                    var a = number % 10,
                        b = number % 100 - a,
                        c = number >= 100 ? 100 : null;
                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return tr;
});

/***/ }),

/***/ 728:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var tzl = moment.defineLocale('tzl', {
        months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
        monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
        weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
        weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
        weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM [dallas] YYYY',
            LLL: 'D. MMMM [dallas] YYYY HH.mm',
            LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
        },
        meridiemParse: /d\'o|d\'a/i,
        isPM: function isPM(input) {
            return 'd\'o' === input.toLowerCase();
        },
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'd\'o' : 'D\'O';
            } else {
                return isLower ? 'd\'a' : 'D\'A';
            }
        },
        calendar: {
            sameDay: '[oxhi à] LT',
            nextDay: '[demà à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[ieiri à] LT',
            lastWeek: '[sür el] dddd [lasteu à] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'osprei %s',
            past: 'ja%s',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1,
            doy: 4 }
    });

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['viensas secunds', '\'iensas secunds'],
            'ss': [number + ' secunds', '' + number + ' secunds'],
            'm': ['\'n míut', '\'iens míut'],
            'mm': [number + ' míuts', '' + number + ' míuts'],
            'h': ['\'n þora', '\'iensa þora'],
            'hh': [number + ' þoras', '' + number + ' þoras'],
            'd': ['\'n ziua', '\'iensa ziua'],
            'dd': [number + ' ziuas', '' + number + ' ziuas'],
            'M': ['\'n mes', '\'iens mes'],
            'MM': [number + ' mesen', '' + number + ' mesen'],
            'y': ['\'n ar', '\'iens ar'],
            'yy': [number + ' ars', '' + number + ' ars']
        };
        return isFuture ? format[key][0] : withoutSuffix ? format[key][0] : format[key][1];
    }

    return tzl;
});

/***/ }),

/***/ 729:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var tzm = moment.defineLocale('tzm', {
        months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
            nextWeek: 'dddd [ⴴ] LT',
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
            lastWeek: 'dddd [ⴴ] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
            past: 'ⵢⴰⵏ %s',
            s: 'ⵉⵎⵉⴽ',
            ss: '%d ⵉⵎⵉⴽ',
            m: 'ⵎⵉⵏⵓⴺ',
            mm: '%d ⵎⵉⵏⵓⴺ',
            h: 'ⵙⴰⵄⴰ',
            hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
            d: 'ⴰⵙⵙ',
            dd: '%d oⵙⵙⴰⵏ',
            M: 'ⴰⵢoⵓⵔ',
            MM: '%d ⵉⵢⵢⵉⵔⵏ',
            y: 'ⴰⵙⴳⴰⵙ',
            yy: '%d ⵉⵙⴳⴰⵙⵏ'
        },
        week: {
            dow: 6,
            doy: 12 }
    });

    return tzm;
});

/***/ }),

/***/ 730:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var tzmLatn = moment.defineLocale('tzm-latn', {
        months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[asdkh g] LT',
            nextDay: '[aska g] LT',
            nextWeek: 'dddd [g] LT',
            lastDay: '[assant g] LT',
            lastWeek: 'dddd [g] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'dadkh s yan %s',
            past: 'yan %s',
            s: 'imik',
            ss: '%d imik',
            m: 'minuḍ',
            mm: '%d minuḍ',
            h: 'saɛa',
            hh: '%d tassaɛin',
            d: 'ass',
            dd: '%d ossan',
            M: 'ayowr',
            MM: '%d iyyirn',
            y: 'asgas',
            yy: '%d isgasn'
        },
        week: {
            dow: 6,
            doy: 12 }
    });

    return tzmLatn;
});

/***/ }),

/***/ 731:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var ugCn = moment.defineLocale('ug-cn', {
        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split('_'),
        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split('_'),
        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split('_'),
        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'
        },
        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'يېرىم كېچە' || meridiem === 'سەھەر' || meridiem === 'چۈشتىن بۇرۇن') {
                return hour;
            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
                return hour + 12;
            } else {
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return 'يېرىم كېچە';
            } else if (hm < 900) {
                return 'سەھەر';
            } else if (hm < 1130) {
                return 'چۈشتىن بۇرۇن';
            } else if (hm < 1230) {
                return 'چۈش';
            } else if (hm < 1800) {
                return 'چۈشتىن كېيىن';
            } else {
                return 'كەچ';
            }
        },
        calendar: {
            sameDay: '[بۈگۈن سائەت] LT',
            nextDay: '[ئەتە سائەت] LT',
            nextWeek: '[كېلەركى] dddd [سائەت] LT',
            lastDay: '[تۆنۈگۈن] LT',
            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s كېيىن',
            past: '%s بۇرۇن',
            s: 'نەچچە سېكونت',
            ss: '%d سېكونت',
            m: 'بىر مىنۇت',
            mm: '%d مىنۇت',
            h: 'بىر سائەت',
            hh: '%d سائەت',
            d: 'بىر كۈن',
            dd: '%d كۈن',
            M: 'بىر ئاي',
            MM: '%d ئاي',
            y: 'بىر يىل',
            yy: '%d يىل'
        },

        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '-كۈنى';
                case 'w':
                case 'W':
                    return number + '-ھەپتە';
                default:
                    return number;
            }
        },
        preparse: function preparse(string) {
            return string.replace(/،/g, ',');
        },
        postformat: function postformat(string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return ugCn;
});

/***/ }),

/***/ 732:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
            'dd': 'день_дні_днів',
            'MM': 'місяць_місяці_місяців',
            'yy': 'рік_роки_років'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвилина' : 'хвилину';
        } else if (key === 'h') {
            return withoutSuffix ? 'година' : 'годину';
        } else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    function weekdaysCaseReplace(m, format) {
        var weekdays = {
            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
        };

        if (!m) {
            return weekdays['nominative'];
        }

        var nounCase = /(\[[ВвУу]\]) ?dddd/.test(format) ? 'accusative' : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(format) ? 'genitive' : 'nominative';
        return weekdays[nounCase][m.day()];
    }
    function processHoursFunction(str) {
        return function () {
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
        };
    }

    var uk = moment.defineLocale('uk', {
        months: {
            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
        },
        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
        weekdays: weekdaysCaseReplace,
        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY р.',
            LLL: 'D MMMM YYYY р., HH:mm',
            LLLL: 'dddd, D MMMM YYYY р., HH:mm'
        },
        calendar: {
            sameDay: processHoursFunction('[Сьогодні '),
            nextDay: processHoursFunction('[Завтра '),
            lastDay: processHoursFunction('[Вчора '),
            nextWeek: processHoursFunction('[У] dddd ['),
            lastWeek: function lastWeek() {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return processHoursFunction('[Минулої] dddd [').call(this);
                    case 1:
                    case 2:
                    case 4:
                        return processHoursFunction('[Минулого] dddd [').call(this);
                }
            },
            sameElse: 'L'
        },
        relativeTime: {
            future: 'за %s',
            past: '%s тому',
            s: 'декілька секунд',
            ss: relativeTimeWithPlural,
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: 'годину',
            hh: relativeTimeWithPlural,
            d: 'день',
            dd: relativeTimeWithPlural,
            M: 'місяць',
            MM: relativeTimeWithPlural,
            y: 'рік',
            yy: relativeTimeWithPlural
        },

        meridiemParse: /ночі|ранку|дня|вечора/,
        isPM: function isPM(input) {
            return (/^(дня|вечора)$/.test(input)
            );
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
                return 'ночі';
            } else if (hour < 12) {
                return 'ранку';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечора';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                default:
                    return number;
            }
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return uk;
});

/***/ }),

/***/ 733:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var months = ['جنوری', 'فروری', 'مارچ', 'اپریل', 'مئی', 'جون', 'جولائی', 'اگست', 'ستمبر', 'اکتوبر', 'نومبر', 'دسمبر'];
    var days = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];

    var ur = moment.defineLocale('ur', {
        months: months,
        monthsShort: months,
        weekdays: days,
        weekdaysShort: days,
        weekdaysMin: days,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM: function isPM(input) {
            return 'شام' === input;
        },
        meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar: {
            sameDay: '[آج بوقت] LT',
            nextDay: '[کل بوقت] LT',
            nextWeek: 'dddd [بوقت] LT',
            lastDay: '[گذشتہ روز بوقت] LT',
            lastWeek: '[گذشتہ] dddd [بوقت] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s بعد',
            past: '%s قبل',
            s: 'چند سیکنڈ',
            ss: '%d سیکنڈ',
            m: 'ایک منٹ',
            mm: '%d منٹ',
            h: 'ایک گھنٹہ',
            hh: '%d گھنٹے',
            d: 'ایک دن',
            dd: '%d دن',
            M: 'ایک ماہ',
            MM: '%d ماہ',
            y: 'ایک سال',
            yy: '%d سال'
        },
        preparse: function preparse(string) {
            return string.replace(/،/g, ',');
        },
        postformat: function postformat(string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return ur;
});

/***/ }),

/***/ 734:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var uz = moment.defineLocale('uz', {
        months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
        weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
        weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'D MMMM YYYY, dddd HH:mm'
        },
        calendar: {
            sameDay: '[Бугун соат] LT [да]',
            nextDay: '[Эртага] LT [да]',
            nextWeek: 'dddd [куни соат] LT [да]',
            lastDay: '[Кеча соат] LT [да]',
            lastWeek: '[Утган] dddd [куни соат] LT [да]',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'Якин %s ичида',
            past: 'Бир неча %s олдин',
            s: 'фурсат',
            ss: '%d фурсат',
            m: 'бир дакика',
            mm: '%d дакика',
            h: 'бир соат',
            hh: '%d соат',
            d: 'бир кун',
            dd: '%d кун',
            M: 'бир ой',
            MM: '%d ой',
            y: 'бир йил',
            yy: '%d йил'
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return uz;
});

/***/ }),

/***/ 735:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var uzLatn = moment.defineLocale('uz-latn', {
        months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
        monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
        weekdays: 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
        weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
        weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'D MMMM YYYY, dddd HH:mm'
        },
        calendar: {
            sameDay: '[Bugun soat] LT [da]',
            nextDay: '[Ertaga] LT [da]',
            nextWeek: 'dddd [kuni soat] LT [da]',
            lastDay: '[Kecha soat] LT [da]',
            lastWeek: '[O\'tgan] dddd [kuni soat] LT [da]',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'Yaqin %s ichida',
            past: 'Bir necha %s oldin',
            s: 'soniya',
            ss: '%d soniya',
            m: 'bir daqiqa',
            mm: '%d daqiqa',
            h: 'bir soat',
            hh: '%d soat',
            d: 'bir kun',
            dd: '%d kun',
            M: 'bir oy',
            MM: '%d oy',
            y: 'bir yil',
            yy: '%d yil'
        },
        week: {
            dow: 1,
            doy: 7 }
    });

    return uzLatn;
});

/***/ }),

/***/ 736:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var vi = moment.defineLocale('vi', {
        months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
        monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
        monthsParseExact: true,
        weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
        weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysParseExact: true,
        meridiemParse: /sa|ch/i,
        isPM: function isPM(input) {
            return (/^ch$/i.test(input)
            );
        },
        meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'sa' : 'SA';
            } else {
                return isLower ? 'ch' : 'CH';
            }
        },
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [năm] YYYY',
            LLL: 'D MMMM [năm] YYYY HH:mm',
            LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',
            l: 'DD/M/YYYY',
            ll: 'D MMM YYYY',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd, D MMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Hôm nay lúc] LT',
            nextDay: '[Ngày mai lúc] LT',
            nextWeek: 'dddd [tuần tới lúc] LT',
            lastDay: '[Hôm qua lúc] LT',
            lastWeek: 'dddd [tuần rồi lúc] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s tới',
            past: '%s trước',
            s: 'vài giây',
            ss: '%d giây',
            m: 'một phút',
            mm: '%d phút',
            h: 'một giờ',
            hh: '%d giờ',
            d: 'một ngày',
            dd: '%d ngày',
            M: 'một tháng',
            MM: '%d tháng',
            y: 'một năm',
            yy: '%d năm'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function ordinal(number) {
            return number;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return vi;
});

/***/ }),

/***/ 737:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var xPseudo = moment.defineLocale('x-pseudo', {
        months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
        monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
        monthsParseExact: true,
        weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
        weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
        weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[T~ódá~ý át] LT',
            nextDay: '[T~ómó~rró~w át] LT',
            nextWeek: 'dddd [át] LT',
            lastDay: '[Ý~ést~érdá~ý át] LT',
            lastWeek: '[L~ást] dddd [át] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'í~ñ %s',
            past: '%s á~gó',
            s: 'á ~féw ~sécó~ñds',
            ss: '%d s~écóñ~ds',
            m: 'á ~míñ~úté',
            mm: '%d m~íñú~tés',
            h: 'á~ñ hó~úr',
            hh: '%d h~óúrs',
            d: 'á ~dáý',
            dd: '%d d~áýs',
            M: 'á ~móñ~th',
            MM: '%d m~óñt~hs',
            y: 'á ~ýéár',
            yy: '%d ý~éárs'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return xPseudo;
});

/***/ }),

/***/ 738:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var yo = moment.defineLocale('yo', {
        months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
        monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
        weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
        weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
        weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
        },
        calendar: {
            sameDay: '[Ònì ni] LT',
            nextDay: '[Ọ̀la ni] LT',
            nextWeek: 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
            lastDay: '[Àna ni] LT',
            lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'ní %s',
            past: '%s kọjá',
            s: 'ìsẹjú aayá die',
            ss: 'aayá %d',
            m: 'ìsẹjú kan',
            mm: 'ìsẹjú %d',
            h: 'wákati kan',
            hh: 'wákati %d',
            d: 'ọjọ́ kan',
            dd: 'ọjọ́ %d',
            M: 'osù kan',
            MM: 'osù %d',
            y: 'ọdún kan',
            yy: 'ọdún %d'
        },
        dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
        ordinal: 'ọjọ́ %d',
        week: {
            dow: 1,
            doy: 4 }
    });

    return yo;
});

/***/ }),

/***/ 739:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var zhCn = moment.defineLocale('zh-cn', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日Ah点mm分',
            LLLL: 'YYYY年M月D日ddddAh点mm分',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            } else {
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar: {
            sameDay: '[今天]LT',
            nextDay: '[明天]LT',
            nextWeek: '[下]ddddLT',
            lastDay: '[昨天]LT',
            lastWeek: '[上]ddddLT',
            sameElse: 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '周';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s内',
            past: '%s前',
            s: '几秒',
            ss: '%d 秒',
            m: '1 分钟',
            mm: '%d 分钟',
            h: '1 小时',
            hh: '%d 小时',
            d: '1 天',
            dd: '%d 天',
            M: '1 个月',
            MM: '%d 个月',
            y: '1 年',
            yy: '%d 年'
        },
        week: {
            dow: 1,
            doy: 4 }
    });

    return zhCn;
});

/***/ }),

/***/ 740:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var zhHk = moment.defineLocale('zh-hk', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日dddd HH:mm',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar: {
            sameDay: '[今天]LT',
            nextDay: '[明天]LT',
            nextWeek: '[下]ddddLT',
            lastDay: '[昨天]LT',
            lastWeek: '[上]ddddLT',
            sameElse: 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '週';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s內',
            past: '%s前',
            s: '幾秒',
            ss: '%d 秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年'
        }
    });

    return zhHk;
});

/***/ }),

/***/ 741:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__ = __webpack_require__(4);



;(function (global, factory) {
    (typeof exports === 'undefined' ? 'undefined' : Object(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof__["default"])(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(607)) : typeof define === 'function' && __webpack_require__(41) ? define(['../moment'], factory) : factory(global.moment);
})(this, function (moment) {
    'use strict';

    var zhTw = moment.defineLocale('zh-tw', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日dddd HH:mm',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem: function meridiem(hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar: {
            sameDay: '[今天] LT',
            nextDay: '[明天] LT',
            nextWeek: '[下]dddd LT',
            lastDay: '[昨天] LT',
            lastWeek: '[上]dddd LT',
            sameElse: 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal: function ordinal(number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '週';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s內',
            past: '%s前',
            s: '幾秒',
            ss: '%d 秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年'
        }
    });

    return zhTw;
});

/***/ }),

/***/ 765:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(766);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(2)("310003e9", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-39eba39d\",\"scoped\":false,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Calendar.vue", function() {
     var newContent = require("!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-39eba39d\",\"scoped\":false,\"hasInlineConfig\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Calendar.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 766:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)(false);
// imports


// module
exports.push([module.i, "\n#fullCalendar {\n  min-height: 300px;\n}\n.el-loading-spinner .path {\n  stroke: #66615B !important;\n}\n", ""]);

// exports


/***/ }),

/***/ 767:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_sweetalert2__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_jquery__ = __webpack_require__(613);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_fullcalendar__ = __webpack_require__(768);






var today = new Date();
var y = today.getFullYear();
var m = today.getMonth();
var d = today.getDate();
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      events: [{
        title: 'All Day Event',
        start: new Date(y, m, 1),
        className: 'event-default'
      }, {
        id: 999,
        title: 'Repeating Event',
        start: new Date(y, m, d - 4, 6, 0),
        allDay: false,
        className: 'event-rose'
      }, {
        id: 999,
        title: 'Repeating Event',
        start: new Date(y, m, d + 3, 6, 0),
        allDay: false,
        className: 'event-rose'
      }, {
        title: 'Meeting',
        start: new Date(y, m, d - 1, 10, 30),
        allDay: false,
        className: 'event-green'
      }, {
        title: 'Lunch',
        start: new Date(y, m, d + 7, 12, 0),
        end: new Date(y, m, d + 7, 14, 0),
        allDay: false,
        className: 'event-red'
      }, {
        title: 'Md-pro Launch',
        start: new Date(y, m, d - 2, 12, 0),
        allDay: true,
        className: 'event-azure'
      }, {
        title: 'Birthday Party',
        start: new Date(y, m, d + 1, 19, 0),
        end: new Date(y, m, d + 1, 22, 30),
        allDay: false,
        className: 'event-azure'
      }, {
        title: 'Click for Creative Tim',
        start: new Date(y, m, 21),
        end: new Date(y, m, 22),
        url: 'http://www.creative-tim.com/',
        className: 'event-orange'
      }, {
        title: 'Click for Google',
        start: new Date(y, m, 21),
        end: new Date(y, m, 22),
        url: 'http://www.creative-tim.com/',
        className: 'event-orange'
      }]
    };
  },

  methods: {
    initCalendar: function initCalendar($) {
      var self = this;
      var $calendar = $('#fullCalendar');
      $calendar.fullCalendar({
        header: {
          left: 'title',
          center: 'month,agendaWeek,agendaDay',
          right: 'prev,next,today'
        },
        defaultDate: today,
        selectable: true,
        selectHelper: true,
        views: {
          month: {
            titleFormat: 'MMMM YYYY'
          },
          week: {
            titleFormat: ' MMMM D YYYY'
          },
          day: {
            titleFormat: 'D MMM, YYYY'
          }
        },
        select: function select(start, end) {
          Object(__WEBPACK_IMPORTED_MODULE_0_sweetalert2__["default"])({
            title: 'Create an Event',
            html: '<div class="form-group">' + '<input class="form-control" placeholder="Event Title" id="input-field">' + '</div>',
            showCancelButton: true,
            confirmButtonClass: 'btn btn-success',
            cancelButtonClass: 'btn btn-danger',
            buttonsStyling: false
          }).then(function (result) {
            var eventData;
            var eventTitle = $('#input-field').val();
            if (eventTitle) {
              eventData = {
                title: eventTitle,
                start: start,
                end: end
              };
              $calendar.fullCalendar('renderEvent', eventData, true);
            }
            $calendar.fullCalendar('unselect');
          });
        },
        editable: true,
        eventLimit: true,
        events: self.events
      });
    }
  },
  mounted: function mounted() {
    window.$ = window.jQuery = __WEBPACK_IMPORTED_MODULE_1_jquery__["default"];
    this.initCalendar(__WEBPACK_IMPORTED_MODULE_1_jquery__["default"]);
  }
});

/***/ }),

/***/ 768:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_own_property_names__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_own_property_names___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_own_property_names__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_create__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_create___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_create__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_set_prototype_of__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_set_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_set_prototype_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_object_define_property__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_object_define_property___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_object_define_property__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__ = __webpack_require__(4);
(function webpackUniversalModuleDefinition(root,factory){if((typeof exports==='undefined'?'undefined':Object(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__["default"])(exports))==='object'&&( false?'undefined':Object(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__["default"])(module))==='object')module.exports=factory(__webpack_require__(607),__webpack_require__(613));else if(typeof define==='function'&&__webpack_require__(41))define(["moment","jquery"],factory);else if((typeof exports==='undefined'?'undefined':Object(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__["default"])(exports))==='object')exports["FullCalendar"]=factory(__webpack_require__(607),__webpack_require__(613));else root["FullCalendar"]=factory(root["moment"],root["jQuery"]);})(typeof self!=='undefined'?self:this,function(__WEBPACK_EXTERNAL_MODULE_0__,__WEBPACK_EXTERNAL_MODULE_3__){return function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports;}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports;}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){__WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_object_define_property___default()(exports,name,{configurable:false,enumerable:true,get:getter});}};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module['default'];}:function getModuleExports(){return module;};__webpack_require__.d(getter,'a',getter);return getter;};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=236);}([function(module,exports){module.exports=__WEBPACK_EXTERNAL_MODULE_0__;},,function(module,exports){var extendStatics=__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_set_prototype_of___default.a||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};exports.__extends=function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_create___default()(b):(__.prototype=b.prototype,new __());};},function(module,exports){module.exports=__WEBPACK_EXTERNAL_MODULE_3__;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var moment=__webpack_require__(0);var $=__webpack_require__(3);function compensateScroll(rowEls,scrollbarWidths){if(scrollbarWidths.left){rowEls.css({'border-left-width':1,'margin-left':scrollbarWidths.left-1});}if(scrollbarWidths.right){rowEls.css({'border-right-width':1,'margin-right':scrollbarWidths.right-1});}}exports.compensateScroll=compensateScroll;function uncompensateScroll(rowEls){rowEls.css({'margin-left':'','margin-right':'','border-left-width':'','border-right-width':''});}exports.uncompensateScroll=uncompensateScroll;function disableCursor(){$('body').addClass('fc-not-allowed');}exports.disableCursor=disableCursor;function enableCursor(){$('body').removeClass('fc-not-allowed');}exports.enableCursor=enableCursor;function distributeHeight(els,availableHeight,shouldRedistribute){var minOffset1=Math.floor(availableHeight/els.length);var minOffset2=Math.floor(availableHeight-minOffset1*(els.length-1));var flexEls=[];var flexOffsets=[];var flexHeights=[];var usedHeight=0;undistributeHeight(els);els.each(function(i,el){var minOffset=i===els.length-1?minOffset2:minOffset1;var naturalOffset=$(el).outerHeight(true);if(naturalOffset<minOffset){flexEls.push(el);flexOffsets.push(naturalOffset);flexHeights.push($(el).height());}else{usedHeight+=naturalOffset;}});if(shouldRedistribute){availableHeight-=usedHeight;minOffset1=Math.floor(availableHeight/flexEls.length);minOffset2=Math.floor(availableHeight-minOffset1*(flexEls.length-1));}$(flexEls).each(function(i,el){var minOffset=i===flexEls.length-1?minOffset2:minOffset1;var naturalOffset=flexOffsets[i];var naturalHeight=flexHeights[i];var newHeight=minOffset-(naturalOffset-naturalHeight);if(naturalOffset<minOffset){$(el).height(newHeight);}});}exports.distributeHeight=distributeHeight;function undistributeHeight(els){els.height('');}exports.undistributeHeight=undistributeHeight;function matchCellWidths(els){var maxInnerWidth=0;els.find('> *').each(function(i,innerEl){var innerWidth=$(innerEl).outerWidth();if(innerWidth>maxInnerWidth){maxInnerWidth=innerWidth;}});maxInnerWidth++;els.width(maxInnerWidth);return maxInnerWidth;}exports.matchCellWidths=matchCellWidths;function subtractInnerElHeight(outerEl,innerEl){var both=outerEl.add(innerEl);var diff;both.css({position:'relative',left:-1});diff=outerEl.outerHeight()-innerEl.outerHeight();both.css({position:'',left:''});return diff;}exports.subtractInnerElHeight=subtractInnerElHeight;function getScrollParent(el){var position=el.css('position');var scrollParent=el.parents().filter(function(){var parent=$(this);return /(auto|scroll)/.test(parent.css('overflow')+parent.css('overflow-y')+parent.css('overflow-x'));}).eq(0);return position==='fixed'||!scrollParent.length?$(el[0].ownerDocument||document):scrollParent;}exports.getScrollParent=getScrollParent;function getOuterRect(el,origin){var offset=el.offset();var left=offset.left-(origin?origin.left:0);var top=offset.top-(origin?origin.top:0);return{left:left,right:left+el.outerWidth(),top:top,bottom:top+el.outerHeight()};}exports.getOuterRect=getOuterRect;function getClientRect(el,origin){var offset=el.offset();var scrollbarWidths=getScrollbarWidths(el);var left=offset.left+getCssFloat(el,'border-left-width')+scrollbarWidths.left-(origin?origin.left:0);var top=offset.top+getCssFloat(el,'border-top-width')+scrollbarWidths.top-(origin?origin.top:0);return{left:left,right:left+el[0].clientWidth,top:top,bottom:top+el[0].clientHeight};}exports.getClientRect=getClientRect;function getContentRect(el,origin){var offset=el.offset();var left=offset.left+getCssFloat(el,'border-left-width')+getCssFloat(el,'padding-left')-(origin?origin.left:0);var top=offset.top+getCssFloat(el,'border-top-width')+getCssFloat(el,'padding-top')-(origin?origin.top:0);return{left:left,right:left+el.width(),top:top,bottom:top+el.height()};}exports.getContentRect=getContentRect;function getScrollbarWidths(el){var leftRightWidth=el[0].offsetWidth-el[0].clientWidth;var bottomWidth=el[0].offsetHeight-el[0].clientHeight;var widths;leftRightWidth=sanitizeScrollbarWidth(leftRightWidth);bottomWidth=sanitizeScrollbarWidth(bottomWidth);widths={left:0,right:0,top:0,bottom:bottomWidth};if(getIsLeftRtlScrollbars()&&el.css('direction')==='rtl'){widths.left=leftRightWidth;}else{widths.right=leftRightWidth;}return widths;}exports.getScrollbarWidths=getScrollbarWidths;function sanitizeScrollbarWidth(width){width=Math.max(0,width);width=Math.round(width);return width;}var _isLeftRtlScrollbars=null;function getIsLeftRtlScrollbars(){if(_isLeftRtlScrollbars===null){_isLeftRtlScrollbars=computeIsLeftRtlScrollbars();}return _isLeftRtlScrollbars;}function computeIsLeftRtlScrollbars(){var el=$('<div><div/></div>').css({position:'absolute',top:-1000,left:0,border:0,padding:0,overflow:'scroll',direction:'rtl'}).appendTo('body');var innerEl=el.children();var res=innerEl.offset().left>el.offset().left;el.remove();return res;}function getCssFloat(el,prop){return parseFloat(el.css(prop))||0;}function isPrimaryMouseButton(ev){return ev.which===1&&!ev.ctrlKey;}exports.isPrimaryMouseButton=isPrimaryMouseButton;function getEvX(ev){var touches=ev.originalEvent.touches;if(touches&&touches.length){return touches[0].pageX;}return ev.pageX;}exports.getEvX=getEvX;function getEvY(ev){var touches=ev.originalEvent.touches;if(touches&&touches.length){return touches[0].pageY;}return ev.pageY;}exports.getEvY=getEvY;function getEvIsTouch(ev){return /^touch/.test(ev.type);}exports.getEvIsTouch=getEvIsTouch;function preventSelection(el){el.addClass('fc-unselectable').on('selectstart',preventDefault);}exports.preventSelection=preventSelection;function allowSelection(el){el.removeClass('fc-unselectable').off('selectstart',preventDefault);}exports.allowSelection=allowSelection;function preventDefault(ev){ev.preventDefault();}exports.preventDefault=preventDefault;function intersectRects(rect1,rect2){var res={left:Math.max(rect1.left,rect2.left),right:Math.min(rect1.right,rect2.right),top:Math.max(rect1.top,rect2.top),bottom:Math.min(rect1.bottom,rect2.bottom)};if(res.left<res.right&&res.top<res.bottom){return res;}return false;}exports.intersectRects=intersectRects;function constrainPoint(point,rect){return{left:Math.min(Math.max(point.left,rect.left),rect.right),top:Math.min(Math.max(point.top,rect.top),rect.bottom)};}exports.constrainPoint=constrainPoint;function getRectCenter(rect){return{left:(rect.left+rect.right)/2,top:(rect.top+rect.bottom)/2};}exports.getRectCenter=getRectCenter;function diffPoints(point1,point2){return{left:point1.left-point2.left,top:point1.top-point2.top};}exports.diffPoints=diffPoints;function parseFieldSpecs(input){var specs=[];var tokens=[];var i;var token;if(typeof input==='string'){tokens=input.split(/\s*,\s*/);}else if(typeof input==='function'){tokens=[input];}else if($.isArray(input)){tokens=input;}for(i=0;i<tokens.length;i++){token=tokens[i];if(typeof token==='string'){specs.push(token.charAt(0)==='-'?{field:token.substring(1),order:-1}:{field:token,order:1});}else if(typeof token==='function'){specs.push({func:token});}}return specs;}exports.parseFieldSpecs=parseFieldSpecs;function compareByFieldSpecs(obj1,obj2,fieldSpecs,obj1fallback,obj2fallback){var i;var cmp;for(i=0;i<fieldSpecs.length;i++){cmp=compareByFieldSpec(obj1,obj2,fieldSpecs[i],obj1fallback,obj2fallback);if(cmp){return cmp;}}return 0;}exports.compareByFieldSpecs=compareByFieldSpecs;function compareByFieldSpec(obj1,obj2,fieldSpec,obj1fallback,obj2fallback){if(fieldSpec.func){return fieldSpec.func(obj1,obj2);}var val1=obj1[fieldSpec.field];var val2=obj2[fieldSpec.field];if(val1==null&&obj1fallback){val1=obj1fallback[fieldSpec.field];}if(val2==null&&obj2fallback){val2=obj2fallback[fieldSpec.field];}return flexibleCompare(val1,val2)*(fieldSpec.order||1);}exports.compareByFieldSpec=compareByFieldSpec;function flexibleCompare(a,b){if(!a&&!b){return 0;}if(b==null){return-1;}if(a==null){return 1;}if($.type(a)==='string'||$.type(b)==='string'){return String(a).localeCompare(String(b));}return a-b;}exports.flexibleCompare=flexibleCompare;exports.dayIDs=['sun','mon','tue','wed','thu','fri','sat'];exports.unitsDesc=['year','month','week','day','hour','minute','second','millisecond'];function diffDayTime(a,b){return moment.duration({days:a.clone().stripTime().diff(b.clone().stripTime(),'days'),ms:a.time()-b.time()});}exports.diffDayTime=diffDayTime;function diffDay(a,b){return moment.duration({days:a.clone().stripTime().diff(b.clone().stripTime(),'days')});}exports.diffDay=diffDay;function diffByUnit(a,b,unit){return moment.duration(Math.round(a.diff(b,unit,true)),unit);}exports.diffByUnit=diffByUnit;function computeGreatestUnit(start,end){var i;var unit;var val;for(i=0;i<exports.unitsDesc.length;i++){unit=exports.unitsDesc[i];val=computeRangeAs(unit,start,end);if(val>=1&&isInt(val)){break;}}return unit;}exports.computeGreatestUnit=computeGreatestUnit;function computeDurationGreatestUnit(duration,durationInput){var unit=computeGreatestUnit(duration);if(unit==='week'&&(typeof durationInput==='undefined'?'undefined':Object(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__["default"])(durationInput))==='object'&&durationInput.days){unit='day';}return unit;}exports.computeDurationGreatestUnit=computeDurationGreatestUnit;function computeRangeAs(unit,start,end){if(end!=null){return end.diff(start,unit,true);}else if(moment.isDuration(start)){return start.as(unit);}else{return start.end.diff(start.start,unit,true);}}function divideRangeByDuration(start,end,dur){var months;if(durationHasTime(dur)){return(end-start)/dur;}months=dur.asMonths();if(Math.abs(months)>=1&&isInt(months)){return end.diff(start,'months',true)/months;}return end.diff(start,'days',true)/dur.asDays();}exports.divideRangeByDuration=divideRangeByDuration;function divideDurationByDuration(dur1,dur2){var months1;var months2;if(durationHasTime(dur1)||durationHasTime(dur2)){return dur1/dur2;}months1=dur1.asMonths();months2=dur2.asMonths();if(Math.abs(months1)>=1&&isInt(months1)&&Math.abs(months2)>=1&&isInt(months2)){return months1/months2;}return dur1.asDays()/dur2.asDays();}exports.divideDurationByDuration=divideDurationByDuration;function multiplyDuration(dur,n){var months;if(durationHasTime(dur)){return moment.duration(dur*n);}months=dur.asMonths();if(Math.abs(months)>=1&&isInt(months)){return moment.duration({months:months*n});}return moment.duration({days:dur.asDays()*n});}exports.multiplyDuration=multiplyDuration;function durationHasTime(dur){return Boolean(dur.hours()||dur.minutes()||dur.seconds()||dur.milliseconds());}exports.durationHasTime=durationHasTime;function isNativeDate(input){return Object.prototype.toString.call(input)==='[object Date]'||input instanceof Date;}exports.isNativeDate=isNativeDate;function isTimeString(str){return typeof str==='string'&&/^\d+\:\d+(?:\:\d+\.?(?:\d{3})?)?$/.test(str);}exports.isTimeString=isTimeString;function log(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var console=window.console;if(console&&console.log){return console.log.apply(console,args);}}exports.log=log;function warn(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var console=window.console;if(console&&console.warn){return console.warn.apply(console,args);}else{return log.apply(null,args);}}exports.warn=warn;var hasOwnPropMethod={}.hasOwnProperty;function mergeProps(propObjs,complexProps){var dest={};var i;var name;var complexObjs;var j;var val;var props;if(complexProps){for(i=0;i<complexProps.length;i++){name=complexProps[i];complexObjs=[];for(j=propObjs.length-1;j>=0;j--){val=propObjs[j][name];if((typeof val==='undefined'?'undefined':Object(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__["default"])(val))==='object'){complexObjs.unshift(val);}else if(val!==undefined){dest[name]=val;break;}}if(complexObjs.length){dest[name]=mergeProps(complexObjs);}}}for(i=propObjs.length-1;i>=0;i--){props=propObjs[i];for(name in props){if(!(name in dest)){dest[name]=props[name];}}}return dest;}exports.mergeProps=mergeProps;function copyOwnProps(src,dest){for(var name_1 in src){if(hasOwnProp(src,name_1)){dest[name_1]=src[name_1];}}}exports.copyOwnProps=copyOwnProps;function hasOwnProp(obj,name){return hasOwnPropMethod.call(obj,name);}exports.hasOwnProp=hasOwnProp;function applyAll(functions,thisObj,args){if($.isFunction(functions)){functions=[functions];}if(functions){var i=void 0;var ret=void 0;for(i=0;i<functions.length;i++){ret=functions[i].apply(thisObj,args)||ret;}return ret;}}exports.applyAll=applyAll;function removeMatching(array,testFunc){var removeCnt=0;var i=0;while(i<array.length){if(testFunc(array[i])){array.splice(i,1);removeCnt++;}else{i++;}}return removeCnt;}exports.removeMatching=removeMatching;function removeExact(array,exactVal){var removeCnt=0;var i=0;while(i<array.length){if(array[i]===exactVal){array.splice(i,1);removeCnt++;}else{i++;}}return removeCnt;}exports.removeExact=removeExact;function isArraysEqual(a0,a1){var len=a0.length;var i;if(len==null||len!==a1.length){return false;}for(i=0;i<len;i++){if(a0[i]!==a1[i]){return false;}}return true;}exports.isArraysEqual=isArraysEqual;function firstDefined(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}for(var i=0;i<args.length;i++){if(args[i]!==undefined){return args[i];}}}exports.firstDefined=firstDefined;function htmlEscape(s){return(s+'').replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/'/g,'&#039;').replace(/"/g,'&quot;').replace(/\n/g,'<br />');}exports.htmlEscape=htmlEscape;function stripHtmlEntities(text){return text.replace(/&.*?;/g,'');}exports.stripHtmlEntities=stripHtmlEntities;function cssToStr(cssProps){var statements=[];$.each(cssProps,function(name,val){if(val!=null){statements.push(name+':'+val);}});return statements.join(';');}exports.cssToStr=cssToStr;function attrsToStr(attrs){var parts=[];$.each(attrs,function(name,val){if(val!=null){parts.push(name+'="'+htmlEscape(val)+'"');}});return parts.join(' ');}exports.attrsToStr=attrsToStr;function capitaliseFirstLetter(str){return str.charAt(0).toUpperCase()+str.slice(1);}exports.capitaliseFirstLetter=capitaliseFirstLetter;function compareNumbers(a,b){return a-b;}exports.compareNumbers=compareNumbers;function isInt(n){return n%1===0;}exports.isInt=isInt;function proxy(obj,methodName){var method=obj[methodName];return function(){return method.apply(obj,arguments);};}exports.proxy=proxy;function debounce(func,wait,immediate){if(immediate===void 0){immediate=false;}var timeout;var args;var context;var timestamp;var result;var later=function later(){var last=+new Date()-timestamp;if(last<wait){timeout=setTimeout(later,wait-last);}else{timeout=null;if(!immediate){result=func.apply(context,args);context=args=null;}}};return function(){context=this;args=arguments;timestamp=+new Date();var callNow=immediate&&!timeout;if(!timeout){timeout=setTimeout(later,wait);}if(callNow){result=func.apply(context,args);context=args=null;}return result;};}exports.debounce=debounce;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var moment=__webpack_require__(0);var moment_ext_1=__webpack_require__(10);var UnzonedRange=function(){function UnzonedRange(startInput,endInput){this.isStart=true;this.isEnd=true;if(moment.isMoment(startInput)){startInput=startInput.clone().stripZone();}if(moment.isMoment(endInput)){endInput=endInput.clone().stripZone();}if(startInput){this.startMs=startInput.valueOf();}if(endInput){this.endMs=endInput.valueOf();}}UnzonedRange.invertRanges=function(ranges,constraintRange){var invertedRanges=[];var startMs=constraintRange.startMs;var i;var dateRange;ranges.sort(compareUnzonedRanges);for(i=0;i<ranges.length;i++){dateRange=ranges[i];if(dateRange.startMs>startMs){invertedRanges.push(new UnzonedRange(startMs,dateRange.startMs));}if(dateRange.endMs>startMs){startMs=dateRange.endMs;}}if(startMs<constraintRange.endMs){invertedRanges.push(new UnzonedRange(startMs,constraintRange.endMs));}return invertedRanges;};UnzonedRange.prototype.intersect=function(otherRange){var startMs=this.startMs;var endMs=this.endMs;var newRange=null;if(otherRange.startMs!=null){if(startMs==null){startMs=otherRange.startMs;}else{startMs=Math.max(startMs,otherRange.startMs);}}if(otherRange.endMs!=null){if(endMs==null){endMs=otherRange.endMs;}else{endMs=Math.min(endMs,otherRange.endMs);}}if(startMs==null||endMs==null||startMs<endMs){newRange=new UnzonedRange(startMs,endMs);newRange.isStart=this.isStart&&startMs===this.startMs;newRange.isEnd=this.isEnd&&endMs===this.endMs;}return newRange;};UnzonedRange.prototype.intersectsWith=function(otherRange){return(this.endMs==null||otherRange.startMs==null||this.endMs>otherRange.startMs)&&(this.startMs==null||otherRange.endMs==null||this.startMs<otherRange.endMs);};UnzonedRange.prototype.containsRange=function(innerRange){return(this.startMs==null||innerRange.startMs!=null&&innerRange.startMs>=this.startMs)&&(this.endMs==null||innerRange.endMs!=null&&innerRange.endMs<=this.endMs);};UnzonedRange.prototype.containsDate=function(date){var ms=date.valueOf();return(this.startMs==null||ms>=this.startMs)&&(this.endMs==null||ms<this.endMs);};UnzonedRange.prototype.constrainDate=function(date){var ms=date.valueOf();if(this.startMs!=null&&ms<this.startMs){ms=this.startMs;}if(this.endMs!=null&&ms>=this.endMs){ms=this.endMs-1;}return ms;};UnzonedRange.prototype.equals=function(otherRange){return this.startMs===otherRange.startMs&&this.endMs===otherRange.endMs;};UnzonedRange.prototype.clone=function(){var range=new UnzonedRange(this.startMs,this.endMs);range.isStart=this.isStart;range.isEnd=this.isEnd;return range;};UnzonedRange.prototype.getStart=function(){if(this.startMs!=null){return moment_ext_1.default.utc(this.startMs).stripZone();}return null;};UnzonedRange.prototype.getEnd=function(){if(this.endMs!=null){return moment_ext_1.default.utc(this.endMs).stripZone();}return null;};UnzonedRange.prototype.as=function(unit){return moment.utc(this.endMs).diff(moment.utc(this.startMs),unit,true);};return UnzonedRange;}();exports.default=UnzonedRange;function compareUnzonedRanges(range1,range2){return range1.startMs-range2.startMs;}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var ParsableModelMixin_1=__webpack_require__(208);var Class_1=__webpack_require__(33);var EventDefParser_1=__webpack_require__(49);var EventSource=function(_super){tslib_1.__extends(EventSource,_super);function EventSource(calendar){var _this=_super.call(this)||this;_this.calendar=calendar;_this.className=[];_this.uid=String(EventSource.uuid++);return _this;}EventSource.parse=function(rawInput,calendar){var source=new this(calendar);if((typeof rawInput==='undefined'?'undefined':Object(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__["default"])(rawInput))==='object'){if(source.applyProps(rawInput)){return source;}}return false;};EventSource.normalizeId=function(id){if(id){return String(id);}return null;};EventSource.prototype.fetch=function(start,end,timezone){};EventSource.prototype.removeEventDefsById=function(eventDefId){};EventSource.prototype.removeAllEventDefs=function(){};EventSource.prototype.getPrimitive=function(otherSource){};EventSource.prototype.parseEventDefs=function(rawEventDefs){var i;var eventDef;var eventDefs=[];for(i=0;i<rawEventDefs.length;i++){eventDef=this.parseEventDef(rawEventDefs[i]);if(eventDef){eventDefs.push(eventDef);}}return eventDefs;};EventSource.prototype.parseEventDef=function(rawInput){var calendarTransform=this.calendar.opt('eventDataTransform');var sourceTransform=this.eventDataTransform;if(calendarTransform){rawInput=calendarTransform(rawInput,this.calendar);}if(sourceTransform){rawInput=sourceTransform(rawInput,this.calendar);}return EventDefParser_1.default.parse(rawInput,this);};EventSource.prototype.applyManualStandardProps=function(rawProps){if(rawProps.id!=null){this.id=EventSource.normalizeId(rawProps.id);}if($.isArray(rawProps.className)){this.className=rawProps.className;}else if(typeof rawProps.className==='string'){this.className=rawProps.className.split(/\s+/);}return true;};EventSource.uuid=0;EventSource.defineStandardProps=ParsableModelMixin_1.default.defineStandardProps;EventSource.copyVerbatimStandardProps=ParsableModelMixin_1.default.copyVerbatimStandardProps;return EventSource;}(Class_1.default);exports.default=EventSource;ParsableModelMixin_1.default.mixInto(EventSource);EventSource.defineStandardProps({id:false,className:false,color:true,backgroundColor:true,borderColor:true,textColor:true,editable:true,startEditable:true,durationEditable:true,rendering:true,overlap:true,constraint:true,allDayDefault:true,eventDataTransform:true});},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var Mixin_1=__webpack_require__(14);var guid=0;var ListenerMixin=function(_super){tslib_1.__extends(ListenerMixin,_super);function ListenerMixin(){return _super!==null&&_super.apply(this,arguments)||this;}ListenerMixin.prototype.listenTo=function(other,arg,callback){if((typeof arg==='undefined'?'undefined':Object(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__["default"])(arg))==='object'){for(var eventName in arg){if(arg.hasOwnProperty(eventName)){this.listenTo(other,eventName,arg[eventName]);}}}else if(typeof arg==='string'){other.on(arg+'.'+this.getListenerNamespace(),$.proxy(callback,this));}};ListenerMixin.prototype.stopListeningTo=function(other,eventName){other.off((eventName||'')+'.'+this.getListenerNamespace());};ListenerMixin.prototype.getListenerNamespace=function(){if(this.listenerId==null){this.listenerId=guid++;}return'_listener'+this.listenerId;};return ListenerMixin;}(Mixin_1.default);exports.default=ListenerMixin;},,,function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var moment=__webpack_require__(0);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var ambigDateOfMonthRegex=/^\s*\d{4}-\d\d$/;var ambigTimeOrZoneRegex=/^\s*\d{4}-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?)?$/;var newMomentProto=moment.fn;exports.newMomentProto=newMomentProto;var oldMomentProto=$.extend({},newMomentProto);exports.oldMomentProto=oldMomentProto;var momentProperties=moment.momentProperties;momentProperties.push('_fullCalendar');momentProperties.push('_ambigTime');momentProperties.push('_ambigZone');function oldMomentFormat(mom,formatStr){return oldMomentProto.format.call(mom,formatStr);}exports.oldMomentFormat=oldMomentFormat;var momentExt=function momentExt(){return makeMoment(arguments);};exports.default=momentExt;momentExt.utc=function(){var mom=makeMoment(arguments,true);if(mom.hasTime()){mom.utc();}return mom;};momentExt.parseZone=function(){return makeMoment(arguments,true,true);};function makeMoment(args,parseAsUTC,parseZone){if(parseAsUTC===void 0){parseAsUTC=false;}if(parseZone===void 0){parseZone=false;}var input=args[0];var isSingleString=args.length===1&&typeof input==='string';var isAmbigTime;var isAmbigZone;var ambigMatch;var mom;if(moment.isMoment(input)||util_1.isNativeDate(input)||input===undefined){mom=moment.apply(null,args);}else{isAmbigTime=false;isAmbigZone=false;if(isSingleString){if(ambigDateOfMonthRegex.test(input)){input+='-01';args=[input];isAmbigTime=true;isAmbigZone=true;}else if(ambigMatch=ambigTimeOrZoneRegex.exec(input)){isAmbigTime=!ambigMatch[5];isAmbigZone=true;}}else if($.isArray(input)){isAmbigZone=true;}if(parseAsUTC||isAmbigTime){mom=moment.utc.apply(moment,args);}else{mom=moment.apply(null,args);}if(isAmbigTime){mom._ambigTime=true;mom._ambigZone=true;}else if(parseZone){if(isAmbigZone){mom._ambigZone=true;}else if(isSingleString){mom.utcOffset(input);}}}mom._fullCalendar=true;return mom;}newMomentProto.week=newMomentProto.weeks=function(input){var weekCalc=this._locale._fullCalendar_weekCalc;if(input==null&&typeof weekCalc==='function'){return weekCalc(this);}else if(weekCalc==='ISO'){return oldMomentProto.isoWeek.apply(this,arguments);}return oldMomentProto.week.apply(this,arguments);};newMomentProto.time=function(time){if(!this._fullCalendar){return oldMomentProto.time.apply(this,arguments);}if(time==null){return moment.duration({hours:this.hours(),minutes:this.minutes(),seconds:this.seconds(),milliseconds:this.milliseconds()});}else{this._ambigTime=false;if(!moment.isDuration(time)&&!moment.isMoment(time)){time=moment.duration(time);}var dayHours=0;if(moment.isDuration(time)){dayHours=Math.floor(time.asDays())*24;}return this.hours(dayHours+time.hours()).minutes(time.minutes()).seconds(time.seconds()).milliseconds(time.milliseconds());}};newMomentProto.stripTime=function(){if(!this._ambigTime){this.utc(true);this.set({hours:0,minutes:0,seconds:0,ms:0});this._ambigTime=true;this._ambigZone=true;}return this;};newMomentProto.hasTime=function(){return!this._ambigTime;};newMomentProto.stripZone=function(){var wasAmbigTime;if(!this._ambigZone){wasAmbigTime=this._ambigTime;this.utc(true);this._ambigTime=wasAmbigTime||false;this._ambigZone=true;}return this;};newMomentProto.hasZone=function(){return!this._ambigZone;};newMomentProto.local=function(keepLocalTime){oldMomentProto.local.call(this,this._ambigZone||keepLocalTime);this._ambigTime=false;this._ambigZone=false;return this;};newMomentProto.utc=function(keepLocalTime){oldMomentProto.utc.call(this,keepLocalTime);this._ambigTime=false;this._ambigZone=false;return this;};newMomentProto.utcOffset=function(tzo){if(tzo!=null){this._ambigTime=false;this._ambigZone=false;}return oldMomentProto.utcOffset.apply(this,arguments);};},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var Mixin_1=__webpack_require__(14);var EmitterMixin=function(_super){tslib_1.__extends(EmitterMixin,_super);function EmitterMixin(){return _super!==null&&_super.apply(this,arguments)||this;}EmitterMixin.prototype.on=function(types,handler){$(this).on(types,this._prepareIntercept(handler));return this;};EmitterMixin.prototype.one=function(types,handler){$(this).one(types,this._prepareIntercept(handler));return this;};EmitterMixin.prototype._prepareIntercept=function(handler){var intercept=function intercept(ev,extra){return handler.apply(extra.context||this,extra.args||[]);};if(!handler.guid){handler.guid=$.guid++;}intercept.guid=handler.guid;return intercept;};EmitterMixin.prototype.off=function(types,handler){$(this).off(types,handler);return this;};EmitterMixin.prototype.trigger=function(types){var args=[];for(var _i=1;_i<arguments.length;_i++){args[_i-1]=arguments[_i];}$(this).triggerHandler(types,{args:args});return this;};EmitterMixin.prototype.triggerWith=function(types,context,args){$(this).triggerHandler(types,{context:context,args:args});return this;};EmitterMixin.prototype.hasHandlers=function(type){var hash=$._data(this,'events');return hash&&hash[type]&&hash[type].length>0;};return EmitterMixin;}(Mixin_1.default);exports.default=EmitterMixin;},function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var ComponentFootprint=function(){function ComponentFootprint(unzonedRange,isAllDay){this.isAllDay=false;this.unzonedRange=unzonedRange;this.isAllDay=isAllDay;}ComponentFootprint.prototype.toLegacy=function(calendar){return{start:calendar.msToMoment(this.unzonedRange.startMs,this.isAllDay),end:calendar.msToMoment(this.unzonedRange.endMs,this.isAllDay)};};return ComponentFootprint;}();exports.default=ComponentFootprint;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var EventDef_1=__webpack_require__(34);var EventInstance_1=__webpack_require__(209);var EventDateProfile_1=__webpack_require__(17);var SingleEventDef=function(_super){tslib_1.__extends(SingleEventDef,_super);function SingleEventDef(){return _super!==null&&_super.apply(this,arguments)||this;}SingleEventDef.prototype.buildInstances=function(){return[this.buildInstance()];};SingleEventDef.prototype.buildInstance=function(){return new EventInstance_1.default(this,this.dateProfile);};SingleEventDef.prototype.isAllDay=function(){return this.dateProfile.isAllDay();};SingleEventDef.prototype.clone=function(){var def=_super.prototype.clone.call(this);def.dateProfile=this.dateProfile;return def;};SingleEventDef.prototype.rezone=function(){var calendar=this.source.calendar;var dateProfile=this.dateProfile;this.dateProfile=new EventDateProfile_1.default(calendar.moment(dateProfile.start),dateProfile.end?calendar.moment(dateProfile.end):null,calendar);};SingleEventDef.prototype.applyManualStandardProps=function(rawProps){var superSuccess=_super.prototype.applyManualStandardProps.call(this,rawProps);var dateProfile=EventDateProfile_1.default.parse(rawProps,this.source);if(dateProfile){this.dateProfile=dateProfile;if(rawProps.date!=null){this.miscProps.date=rawProps.date;}return superSuccess;}else{return false;}};return SingleEventDef;}(EventDef_1.default);exports.default=SingleEventDef;SingleEventDef.defineStandardProps({start:false,date:false,end:false,allDay:false});},function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var Mixin=function(){function Mixin(){}Mixin.mixInto=function(destClass){var _this=this;__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_own_property_names___default()(this.prototype).forEach(function(name){if(!destClass.prototype[name]){destClass.prototype[name]=_this.prototype[name];}});};Mixin.mixOver=function(destClass){var _this=this;__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_own_property_names___default()(this.prototype).forEach(function(name){destClass.prototype[name]=_this.prototype[name];});};return Mixin;}();exports.default=Mixin;},function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var Interaction=function(){function Interaction(component){this.view=component._getView();this.component=component;}Interaction.prototype.opt=function(name){return this.view.opt(name);};Interaction.prototype.end=function(){};return Interaction;}();exports.default=Interaction;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});exports.version='3.9.0';exports.internalApiVersion=12;var util_1=__webpack_require__(4);exports.applyAll=util_1.applyAll;exports.debounce=util_1.debounce;exports.isInt=util_1.isInt;exports.htmlEscape=util_1.htmlEscape;exports.cssToStr=util_1.cssToStr;exports.proxy=util_1.proxy;exports.capitaliseFirstLetter=util_1.capitaliseFirstLetter;exports.getOuterRect=util_1.getOuterRect;exports.getClientRect=util_1.getClientRect;exports.getContentRect=util_1.getContentRect;exports.getScrollbarWidths=util_1.getScrollbarWidths;exports.preventDefault=util_1.preventDefault;exports.parseFieldSpecs=util_1.parseFieldSpecs;exports.compareByFieldSpecs=util_1.compareByFieldSpecs;exports.compareByFieldSpec=util_1.compareByFieldSpec;exports.flexibleCompare=util_1.flexibleCompare;exports.computeGreatestUnit=util_1.computeGreatestUnit;exports.divideRangeByDuration=util_1.divideRangeByDuration;exports.divideDurationByDuration=util_1.divideDurationByDuration;exports.multiplyDuration=util_1.multiplyDuration;exports.durationHasTime=util_1.durationHasTime;exports.log=util_1.log;exports.warn=util_1.warn;exports.removeExact=util_1.removeExact;exports.intersectRects=util_1.intersectRects;var date_formatting_1=__webpack_require__(47);exports.formatDate=date_formatting_1.formatDate;exports.formatRange=date_formatting_1.formatRange;exports.queryMostGranularFormatUnit=date_formatting_1.queryMostGranularFormatUnit;var locale_1=__webpack_require__(31);exports.datepickerLocale=locale_1.datepickerLocale;exports.locale=locale_1.locale;var moment_ext_1=__webpack_require__(10);exports.moment=moment_ext_1.default;var EmitterMixin_1=__webpack_require__(11);exports.EmitterMixin=EmitterMixin_1.default;var ListenerMixin_1=__webpack_require__(7);exports.ListenerMixin=ListenerMixin_1.default;var Model_1=__webpack_require__(48);exports.Model=Model_1.default;var Constraints_1=__webpack_require__(207);exports.Constraints=Constraints_1.default;var UnzonedRange_1=__webpack_require__(5);exports.UnzonedRange=UnzonedRange_1.default;var ComponentFootprint_1=__webpack_require__(12);exports.ComponentFootprint=ComponentFootprint_1.default;var BusinessHourGenerator_1=__webpack_require__(212);exports.BusinessHourGenerator=BusinessHourGenerator_1.default;var EventDef_1=__webpack_require__(34);exports.EventDef=EventDef_1.default;var EventDefMutation_1=__webpack_require__(37);exports.EventDefMutation=EventDefMutation_1.default;var EventSourceParser_1=__webpack_require__(38);exports.EventSourceParser=EventSourceParser_1.default;var EventSource_1=__webpack_require__(6);exports.EventSource=EventSource_1.default;var ThemeRegistry_1=__webpack_require__(51);exports.defineThemeSystem=ThemeRegistry_1.defineThemeSystem;var EventInstanceGroup_1=__webpack_require__(18);exports.EventInstanceGroup=EventInstanceGroup_1.default;var ArrayEventSource_1=__webpack_require__(52);exports.ArrayEventSource=ArrayEventSource_1.default;var FuncEventSource_1=__webpack_require__(215);exports.FuncEventSource=FuncEventSource_1.default;var JsonFeedEventSource_1=__webpack_require__(216);exports.JsonFeedEventSource=JsonFeedEventSource_1.default;var EventFootprint_1=__webpack_require__(36);exports.EventFootprint=EventFootprint_1.default;var Class_1=__webpack_require__(33);exports.Class=Class_1.default;var Mixin_1=__webpack_require__(14);exports.Mixin=Mixin_1.default;var CoordCache_1=__webpack_require__(53);exports.CoordCache=CoordCache_1.default;var DragListener_1=__webpack_require__(54);exports.DragListener=DragListener_1.default;var Promise_1=__webpack_require__(20);exports.Promise=Promise_1.default;var TaskQueue_1=__webpack_require__(217);exports.TaskQueue=TaskQueue_1.default;var RenderQueue_1=__webpack_require__(218);exports.RenderQueue=RenderQueue_1.default;var Scroller_1=__webpack_require__(39);exports.Scroller=Scroller_1.default;var Theme_1=__webpack_require__(19);exports.Theme=Theme_1.default;var DateComponent_1=__webpack_require__(219);exports.DateComponent=DateComponent_1.default;var InteractiveDateComponent_1=__webpack_require__(40);exports.InteractiveDateComponent=InteractiveDateComponent_1.default;var Calendar_1=__webpack_require__(220);exports.Calendar=Calendar_1.default;var View_1=__webpack_require__(41);exports.View=View_1.default;var ViewRegistry_1=__webpack_require__(22);exports.defineView=ViewRegistry_1.defineView;exports.getViewConfig=ViewRegistry_1.getViewConfig;var DayTableMixin_1=__webpack_require__(55);exports.DayTableMixin=DayTableMixin_1.default;var BusinessHourRenderer_1=__webpack_require__(56);exports.BusinessHourRenderer=BusinessHourRenderer_1.default;var EventRenderer_1=__webpack_require__(42);exports.EventRenderer=EventRenderer_1.default;var FillRenderer_1=__webpack_require__(57);exports.FillRenderer=FillRenderer_1.default;var HelperRenderer_1=__webpack_require__(58);exports.HelperRenderer=HelperRenderer_1.default;var ExternalDropping_1=__webpack_require__(222);exports.ExternalDropping=ExternalDropping_1.default;var EventResizing_1=__webpack_require__(223);exports.EventResizing=EventResizing_1.default;var EventPointing_1=__webpack_require__(59);exports.EventPointing=EventPointing_1.default;var EventDragging_1=__webpack_require__(224);exports.EventDragging=EventDragging_1.default;var DateSelecting_1=__webpack_require__(225);exports.DateSelecting=DateSelecting_1.default;var StandardInteractionsMixin_1=__webpack_require__(60);exports.StandardInteractionsMixin=StandardInteractionsMixin_1.default;var AgendaView_1=__webpack_require__(226);exports.AgendaView=AgendaView_1.default;var TimeGrid_1=__webpack_require__(227);exports.TimeGrid=TimeGrid_1.default;var DayGrid_1=__webpack_require__(61);exports.DayGrid=DayGrid_1.default;var BasicView_1=__webpack_require__(62);exports.BasicView=BasicView_1.default;var MonthView_1=__webpack_require__(229);exports.MonthView=MonthView_1.default;var ListView_1=__webpack_require__(230);exports.ListView=ListView_1.default;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var UnzonedRange_1=__webpack_require__(5);var EventDateProfile=function(){function EventDateProfile(start,end,calendar){this.start=start;this.end=end||null;this.unzonedRange=this.buildUnzonedRange(calendar);}EventDateProfile.parse=function(rawProps,source){var startInput=rawProps.start||rawProps.date;var endInput=rawProps.end;if(!startInput){return false;}var calendar=source.calendar;var start=calendar.moment(startInput);var end=endInput?calendar.moment(endInput):null;var forcedAllDay=rawProps.allDay;var forceEventDuration=calendar.opt('forceEventDuration');if(!start.isValid()){return false;}if(end&&(!end.isValid()||!end.isAfter(start))){end=null;}if(forcedAllDay==null){forcedAllDay=source.allDayDefault;if(forcedAllDay==null){forcedAllDay=calendar.opt('allDayDefault');}}if(forcedAllDay===true){start.stripTime();if(end){end.stripTime();}}else if(forcedAllDay===false){if(!start.hasTime()){start.time(0);}if(end&&!end.hasTime()){end.time(0);}}if(!end&&forceEventDuration){end=calendar.getDefaultEventEnd(!start.hasTime(),start);}return new EventDateProfile(start,end,calendar);};EventDateProfile.isStandardProp=function(propName){return propName==='start'||propName==='date'||propName==='end'||propName==='allDay';};EventDateProfile.prototype.isAllDay=function(){return!(this.start.hasTime()||this.end&&this.end.hasTime());};EventDateProfile.prototype.buildUnzonedRange=function(calendar){var startMs=this.start.clone().stripZone().valueOf();var endMs=this.getEnd(calendar).stripZone().valueOf();return new UnzonedRange_1.default(startMs,endMs);};EventDateProfile.prototype.getEnd=function(calendar){return this.end?this.end.clone():calendar.getDefaultEventEnd(this.isAllDay(),this.start);};return EventDateProfile;}();exports.default=EventDateProfile;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var UnzonedRange_1=__webpack_require__(5);var util_1=__webpack_require__(35);var EventRange_1=__webpack_require__(211);var EventInstanceGroup=function(){function EventInstanceGroup(eventInstances){this.eventInstances=eventInstances||[];}EventInstanceGroup.prototype.getAllEventRanges=function(constraintRange){if(constraintRange){return this.sliceNormalRenderRanges(constraintRange);}else{return this.eventInstances.map(util_1.eventInstanceToEventRange);}};EventInstanceGroup.prototype.sliceRenderRanges=function(constraintRange){if(this.isInverse()){return this.sliceInverseRenderRanges(constraintRange);}else{return this.sliceNormalRenderRanges(constraintRange);}};EventInstanceGroup.prototype.sliceNormalRenderRanges=function(constraintRange){var eventInstances=this.eventInstances;var i;var eventInstance;var slicedRange;var slicedEventRanges=[];for(i=0;i<eventInstances.length;i++){eventInstance=eventInstances[i];slicedRange=eventInstance.dateProfile.unzonedRange.intersect(constraintRange);if(slicedRange){slicedEventRanges.push(new EventRange_1.default(slicedRange,eventInstance.def,eventInstance));}}return slicedEventRanges;};EventInstanceGroup.prototype.sliceInverseRenderRanges=function(constraintRange){var unzonedRanges=this.eventInstances.map(util_1.eventInstanceToUnzonedRange);var ownerDef=this.getEventDef();unzonedRanges=UnzonedRange_1.default.invertRanges(unzonedRanges,constraintRange);return unzonedRanges.map(function(unzonedRange){return new EventRange_1.default(unzonedRange,ownerDef);});};EventInstanceGroup.prototype.isInverse=function(){return this.getEventDef().hasInverseRendering();};EventInstanceGroup.prototype.getEventDef=function(){return this.explicitEventDef||this.eventInstances[0].def;};return EventInstanceGroup;}();exports.default=EventInstanceGroup;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var Theme=function(){function Theme(optionsManager){this.optionsManager=optionsManager;this.processIconOverride();}Theme.prototype.processIconOverride=function(){if(this.iconOverrideOption){this.setIconOverride(this.optionsManager.get(this.iconOverrideOption));}};Theme.prototype.setIconOverride=function(iconOverrideHash){var iconClassesCopy;var buttonName;if($.isPlainObject(iconOverrideHash)){iconClassesCopy=$.extend({},this.iconClasses);for(buttonName in iconOverrideHash){iconClassesCopy[buttonName]=this.applyIconOverridePrefix(iconOverrideHash[buttonName]);}this.iconClasses=iconClassesCopy;}else if(iconOverrideHash===false){this.iconClasses={};}};Theme.prototype.applyIconOverridePrefix=function(className){var prefix=this.iconOverridePrefix;if(prefix&&className.indexOf(prefix)!==0){className=prefix+className;}return className;};Theme.prototype.getClass=function(key){return this.classes[key]||'';};Theme.prototype.getIconClass=function(buttonName){var className=this.iconClasses[buttonName];if(className){return this.baseIconClass+' '+className;}return'';};Theme.prototype.getCustomButtonIconClass=function(customButtonProps){var className;if(this.iconOverrideCustomButtonOption){className=customButtonProps[this.iconOverrideCustomButtonOption];if(className){return this.baseIconClass+' '+this.applyIconOverridePrefix(className);}}return'';};return Theme;}();exports.default=Theme;Theme.prototype.classes={};Theme.prototype.iconClasses={};Theme.prototype.baseIconClass='';Theme.prototype.iconOverridePrefix='';},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var PromiseStub={construct:function construct(executor){var deferred=$.Deferred();var promise=deferred.promise();if(typeof executor==='function'){executor(function(val){deferred.resolve(val);attachImmediatelyResolvingThen(promise,val);},function(){deferred.reject();attachImmediatelyRejectingThen(promise);});}return promise;},resolve:function resolve(val){var deferred=$.Deferred().resolve(val);var promise=deferred.promise();attachImmediatelyResolvingThen(promise,val);return promise;},reject:function reject(){var deferred=$.Deferred().reject();var promise=deferred.promise();attachImmediatelyRejectingThen(promise);return promise;}};exports.default=PromiseStub;function attachImmediatelyResolvingThen(promise,val){promise.then=function(onResolve){if(typeof onResolve==='function'){return PromiseStub.resolve(onResolve(val));}return promise;};}function attachImmediatelyRejectingThen(promise){promise.then=function(onResolve,onReject){if(typeof onReject==='function'){onReject();}return promise;};}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var exportHooks=__webpack_require__(16);var EmitterMixin_1=__webpack_require__(11);var ListenerMixin_1=__webpack_require__(7);exportHooks.touchMouseIgnoreWait=500;var globalEmitter=null;var neededCount=0;var GlobalEmitter=function(){function GlobalEmitter(){this.isTouching=false;this.mouseIgnoreDepth=0;}GlobalEmitter.get=function(){if(!globalEmitter){globalEmitter=new GlobalEmitter();globalEmitter.bind();}return globalEmitter;};GlobalEmitter.needed=function(){GlobalEmitter.get();neededCount++;};GlobalEmitter.unneeded=function(){neededCount--;if(!neededCount){globalEmitter.unbind();globalEmitter=null;}};GlobalEmitter.prototype.bind=function(){var _this=this;this.listenTo($(document),{touchstart:this.handleTouchStart,touchcancel:this.handleTouchCancel,touchend:this.handleTouchEnd,mousedown:this.handleMouseDown,mousemove:this.handleMouseMove,mouseup:this.handleMouseUp,click:this.handleClick,selectstart:this.handleSelectStart,contextmenu:this.handleContextMenu});window.addEventListener('touchmove',this.handleTouchMoveProxy=function(ev){_this.handleTouchMove($.Event(ev));},{passive:false});window.addEventListener('scroll',this.handleScrollProxy=function(ev){_this.handleScroll($.Event(ev));},true);};GlobalEmitter.prototype.unbind=function(){this.stopListeningTo($(document));window.removeEventListener('touchmove',this.handleTouchMoveProxy);window.removeEventListener('scroll',this.handleScrollProxy,true);};GlobalEmitter.prototype.handleTouchStart=function(ev){this.stopTouch(ev,true);this.isTouching=true;this.trigger('touchstart',ev);};GlobalEmitter.prototype.handleTouchMove=function(ev){if(this.isTouching){this.trigger('touchmove',ev);}};GlobalEmitter.prototype.handleTouchCancel=function(ev){if(this.isTouching){this.trigger('touchcancel',ev);this.stopTouch(ev);}};GlobalEmitter.prototype.handleTouchEnd=function(ev){this.stopTouch(ev);};GlobalEmitter.prototype.handleMouseDown=function(ev){if(!this.shouldIgnoreMouse()){this.trigger('mousedown',ev);}};GlobalEmitter.prototype.handleMouseMove=function(ev){if(!this.shouldIgnoreMouse()){this.trigger('mousemove',ev);}};GlobalEmitter.prototype.handleMouseUp=function(ev){if(!this.shouldIgnoreMouse()){this.trigger('mouseup',ev);}};GlobalEmitter.prototype.handleClick=function(ev){if(!this.shouldIgnoreMouse()){this.trigger('click',ev);}};GlobalEmitter.prototype.handleSelectStart=function(ev){this.trigger('selectstart',ev);};GlobalEmitter.prototype.handleContextMenu=function(ev){this.trigger('contextmenu',ev);};GlobalEmitter.prototype.handleScroll=function(ev){this.trigger('scroll',ev);};GlobalEmitter.prototype.stopTouch=function(ev,skipMouseIgnore){if(skipMouseIgnore===void 0){skipMouseIgnore=false;}if(this.isTouching){this.isTouching=false;this.trigger('touchend',ev);if(!skipMouseIgnore){this.startTouchMouseIgnore();}}};GlobalEmitter.prototype.startTouchMouseIgnore=function(){var _this=this;var wait=exportHooks.touchMouseIgnoreWait;if(wait){this.mouseIgnoreDepth++;setTimeout(function(){_this.mouseIgnoreDepth--;},wait);}};GlobalEmitter.prototype.shouldIgnoreMouse=function(){return this.isTouching||Boolean(this.mouseIgnoreDepth);};return GlobalEmitter;}();exports.default=GlobalEmitter;ListenerMixin_1.default.mixInto(GlobalEmitter);EmitterMixin_1.default.mixInto(GlobalEmitter);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var exportHooks=__webpack_require__(16);exports.viewHash={};exportHooks.views=exports.viewHash;function defineView(viewName,viewConfig){exports.viewHash[viewName]=viewConfig;}exports.defineView=defineView;function getViewConfig(viewName){return exports.viewHash[viewName];}exports.getViewConfig=getViewConfig;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var util_1=__webpack_require__(4);var DragListener_1=__webpack_require__(54);var HitDragListener=function(_super){tslib_1.__extends(HitDragListener,_super);function HitDragListener(component,options){var _this=_super.call(this,options)||this;_this.component=component;return _this;}HitDragListener.prototype.handleInteractionStart=function(ev){var subjectEl=this.subjectEl;var subjectRect;var origPoint;var point;this.component.hitsNeeded();this.computeScrollBounds();if(ev){origPoint={left:util_1.getEvX(ev),top:util_1.getEvY(ev)};point=origPoint;if(subjectEl){subjectRect=util_1.getOuterRect(subjectEl);point=util_1.constrainPoint(point,subjectRect);}this.origHit=this.queryHit(point.left,point.top);if(subjectEl&&this.options.subjectCenter){if(this.origHit){subjectRect=util_1.intersectRects(this.origHit,subjectRect)||subjectRect;}point=util_1.getRectCenter(subjectRect);}this.coordAdjust=util_1.diffPoints(point,origPoint);}else{this.origHit=null;this.coordAdjust=null;}_super.prototype.handleInteractionStart.call(this,ev);};HitDragListener.prototype.handleDragStart=function(ev){var hit;_super.prototype.handleDragStart.call(this,ev);hit=this.queryHit(util_1.getEvX(ev),util_1.getEvY(ev));if(hit){this.handleHitOver(hit);}};HitDragListener.prototype.handleDrag=function(dx,dy,ev){var hit;_super.prototype.handleDrag.call(this,dx,dy,ev);hit=this.queryHit(util_1.getEvX(ev),util_1.getEvY(ev));if(!isHitsEqual(hit,this.hit)){if(this.hit){this.handleHitOut();}if(hit){this.handleHitOver(hit);}}};HitDragListener.prototype.handleDragEnd=function(ev){this.handleHitDone();_super.prototype.handleDragEnd.call(this,ev);};HitDragListener.prototype.handleHitOver=function(hit){var isOrig=isHitsEqual(hit,this.origHit);this.hit=hit;this.trigger('hitOver',this.hit,isOrig,this.origHit);};HitDragListener.prototype.handleHitOut=function(){if(this.hit){this.trigger('hitOut',this.hit);this.handleHitDone();this.hit=null;}};HitDragListener.prototype.handleHitDone=function(){if(this.hit){this.trigger('hitDone',this.hit);}};HitDragListener.prototype.handleInteractionEnd=function(ev,isCancelled){_super.prototype.handleInteractionEnd.call(this,ev,isCancelled);this.origHit=null;this.hit=null;this.component.hitsNotNeeded();};HitDragListener.prototype.handleScrollEnd=function(){_super.prototype.handleScrollEnd.call(this);if(this.isDragging){this.component.releaseHits();this.component.prepareHits();}};HitDragListener.prototype.queryHit=function(left,top){if(this.coordAdjust){left+=this.coordAdjust.left;top+=this.coordAdjust.top;}return this.component.queryHit(left,top);};return HitDragListener;}(DragListener_1.default);exports.default=HitDragListener;function isHitsEqual(hit0,hit1){if(!hit0&&!hit1){return true;}if(hit0&&hit1){return hit0.component===hit1.component&&isHitPropsWithin(hit0,hit1)&&isHitPropsWithin(hit1,hit0);}return false;}function isHitPropsWithin(subHit,superHit){for(var propName in subHit){if(!/^(component|left|right|top|bottom)$/.test(propName)){if(subHit[propName]!==superHit[propName]){return false;}}}return true;}},,,,,,,,function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var moment=__webpack_require__(0);var exportHooks=__webpack_require__(16);var options_1=__webpack_require__(32);var util_1=__webpack_require__(4);exports.localeOptionHash={};exportHooks.locales=exports.localeOptionHash;var dpComputableOptions={buttonText:function buttonText(dpOptions){return{prev:util_1.stripHtmlEntities(dpOptions.prevText),next:util_1.stripHtmlEntities(dpOptions.nextText),today:util_1.stripHtmlEntities(dpOptions.currentText)};},monthYearFormat:function monthYearFormat(dpOptions){return dpOptions.showMonthAfterYear?'YYYY['+dpOptions.yearSuffix+'] MMMM':'MMMM YYYY['+dpOptions.yearSuffix+']';}};var momComputableOptions={dayOfMonthFormat:function dayOfMonthFormat(momOptions,fcOptions){var format=momOptions.longDateFormat('l');format=format.replace(/^Y+[^\w\s]*|[^\w\s]*Y+$/g,'');if(fcOptions.isRTL){format+=' ddd';}else{format='ddd '+format;}return format;},mediumTimeFormat:function mediumTimeFormat(momOptions){return momOptions.longDateFormat('LT').replace(/\s*a$/i,'a');},smallTimeFormat:function smallTimeFormat(momOptions){return momOptions.longDateFormat('LT').replace(':mm','(:mm)').replace(/(\Wmm)$/,'($1)').replace(/\s*a$/i,'a');},extraSmallTimeFormat:function extraSmallTimeFormat(momOptions){return momOptions.longDateFormat('LT').replace(':mm','(:mm)').replace(/(\Wmm)$/,'($1)').replace(/\s*a$/i,'t');},hourFormat:function hourFormat(momOptions){return momOptions.longDateFormat('LT').replace(':mm','').replace(/(\Wmm)$/,'').replace(/\s*a$/i,'a');},noMeridiemTimeFormat:function noMeridiemTimeFormat(momOptions){return momOptions.longDateFormat('LT').replace(/\s*a$/i,'');}};var instanceComputableOptions={smallDayDateFormat:function smallDayDateFormat(options){return options.isRTL?'D dd':'dd D';},weekFormat:function weekFormat(options){return options.isRTL?'w[ '+options.weekNumberTitle+']':'['+options.weekNumberTitle+' ]w';},smallWeekFormat:function smallWeekFormat(options){return options.isRTL?'w['+options.weekNumberTitle+']':'['+options.weekNumberTitle+']w';}};function populateInstanceComputableOptions(options){$.each(instanceComputableOptions,function(name,func){if(options[name]==null){options[name]=func(options);}});}exports.populateInstanceComputableOptions=populateInstanceComputableOptions;function datepickerLocale(localeCode,dpLocaleCode,dpOptions){var fcOptions=exports.localeOptionHash[localeCode]||(exports.localeOptionHash[localeCode]={});fcOptions.isRTL=dpOptions.isRTL;fcOptions.weekNumberTitle=dpOptions.weekHeader;$.each(dpComputableOptions,function(name,func){fcOptions[name]=func(dpOptions);});var jqDatePicker=$.datepicker;if(jqDatePicker){jqDatePicker.regional[dpLocaleCode]=jqDatePicker.regional[localeCode]=dpOptions;jqDatePicker.regional.en=jqDatePicker.regional[''];jqDatePicker.setDefaults(dpOptions);}}exports.datepickerLocale=datepickerLocale;function locale(localeCode,newFcOptions){var fcOptions;var momOptions;fcOptions=exports.localeOptionHash[localeCode]||(exports.localeOptionHash[localeCode]={});if(newFcOptions){fcOptions=exports.localeOptionHash[localeCode]=options_1.mergeOptions([fcOptions,newFcOptions]);}momOptions=getMomentLocaleData(localeCode);$.each(momComputableOptions,function(name,func){if(fcOptions[name]==null){fcOptions[name]=func(momOptions,fcOptions);}});options_1.globalDefaults.locale=localeCode;}exports.locale=locale;function getMomentLocaleData(localeCode){return moment.localeData(localeCode)||moment.localeData('en');}exports.getMomentLocaleData=getMomentLocaleData;locale('en',options_1.englishDefaults);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var util_1=__webpack_require__(4);exports.globalDefaults={titleRangeSeparator:' \u2013 ',monthYearFormat:'MMMM YYYY',defaultTimedEventDuration:'02:00:00',defaultAllDayEventDuration:{days:1},forceEventDuration:false,nextDayThreshold:'09:00:00',columnHeader:true,defaultView:'month',aspectRatio:1.35,header:{left:'title',center:'',right:'today prev,next'},weekends:true,weekNumbers:false,weekNumberTitle:'W',weekNumberCalculation:'local',scrollTime:'06:00:00',minTime:'00:00:00',maxTime:'24:00:00',showNonCurrentDates:true,lazyFetching:true,startParam:'start',endParam:'end',timezoneParam:'timezone',timezone:false,locale:null,isRTL:false,buttonText:{prev:'prev',next:'next',prevYear:'prev year',nextYear:'next year',year:'year',today:'today',month:'month',week:'week',day:'day'},allDayText:'all-day',agendaEventMinHeight:0,theme:false,dragOpacity:.75,dragRevertDuration:500,dragScroll:true,unselectAuto:true,dropAccept:'*',eventOrder:'title',eventLimit:false,eventLimitText:'more',eventLimitClick:'popover',dayPopoverFormat:'LL',handleWindowResize:true,windowResizeDelay:100,longPressDelay:1000};exports.englishDefaults={dayPopoverFormat:'dddd, MMMM D'};exports.rtlDefaults={header:{left:'next,prev today',center:'',right:'title'},buttonIcons:{prev:'right-single-arrow',next:'left-single-arrow',prevYear:'right-double-arrow',nextYear:'left-double-arrow'},themeButtonIcons:{prev:'circle-triangle-e',next:'circle-triangle-w',nextYear:'seek-prev',prevYear:'seek-next'}};var complexOptions=['header','footer','buttonText','buttonIcons','themeButtonIcons'];function mergeOptions(optionObjs){return util_1.mergeProps(optionObjs,complexOptions);}exports.mergeOptions=mergeOptions;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var util_1=__webpack_require__(4);var Class=function(){function Class(){}Class.extend=function(members){var SubClass=function(_super){tslib_1.__extends(SubClass,_super);function SubClass(){return _super!==null&&_super.apply(this,arguments)||this;}return SubClass;}(this);util_1.copyOwnProps(members,SubClass.prototype);return SubClass;};Class.mixin=function(members){util_1.copyOwnProps(members,this.prototype);};return Class;}();exports.default=Class;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var ParsableModelMixin_1=__webpack_require__(208);var EventDef=function(){function EventDef(source){this.source=source;this.className=[];this.miscProps={};}EventDef.parse=function(rawInput,source){var def=new this(source);if(def.applyProps(rawInput)){return def;}return false;};EventDef.normalizeId=function(id){return String(id);};EventDef.generateId=function(){return'_fc'+EventDef.uuid++;};EventDef.prototype.clone=function(){var copy=new this.constructor(this.source);copy.id=this.id;copy.rawId=this.rawId;copy.uid=this.uid;EventDef.copyVerbatimStandardProps(this,copy);copy.className=this.className.slice();copy.miscProps=$.extend({},this.miscProps);return copy;};EventDef.prototype.hasInverseRendering=function(){return this.getRendering()==='inverse-background';};EventDef.prototype.hasBgRendering=function(){var rendering=this.getRendering();return rendering==='inverse-background'||rendering==='background';};EventDef.prototype.getRendering=function(){if(this.rendering!=null){return this.rendering;}return this.source.rendering;};EventDef.prototype.getConstraint=function(){if(this.constraint!=null){return this.constraint;}if(this.source.constraint!=null){return this.source.constraint;}return this.source.calendar.opt('eventConstraint');};EventDef.prototype.getOverlap=function(){if(this.overlap!=null){return this.overlap;}if(this.source.overlap!=null){return this.source.overlap;}return this.source.calendar.opt('eventOverlap');};EventDef.prototype.isStartExplicitlyEditable=function(){if(this.startEditable!=null){return this.startEditable;}return this.source.startEditable;};EventDef.prototype.isDurationExplicitlyEditable=function(){if(this.durationEditable!=null){return this.durationEditable;}return this.source.durationEditable;};EventDef.prototype.isExplicitlyEditable=function(){if(this.editable!=null){return this.editable;}return this.source.editable;};EventDef.prototype.toLegacy=function(){var obj=$.extend({},this.miscProps);obj._id=this.uid;obj.source=this.source;obj.className=this.className.slice();obj.allDay=this.isAllDay();if(this.rawId!=null){obj.id=this.rawId;}EventDef.copyVerbatimStandardProps(this,obj);return obj;};EventDef.prototype.applyManualStandardProps=function(rawProps){if(rawProps.id!=null){this.id=EventDef.normalizeId(this.rawId=rawProps.id);}else{this.id=EventDef.generateId();}if(rawProps._id!=null){this.uid=String(rawProps._id);}else{this.uid=EventDef.generateId();}if($.isArray(rawProps.className)){this.className=rawProps.className;}if(typeof rawProps.className==='string'){this.className=rawProps.className.split(/\s+/);}return true;};EventDef.prototype.applyMiscProps=function(rawProps){$.extend(this.miscProps,rawProps);};EventDef.uuid=0;EventDef.defineStandardProps=ParsableModelMixin_1.default.defineStandardProps;EventDef.copyVerbatimStandardProps=ParsableModelMixin_1.default.copyVerbatimStandardProps;return EventDef;}();exports.default=EventDef;ParsableModelMixin_1.default.mixInto(EventDef);EventDef.defineStandardProps({_id:false,id:false,className:false,source:false,title:true,url:true,rendering:true,constraint:true,overlap:true,editable:true,startEditable:true,durationEditable:true,color:true,backgroundColor:true,borderColor:true,textColor:true});},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var EventRange_1=__webpack_require__(211);var EventFootprint_1=__webpack_require__(36);var ComponentFootprint_1=__webpack_require__(12);function eventDefsToEventInstances(eventDefs,unzonedRange){var eventInstances=[];var i;for(i=0;i<eventDefs.length;i++){eventInstances.push.apply(eventInstances,eventDefs[i].buildInstances(unzonedRange));}return eventInstances;}exports.eventDefsToEventInstances=eventDefsToEventInstances;function eventInstanceToEventRange(eventInstance){return new EventRange_1.default(eventInstance.dateProfile.unzonedRange,eventInstance.def,eventInstance);}exports.eventInstanceToEventRange=eventInstanceToEventRange;function eventRangeToEventFootprint(eventRange){return new EventFootprint_1.default(new ComponentFootprint_1.default(eventRange.unzonedRange,eventRange.eventDef.isAllDay()),eventRange.eventDef,eventRange.eventInstance);}exports.eventRangeToEventFootprint=eventRangeToEventFootprint;function eventInstanceToUnzonedRange(eventInstance){return eventInstance.dateProfile.unzonedRange;}exports.eventInstanceToUnzonedRange=eventInstanceToUnzonedRange;function eventFootprintToComponentFootprint(eventFootprint){return eventFootprint.componentFootprint;}exports.eventFootprintToComponentFootprint=eventFootprintToComponentFootprint;},function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var EventFootprint=function(){function EventFootprint(componentFootprint,eventDef,eventInstance){this.componentFootprint=componentFootprint;this.eventDef=eventDef;if(eventInstance){this.eventInstance=eventInstance;}}EventFootprint.prototype.getEventLegacy=function(){return(this.eventInstance||this.eventDef).toLegacy();};return EventFootprint;}();exports.default=EventFootprint;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var util_1=__webpack_require__(4);var EventDateProfile_1=__webpack_require__(17);var EventDef_1=__webpack_require__(34);var EventDefDateMutation_1=__webpack_require__(50);var SingleEventDef_1=__webpack_require__(13);var EventDefMutation=function(){function EventDefMutation(){}EventDefMutation.createFromRawProps=function(eventInstance,rawProps,largeUnit){var eventDef=eventInstance.def;var dateProps={};var standardProps={};var miscProps={};var verbatimStandardProps={};var eventDefId=null;var className=null;var propName;var dateProfile;var dateMutation;var defMutation;for(propName in rawProps){if(EventDateProfile_1.default.isStandardProp(propName)){dateProps[propName]=rawProps[propName];}else if(eventDef.isStandardProp(propName)){standardProps[propName]=rawProps[propName];}else if(eventDef.miscProps[propName]!==rawProps[propName]){miscProps[propName]=rawProps[propName];}}dateProfile=EventDateProfile_1.default.parse(dateProps,eventDef.source);if(dateProfile){dateMutation=EventDefDateMutation_1.default.createFromDiff(eventInstance.dateProfile,dateProfile,largeUnit);}if(standardProps.id!==eventDef.id){eventDefId=standardProps.id;}if(!util_1.isArraysEqual(standardProps.className,eventDef.className)){className=standardProps.className;}EventDef_1.default.copyVerbatimStandardProps(standardProps,verbatimStandardProps);defMutation=new EventDefMutation();defMutation.eventDefId=eventDefId;defMutation.className=className;defMutation.verbatimStandardProps=verbatimStandardProps;defMutation.miscProps=miscProps;if(dateMutation){defMutation.dateMutation=dateMutation;}return defMutation;};EventDefMutation.prototype.mutateSingle=function(eventDef){var origDateProfile;if(this.dateMutation){origDateProfile=eventDef.dateProfile;eventDef.dateProfile=this.dateMutation.buildNewDateProfile(origDateProfile,eventDef.source.calendar);}if(this.eventDefId!=null){eventDef.id=EventDef_1.default.normalizeId(eventDef.rawId=this.eventDefId);}if(this.className){eventDef.className=this.className;}if(this.verbatimStandardProps){SingleEventDef_1.default.copyVerbatimStandardProps(this.verbatimStandardProps,eventDef);}if(this.miscProps){eventDef.applyMiscProps(this.miscProps);}if(origDateProfile){return function(){eventDef.dateProfile=origDateProfile;};}else{return function(){};}};EventDefMutation.prototype.setDateMutation=function(dateMutation){if(dateMutation&&!dateMutation.isEmpty()){this.dateMutation=dateMutation;}else{this.dateMutation=null;}};EventDefMutation.prototype.isEmpty=function(){return!this.dateMutation;};return EventDefMutation;}();exports.default=EventDefMutation;},function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default={sourceClasses:[],registerClass:function registerClass(EventSourceClass){this.sourceClasses.unshift(EventSourceClass);},parse:function parse(rawInput,calendar){var sourceClasses=this.sourceClasses;var i;var eventSource;for(i=0;i<sourceClasses.length;i++){eventSource=sourceClasses[i].parse(rawInput,calendar);if(eventSource){return eventSource;}}}};},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var Class_1=__webpack_require__(33);var Scroller=function(_super){tslib_1.__extends(Scroller,_super);function Scroller(options){var _this=_super.call(this)||this;options=options||{};_this.overflowX=options.overflowX||options.overflow||'auto';_this.overflowY=options.overflowY||options.overflow||'auto';return _this;}Scroller.prototype.render=function(){this.el=this.renderEl();this.applyOverflow();};Scroller.prototype.renderEl=function(){return this.scrollEl=$('<div class="fc-scroller"></div>');};Scroller.prototype.clear=function(){this.setHeight('auto');this.applyOverflow();};Scroller.prototype.destroy=function(){this.el.remove();};Scroller.prototype.applyOverflow=function(){this.scrollEl.css({'overflow-x':this.overflowX,'overflow-y':this.overflowY});};Scroller.prototype.lockOverflow=function(scrollbarWidths){var overflowX=this.overflowX;var overflowY=this.overflowY;scrollbarWidths=scrollbarWidths||this.getScrollbarWidths();if(overflowX==='auto'){overflowX=scrollbarWidths.top||scrollbarWidths.bottom||this.scrollEl[0].scrollWidth-1>this.scrollEl[0].clientWidth?'scroll':'hidden';}if(overflowY==='auto'){overflowY=scrollbarWidths.left||scrollbarWidths.right||this.scrollEl[0].scrollHeight-1>this.scrollEl[0].clientHeight?'scroll':'hidden';}this.scrollEl.css({'overflow-x':overflowX,'overflow-y':overflowY});};Scroller.prototype.setHeight=function(height){this.scrollEl.height(height);};Scroller.prototype.getScrollTop=function(){return this.scrollEl.scrollTop();};Scroller.prototype.setScrollTop=function(top){this.scrollEl.scrollTop(top);};Scroller.prototype.getClientWidth=function(){return this.scrollEl[0].clientWidth;};Scroller.prototype.getClientHeight=function(){return this.scrollEl[0].clientHeight;};Scroller.prototype.getScrollbarWidths=function(){return util_1.getScrollbarWidths(this.scrollEl);};return Scroller;}(Class_1.default);exports.default=Scroller;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var DateComponent_1=__webpack_require__(219);var GlobalEmitter_1=__webpack_require__(21);var InteractiveDateComponent=function(_super){tslib_1.__extends(InteractiveDateComponent,_super);function InteractiveDateComponent(_view,_options){var _this=_super.call(this,_view,_options)||this;_this.segSelector='.fc-event-container > *';if(_this.dateSelectingClass){_this.dateClicking=new _this.dateClickingClass(_this);}if(_this.dateSelectingClass){_this.dateSelecting=new _this.dateSelectingClass(_this);}if(_this.eventPointingClass){_this.eventPointing=new _this.eventPointingClass(_this);}if(_this.eventDraggingClass&&_this.eventPointing){_this.eventDragging=new _this.eventDraggingClass(_this,_this.eventPointing);}if(_this.eventResizingClass&&_this.eventPointing){_this.eventResizing=new _this.eventResizingClass(_this,_this.eventPointing);}if(_this.externalDroppingClass){_this.externalDropping=new _this.externalDroppingClass(_this);}return _this;}InteractiveDateComponent.prototype.setElement=function(el){_super.prototype.setElement.call(this,el);if(this.dateClicking){this.dateClicking.bindToEl(el);}if(this.dateSelecting){this.dateSelecting.bindToEl(el);}this.bindAllSegHandlersToEl(el);};InteractiveDateComponent.prototype.removeElement=function(){this.endInteractions();_super.prototype.removeElement.call(this);};InteractiveDateComponent.prototype.executeEventUnrender=function(){this.endInteractions();_super.prototype.executeEventUnrender.call(this);};InteractiveDateComponent.prototype.bindGlobalHandlers=function(){_super.prototype.bindGlobalHandlers.call(this);if(this.externalDropping){this.externalDropping.bindToDocument();}};InteractiveDateComponent.prototype.unbindGlobalHandlers=function(){_super.prototype.unbindGlobalHandlers.call(this);if(this.externalDropping){this.externalDropping.unbindFromDocument();}};InteractiveDateComponent.prototype.bindDateHandlerToEl=function(el,name,handler){var _this=this;this.el.on(name,function(ev){if(!$(ev.target).is(_this.segSelector+':not(.fc-helper),'+_this.segSelector+':not(.fc-helper) *,'+'.fc-more,'+'a[data-goto]')){return handler.call(_this,ev);}});};InteractiveDateComponent.prototype.bindAllSegHandlersToEl=function(el){[this.eventPointing,this.eventDragging,this.eventResizing].forEach(function(eventInteraction){if(eventInteraction){eventInteraction.bindToEl(el);}});};InteractiveDateComponent.prototype.bindSegHandlerToEl=function(el,name,handler){var _this=this;el.on(name,this.segSelector,function(ev){var segEl=$(ev.currentTarget);if(!segEl.is('.fc-helper')){var seg=segEl.data('fc-seg');if(seg&&!_this.shouldIgnoreEventPointing()){return handler.call(_this,seg,ev);}}});};InteractiveDateComponent.prototype.shouldIgnoreMouse=function(){return GlobalEmitter_1.default.get().shouldIgnoreMouse();};InteractiveDateComponent.prototype.shouldIgnoreTouch=function(){var view=this._getView();return view.isSelected||view.selectedEvent;};InteractiveDateComponent.prototype.shouldIgnoreEventPointing=function(){return this.eventDragging&&this.eventDragging.isDragging||this.eventResizing&&this.eventResizing.isResizing;};InteractiveDateComponent.prototype.canStartSelection=function(seg,ev){return util_1.getEvIsTouch(ev)&&!this.canStartResize(seg,ev)&&(this.isEventDefDraggable(seg.footprint.eventDef)||this.isEventDefResizable(seg.footprint.eventDef));};InteractiveDateComponent.prototype.canStartDrag=function(seg,ev){return!this.canStartResize(seg,ev)&&this.isEventDefDraggable(seg.footprint.eventDef);};InteractiveDateComponent.prototype.canStartResize=function(seg,ev){var view=this._getView();var eventDef=seg.footprint.eventDef;return(!util_1.getEvIsTouch(ev)||view.isEventDefSelected(eventDef))&&this.isEventDefResizable(eventDef)&&$(ev.target).is('.fc-resizer');};InteractiveDateComponent.prototype.endInteractions=function(){[this.dateClicking,this.dateSelecting,this.eventPointing,this.eventDragging,this.eventResizing].forEach(function(interaction){if(interaction){interaction.end();}});};InteractiveDateComponent.prototype.isEventDefDraggable=function(eventDef){return this.isEventDefStartEditable(eventDef);};InteractiveDateComponent.prototype.isEventDefStartEditable=function(eventDef){var isEditable=eventDef.isStartExplicitlyEditable();if(isEditable==null){isEditable=this.opt('eventStartEditable');if(isEditable==null){isEditable=this.isEventDefGenerallyEditable(eventDef);}}return isEditable;};InteractiveDateComponent.prototype.isEventDefGenerallyEditable=function(eventDef){var isEditable=eventDef.isExplicitlyEditable();if(isEditable==null){isEditable=this.opt('editable');}return isEditable;};InteractiveDateComponent.prototype.isEventDefResizableFromStart=function(eventDef){return this.opt('eventResizableFromStart')&&this.isEventDefResizable(eventDef);};InteractiveDateComponent.prototype.isEventDefResizableFromEnd=function(eventDef){return this.isEventDefResizable(eventDef);};InteractiveDateComponent.prototype.isEventDefResizable=function(eventDef){var isResizable=eventDef.isDurationExplicitlyEditable();if(isResizable==null){isResizable=this.opt('eventDurationEditable');if(isResizable==null){isResizable=this.isEventDefGenerallyEditable(eventDef);}}return isResizable;};InteractiveDateComponent.prototype.diffDates=function(a,b){if(this.largeUnit){return util_1.diffByUnit(a,b,this.largeUnit);}else{return util_1.diffDayTime(a,b);}};InteractiveDateComponent.prototype.isEventInstanceGroupAllowed=function(eventInstanceGroup){var view=this._getView();var dateProfile=this.dateProfile;var eventFootprints=this.eventRangesToEventFootprints(eventInstanceGroup.getAllEventRanges());var i;for(i=0;i<eventFootprints.length;i++){if(!dateProfile.validUnzonedRange.containsRange(eventFootprints[i].componentFootprint.unzonedRange)){return false;}}return view.calendar.constraints.isEventInstanceGroupAllowed(eventInstanceGroup);};InteractiveDateComponent.prototype.isExternalInstanceGroupAllowed=function(eventInstanceGroup){var view=this._getView();var dateProfile=this.dateProfile;var eventFootprints=this.eventRangesToEventFootprints(eventInstanceGroup.getAllEventRanges());var i;for(i=0;i<eventFootprints.length;i++){if(!dateProfile.validUnzonedRange.containsRange(eventFootprints[i].componentFootprint.unzonedRange)){return false;}}for(i=0;i<eventFootprints.length;i++){if(!view.calendar.constraints.isSelectionFootprintAllowed(eventFootprints[i].componentFootprint)){return false;}}return true;};return InteractiveDateComponent;}(DateComponent_1.default);exports.default=InteractiveDateComponent;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var moment=__webpack_require__(0);var util_1=__webpack_require__(4);var RenderQueue_1=__webpack_require__(218);var DateProfileGenerator_1=__webpack_require__(221);var InteractiveDateComponent_1=__webpack_require__(40);var GlobalEmitter_1=__webpack_require__(21);var UnzonedRange_1=__webpack_require__(5);var View=function(_super){tslib_1.__extends(View,_super);function View(calendar,viewSpec){var _this=_super.call(this,null,viewSpec.options)||this;_this.batchRenderDepth=0;_this.isSelected=false;_this.calendar=calendar;_this.viewSpec=viewSpec;_this.type=viewSpec.type;_this.name=_this.type;_this.initRenderQueue();_this.initHiddenDays();_this.dateProfileGenerator=new _this.dateProfileGeneratorClass(_this);_this.bindBaseRenderHandlers();_this.eventOrderSpecs=util_1.parseFieldSpecs(_this.opt('eventOrder'));if(_this['initialize']){_this['initialize']();}return _this;}View.prototype._getView=function(){return this;};View.prototype.opt=function(name){return this.options[name];};View.prototype.initRenderQueue=function(){this.renderQueue=new RenderQueue_1.default({event:this.opt('eventRenderWait')});this.renderQueue.on('start',this.onRenderQueueStart.bind(this));this.renderQueue.on('stop',this.onRenderQueueStop.bind(this));this.on('before:change',this.startBatchRender);this.on('change',this.stopBatchRender);};View.prototype.onRenderQueueStart=function(){this.calendar.freezeContentHeight();this.addScroll(this.queryScroll());};View.prototype.onRenderQueueStop=function(){if(this.calendar.updateViewSize()){this.popScroll();}this.calendar.thawContentHeight();};View.prototype.startBatchRender=function(){if(!this.batchRenderDepth++){this.renderQueue.pause();}};View.prototype.stopBatchRender=function(){if(! --this.batchRenderDepth){this.renderQueue.resume();}};View.prototype.requestRender=function(func,namespace,actionType){this.renderQueue.queue(func,namespace,actionType);};View.prototype.whenSizeUpdated=function(func){if(this.renderQueue.isRunning){this.renderQueue.one('stop',func.bind(this));}else{func.call(this);}};View.prototype.computeTitle=function(dateProfile){var unzonedRange;if(/^(year|month)$/.test(dateProfile.currentRangeUnit)){unzonedRange=dateProfile.currentUnzonedRange;}else{unzonedRange=dateProfile.activeUnzonedRange;}return this.formatRange({start:this.calendar.msToMoment(unzonedRange.startMs,dateProfile.isRangeAllDay),end:this.calendar.msToMoment(unzonedRange.endMs,dateProfile.isRangeAllDay)},dateProfile.isRangeAllDay,this.opt('titleFormat')||this.computeTitleFormat(dateProfile),this.opt('titleRangeSeparator'));};View.prototype.computeTitleFormat=function(dateProfile){var currentRangeUnit=dateProfile.currentRangeUnit;if(currentRangeUnit==='year'){return'YYYY';}else if(currentRangeUnit==='month'){return this.opt('monthYearFormat');}else if(dateProfile.currentUnzonedRange.as('days')>1){return'll';}else{return'LL';}};View.prototype.setDate=function(date){var currentDateProfile=this.get('dateProfile');var newDateProfile=this.dateProfileGenerator.build(date,undefined,true);if(!currentDateProfile||!currentDateProfile.activeUnzonedRange.equals(newDateProfile.activeUnzonedRange)){this.set('dateProfile',newDateProfile);}};View.prototype.unsetDate=function(){this.unset('dateProfile');};View.prototype.fetchInitialEvents=function(dateProfile){var calendar=this.calendar;var forceAllDay=dateProfile.isRangeAllDay&&!this.usesMinMaxTime;return calendar.requestEvents(calendar.msToMoment(dateProfile.activeUnzonedRange.startMs,forceAllDay),calendar.msToMoment(dateProfile.activeUnzonedRange.endMs,forceAllDay));};View.prototype.bindEventChanges=function(){this.listenTo(this.calendar,'eventsReset',this.resetEvents);};View.prototype.unbindEventChanges=function(){this.stopListeningTo(this.calendar,'eventsReset');};View.prototype.setEvents=function(eventsPayload){this.set('currentEvents',eventsPayload);this.set('hasEvents',true);};View.prototype.unsetEvents=function(){this.unset('currentEvents');this.unset('hasEvents');};View.prototype.resetEvents=function(eventsPayload){this.startBatchRender();this.unsetEvents();this.setEvents(eventsPayload);this.stopBatchRender();};View.prototype.requestDateRender=function(dateProfile){var _this=this;this.requestRender(function(){_this.executeDateRender(dateProfile);},'date','init');};View.prototype.requestDateUnrender=function(){var _this=this;this.requestRender(function(){_this.executeDateUnrender();},'date','destroy');};View.prototype.executeDateRender=function(dateProfile){_super.prototype.executeDateRender.call(this,dateProfile);if(this['render']){this['render']();}this.trigger('datesRendered');this.addScroll({isDateInit:true});this.startNowIndicator();};View.prototype.executeDateUnrender=function(){this.unselect();this.stopNowIndicator();this.trigger('before:datesUnrendered');if(this['destroy']){this['destroy']();}_super.prototype.executeDateUnrender.call(this);};View.prototype.bindBaseRenderHandlers=function(){var _this=this;this.on('datesRendered',function(){_this.whenSizeUpdated(_this.triggerViewRender);});this.on('before:datesUnrendered',function(){_this.triggerViewDestroy();});};View.prototype.triggerViewRender=function(){this.publiclyTrigger('viewRender',{context:this,args:[this,this.el]});};View.prototype.triggerViewDestroy=function(){this.publiclyTrigger('viewDestroy',{context:this,args:[this,this.el]});};View.prototype.requestEventsRender=function(eventsPayload){var _this=this;this.requestRender(function(){_this.executeEventRender(eventsPayload);_this.whenSizeUpdated(_this.triggerAfterEventsRendered);},'event','init');};View.prototype.requestEventsUnrender=function(){var _this=this;this.requestRender(function(){_this.triggerBeforeEventsDestroyed();_this.executeEventUnrender();},'event','destroy');};View.prototype.requestBusinessHoursRender=function(businessHourGenerator){var _this=this;this.requestRender(function(){_this.renderBusinessHours(businessHourGenerator);},'businessHours','init');};View.prototype.requestBusinessHoursUnrender=function(){var _this=this;this.requestRender(function(){_this.unrenderBusinessHours();},'businessHours','destroy');};View.prototype.bindGlobalHandlers=function(){_super.prototype.bindGlobalHandlers.call(this);this.listenTo(GlobalEmitter_1.default.get(),{touchstart:this.processUnselect,mousedown:this.handleDocumentMousedown});};View.prototype.unbindGlobalHandlers=function(){_super.prototype.unbindGlobalHandlers.call(this);this.stopListeningTo(GlobalEmitter_1.default.get());};View.prototype.startNowIndicator=function(){var _this=this;var unit;var update;var delay;if(this.opt('nowIndicator')){unit=this.getNowIndicatorUnit();if(unit){update=util_1.proxy(this,'updateNowIndicator');this.initialNowDate=this.calendar.getNow();this.initialNowQueriedMs=new Date().valueOf();delay=this.initialNowDate.clone().startOf(unit).add(1,unit).valueOf()-this.initialNowDate.valueOf();this.nowIndicatorTimeoutID=setTimeout(function(){_this.nowIndicatorTimeoutID=null;update();delay=+moment.duration(1,unit);delay=Math.max(100,delay);_this.nowIndicatorIntervalID=setInterval(update,delay);},delay);}}};View.prototype.updateNowIndicator=function(){if(this.isDatesRendered&&this.initialNowDate){this.unrenderNowIndicator();this.renderNowIndicator(this.initialNowDate.clone().add(new Date().valueOf()-this.initialNowQueriedMs));this.isNowIndicatorRendered=true;}};View.prototype.stopNowIndicator=function(){if(this.isNowIndicatorRendered){if(this.nowIndicatorTimeoutID){clearTimeout(this.nowIndicatorTimeoutID);this.nowIndicatorTimeoutID=null;}if(this.nowIndicatorIntervalID){clearInterval(this.nowIndicatorIntervalID);this.nowIndicatorIntervalID=null;}this.unrenderNowIndicator();this.isNowIndicatorRendered=false;}};View.prototype.updateSize=function(totalHeight,isAuto,isResize){if(this['setHeight']){this['setHeight'](totalHeight,isAuto);}else{_super.prototype.updateSize.call(this,totalHeight,isAuto,isResize);}this.updateNowIndicator();};View.prototype.addScroll=function(scroll){var queuedScroll=this.queuedScroll||(this.queuedScroll={});$.extend(queuedScroll,scroll);};View.prototype.popScroll=function(){this.applyQueuedScroll();this.queuedScroll=null;};View.prototype.applyQueuedScroll=function(){if(this.queuedScroll){this.applyScroll(this.queuedScroll);}};View.prototype.queryScroll=function(){var scroll={};if(this.isDatesRendered){$.extend(scroll,this.queryDateScroll());}return scroll;};View.prototype.applyScroll=function(scroll){if(scroll.isDateInit&&this.isDatesRendered){$.extend(scroll,this.computeInitialDateScroll());}if(this.isDatesRendered){this.applyDateScroll(scroll);}};View.prototype.computeInitialDateScroll=function(){return{};};View.prototype.queryDateScroll=function(){return{};};View.prototype.applyDateScroll=function(scroll){};View.prototype.reportEventDrop=function(eventInstance,eventMutation,el,ev){var eventManager=this.calendar.eventManager;var undoFunc=eventManager.mutateEventsWithId(eventInstance.def.id,eventMutation);var dateMutation=eventMutation.dateMutation;if(dateMutation){eventInstance.dateProfile=dateMutation.buildNewDateProfile(eventInstance.dateProfile,this.calendar);}this.triggerEventDrop(eventInstance,dateMutation&&dateMutation.dateDelta||moment.duration(),undoFunc,el,ev);};View.prototype.triggerEventDrop=function(eventInstance,dateDelta,undoFunc,el,ev){this.publiclyTrigger('eventDrop',{context:el[0],args:[eventInstance.toLegacy(),dateDelta,undoFunc,ev,{},this]});};View.prototype.reportExternalDrop=function(singleEventDef,isEvent,isSticky,el,ev,ui){if(isEvent){this.calendar.eventManager.addEventDef(singleEventDef,isSticky);}this.triggerExternalDrop(singleEventDef,isEvent,el,ev,ui);};View.prototype.triggerExternalDrop=function(singleEventDef,isEvent,el,ev,ui){this.publiclyTrigger('drop',{context:el[0],args:[singleEventDef.dateProfile.start.clone(),ev,ui,this]});if(isEvent){this.publiclyTrigger('eventReceive',{context:this,args:[singleEventDef.buildInstance().toLegacy(),this]});}};View.prototype.reportEventResize=function(eventInstance,eventMutation,el,ev){var eventManager=this.calendar.eventManager;var undoFunc=eventManager.mutateEventsWithId(eventInstance.def.id,eventMutation);eventInstance.dateProfile=eventMutation.dateMutation.buildNewDateProfile(eventInstance.dateProfile,this.calendar);this.triggerEventResize(eventInstance,eventMutation.dateMutation.endDelta,undoFunc,el,ev);};View.prototype.triggerEventResize=function(eventInstance,durationDelta,undoFunc,el,ev){this.publiclyTrigger('eventResize',{context:el[0],args:[eventInstance.toLegacy(),durationDelta,undoFunc,ev,{},this]});};View.prototype.select=function(footprint,ev){this.unselect(ev);this.renderSelectionFootprint(footprint);this.reportSelection(footprint,ev);};View.prototype.renderSelectionFootprint=function(footprint){if(this['renderSelection']){this['renderSelection'](footprint.toLegacy(this.calendar));}else{_super.prototype.renderSelectionFootprint.call(this,footprint);}};View.prototype.reportSelection=function(footprint,ev){this.isSelected=true;this.triggerSelect(footprint,ev);};View.prototype.triggerSelect=function(footprint,ev){var dateProfile=this.calendar.footprintToDateProfile(footprint);this.publiclyTrigger('select',{context:this,args:[dateProfile.start,dateProfile.end,ev,this]});};View.prototype.unselect=function(ev){if(this.isSelected){this.isSelected=false;if(this['destroySelection']){this['destroySelection']();}this.unrenderSelection();this.publiclyTrigger('unselect',{context:this,args:[ev,this]});}};View.prototype.selectEventInstance=function(eventInstance){if(!this.selectedEventInstance||this.selectedEventInstance!==eventInstance){this.unselectEventInstance();this.getEventSegs().forEach(function(seg){if(seg.footprint.eventInstance===eventInstance&&seg.el){seg.el.addClass('fc-selected');}});this.selectedEventInstance=eventInstance;}};View.prototype.unselectEventInstance=function(){if(this.selectedEventInstance){this.getEventSegs().forEach(function(seg){if(seg.el){seg.el.removeClass('fc-selected');}});this.selectedEventInstance=null;}};View.prototype.isEventDefSelected=function(eventDef){return this.selectedEventInstance&&this.selectedEventInstance.def.id===eventDef.id;};View.prototype.handleDocumentMousedown=function(ev){if(util_1.isPrimaryMouseButton(ev)){this.processUnselect(ev);}};View.prototype.processUnselect=function(ev){this.processRangeUnselect(ev);this.processEventUnselect(ev);};View.prototype.processRangeUnselect=function(ev){var ignore;if(this.isSelected&&this.opt('unselectAuto')){ignore=this.opt('unselectCancel');if(!ignore||!$(ev.target).closest(ignore).length){this.unselect(ev);}}};View.prototype.processEventUnselect=function(ev){if(this.selectedEventInstance){if(!$(ev.target).closest('.fc-selected').length){this.unselectEventInstance();}}};View.prototype.triggerBaseRendered=function(){this.publiclyTrigger('viewRender',{context:this,args:[this,this.el]});};View.prototype.triggerBaseUnrendered=function(){this.publiclyTrigger('viewDestroy',{context:this,args:[this,this.el]});};View.prototype.triggerDayClick=function(footprint,dayEl,ev){var dateProfile=this.calendar.footprintToDateProfile(footprint);this.publiclyTrigger('dayClick',{context:dayEl,args:[dateProfile.start,ev,this]});};View.prototype.isDateInOtherMonth=function(date,dateProfile){return false;};View.prototype.getUnzonedRangeOption=function(name){var val=this.opt(name);if(typeof val==='function'){val=val.apply(null,Array.prototype.slice.call(arguments,1));}if(val){return this.calendar.parseUnzonedRange(val);}};View.prototype.initHiddenDays=function(){var hiddenDays=this.opt('hiddenDays')||[];var isHiddenDayHash=[];var dayCnt=0;var i;if(this.opt('weekends')===false){hiddenDays.push(0,6);}for(i=0;i<7;i++){if(!(isHiddenDayHash[i]=$.inArray(i,hiddenDays)!==-1)){dayCnt++;}}if(!dayCnt){throw new Error('invalid hiddenDays');}this.isHiddenDayHash=isHiddenDayHash;};View.prototype.trimHiddenDays=function(inputUnzonedRange){var start=inputUnzonedRange.getStart();var end=inputUnzonedRange.getEnd();if(start){start=this.skipHiddenDays(start);}if(end){end=this.skipHiddenDays(end,-1,true);}if(start===null||end===null||start<end){return new UnzonedRange_1.default(start,end);}return null;};View.prototype.isHiddenDay=function(day){if(moment.isMoment(day)){day=day.day();}return this.isHiddenDayHash[day];};View.prototype.skipHiddenDays=function(date,inc,isExclusive){if(inc===void 0){inc=1;}if(isExclusive===void 0){isExclusive=false;}var out=date.clone();while(this.isHiddenDayHash[(out.day()+(isExclusive?inc:0)+7)%7]){out.add(inc,'days');}return out;};return View;}(InteractiveDateComponent_1.default);exports.default=View;View.prototype.usesMinMaxTime=false;View.prototype.dateProfileGeneratorClass=DateProfileGenerator_1.default;View.watch('displayingDates',['isInDom','dateProfile'],function(deps){this.requestDateRender(deps.dateProfile);},function(){this.requestDateUnrender();});View.watch('displayingBusinessHours',['displayingDates','businessHourGenerator'],function(deps){this.requestBusinessHoursRender(deps.businessHourGenerator);},function(){this.requestBusinessHoursUnrender();});View.watch('initialEvents',['dateProfile'],function(deps){return this.fetchInitialEvents(deps.dateProfile);});View.watch('bindingEvents',['initialEvents'],function(deps){this.setEvents(deps.initialEvents);this.bindEventChanges();},function(){this.unbindEventChanges();this.unsetEvents();});View.watch('displayingEvents',['displayingDates','hasEvents'],function(){this.requestEventsRender(this.get('currentEvents'));},function(){this.requestEventsUnrender();});View.watch('title',['dateProfile'],function(deps){return this.title=this.computeTitle(deps.dateProfile);});View.watch('legacyDateProps',['dateProfile'],function(deps){var calendar=this.calendar;var dateProfile=deps.dateProfile;this.start=calendar.msToMoment(dateProfile.activeUnzonedRange.startMs,dateProfile.isRangeAllDay);this.end=calendar.msToMoment(dateProfile.activeUnzonedRange.endMs,dateProfile.isRangeAllDay);this.intervalStart=calendar.msToMoment(dateProfile.currentUnzonedRange.startMs,dateProfile.isRangeAllDay);this.intervalEnd=calendar.msToMoment(dateProfile.currentUnzonedRange.endMs,dateProfile.isRangeAllDay);});},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var util_1=__webpack_require__(4);var EventRenderer=function(){function EventRenderer(component,fillRenderer){this.view=component._getView();this.component=component;this.fillRenderer=fillRenderer;}EventRenderer.prototype.opt=function(name){return this.view.opt(name);};EventRenderer.prototype.rangeUpdated=function(){var displayEventTime;var displayEventEnd;this.eventTimeFormat=this.opt('eventTimeFormat')||this.opt('timeFormat')||this.computeEventTimeFormat();displayEventTime=this.opt('displayEventTime');if(displayEventTime==null){displayEventTime=this.computeDisplayEventTime();}displayEventEnd=this.opt('displayEventEnd');if(displayEventEnd==null){displayEventEnd=this.computeDisplayEventEnd();}this.displayEventTime=displayEventTime;this.displayEventEnd=displayEventEnd;};EventRenderer.prototype.render=function(eventsPayload){var dateProfile=this.component._getDateProfile();var eventDefId;var instanceGroup;var eventRanges;var bgRanges=[];var fgRanges=[];for(eventDefId in eventsPayload){instanceGroup=eventsPayload[eventDefId];eventRanges=instanceGroup.sliceRenderRanges(dateProfile.activeUnzonedRange);if(instanceGroup.getEventDef().hasBgRendering()){bgRanges.push.apply(bgRanges,eventRanges);}else{fgRanges.push.apply(fgRanges,eventRanges);}}this.renderBgRanges(bgRanges);this.renderFgRanges(fgRanges);};EventRenderer.prototype.unrender=function(){this.unrenderBgRanges();this.unrenderFgRanges();};EventRenderer.prototype.renderFgRanges=function(eventRanges){var eventFootprints=this.component.eventRangesToEventFootprints(eventRanges);var segs=this.component.eventFootprintsToSegs(eventFootprints);segs=this.renderFgSegEls(segs);if(this.renderFgSegs(segs)!==false){this.fgSegs=segs;}};EventRenderer.prototype.unrenderFgRanges=function(){this.unrenderFgSegs(this.fgSegs||[]);this.fgSegs=null;};EventRenderer.prototype.renderBgRanges=function(eventRanges){var eventFootprints=this.component.eventRangesToEventFootprints(eventRanges);var segs=this.component.eventFootprintsToSegs(eventFootprints);if(this.renderBgSegs(segs)!==false){this.bgSegs=segs;}};EventRenderer.prototype.unrenderBgRanges=function(){this.unrenderBgSegs();this.bgSegs=null;};EventRenderer.prototype.getSegs=function(){return(this.bgSegs||[]).concat(this.fgSegs||[]);};EventRenderer.prototype.renderFgSegs=function(segs){return false;};EventRenderer.prototype.unrenderFgSegs=function(segs){};EventRenderer.prototype.renderBgSegs=function(segs){var _this=this;if(this.fillRenderer){this.fillRenderer.renderSegs('bgEvent',segs,{getClasses:function getClasses(seg){return _this.getBgClasses(seg.footprint.eventDef);},getCss:function getCss(seg){return{'background-color':_this.getBgColor(seg.footprint.eventDef)};},filterEl:function filterEl(seg,el){return _this.filterEventRenderEl(seg.footprint,el);}});}else{return false;}};EventRenderer.prototype.unrenderBgSegs=function(){if(this.fillRenderer){this.fillRenderer.unrender('bgEvent');}};EventRenderer.prototype.renderFgSegEls=function(segs,disableResizing){var _this=this;if(disableResizing===void 0){disableResizing=false;}var hasEventRenderHandlers=this.view.hasPublicHandlers('eventRender');var html='';var renderedSegs=[];var i;if(segs.length){for(i=0;i<segs.length;i++){this.beforeFgSegHtml(segs[i]);html+=this.fgSegHtml(segs[i],disableResizing);}$(html).each(function(i,node){var seg=segs[i];var el=$(node);if(hasEventRenderHandlers){el=_this.filterEventRenderEl(seg.footprint,el);}if(el){el.data('fc-seg',seg);seg.el=el;renderedSegs.push(seg);}});}return renderedSegs;};EventRenderer.prototype.beforeFgSegHtml=function(seg){};EventRenderer.prototype.fgSegHtml=function(seg,disableResizing){};EventRenderer.prototype.getSegClasses=function(seg,isDraggable,isResizable){var classes=['fc-event',seg.isStart?'fc-start':'fc-not-start',seg.isEnd?'fc-end':'fc-not-end'].concat(this.getClasses(seg.footprint.eventDef));if(isDraggable){classes.push('fc-draggable');}if(isResizable){classes.push('fc-resizable');}if(this.view.isEventDefSelected(seg.footprint.eventDef)){classes.push('fc-selected');}return classes;};EventRenderer.prototype.filterEventRenderEl=function(eventFootprint,el){var legacy=eventFootprint.getEventLegacy();var custom=this.view.publiclyTrigger('eventRender',{context:legacy,args:[legacy,el,this.view]});if(custom===false){el=null;}else if(custom&&custom!==true){el=$(custom);}return el;};EventRenderer.prototype.getTimeText=function(eventFootprint,formatStr,displayEnd){return this._getTimeText(eventFootprint.eventInstance.dateProfile.start,eventFootprint.eventInstance.dateProfile.end,eventFootprint.componentFootprint.isAllDay,formatStr,displayEnd);};EventRenderer.prototype._getTimeText=function(start,end,isAllDay,formatStr,displayEnd){if(formatStr==null){formatStr=this.eventTimeFormat;}if(displayEnd==null){displayEnd=this.displayEventEnd;}if(this.displayEventTime&&!isAllDay){if(displayEnd&&end){return this.view.formatRange({start:start,end:end},false,formatStr);}else{return start.format(formatStr);}}return'';};EventRenderer.prototype.computeEventTimeFormat=function(){return this.opt('smallTimeFormat');};EventRenderer.prototype.computeDisplayEventTime=function(){return true;};EventRenderer.prototype.computeDisplayEventEnd=function(){return true;};EventRenderer.prototype.getBgClasses=function(eventDef){var classNames=this.getClasses(eventDef);classNames.push('fc-bgevent');return classNames;};EventRenderer.prototype.getClasses=function(eventDef){var objs=this.getStylingObjs(eventDef);var i;var classNames=[];for(i=0;i<objs.length;i++){classNames.push.apply(classNames,objs[i].eventClassName||objs[i].className||[]);}return classNames;};EventRenderer.prototype.getSkinCss=function(eventDef){return{'background-color':this.getBgColor(eventDef),'border-color':this.getBorderColor(eventDef),color:this.getTextColor(eventDef)};};EventRenderer.prototype.getBgColor=function(eventDef){var objs=this.getStylingObjs(eventDef);var i;var val;for(i=0;i<objs.length&&!val;i++){val=objs[i].eventBackgroundColor||objs[i].eventColor||objs[i].backgroundColor||objs[i].color;}if(!val){val=this.opt('eventBackgroundColor')||this.opt('eventColor');}return val;};EventRenderer.prototype.getBorderColor=function(eventDef){var objs=this.getStylingObjs(eventDef);var i;var val;for(i=0;i<objs.length&&!val;i++){val=objs[i].eventBorderColor||objs[i].eventColor||objs[i].borderColor||objs[i].color;}if(!val){val=this.opt('eventBorderColor')||this.opt('eventColor');}return val;};EventRenderer.prototype.getTextColor=function(eventDef){var objs=this.getStylingObjs(eventDef);var i;var val;for(i=0;i<objs.length&&!val;i++){val=objs[i].eventTextColor||objs[i].textColor;}if(!val){val=this.opt('eventTextColor');}return val;};EventRenderer.prototype.getStylingObjs=function(eventDef){var objs=this.getFallbackStylingObjs(eventDef);objs.unshift(eventDef);return objs;};EventRenderer.prototype.getFallbackStylingObjs=function(eventDef){return[eventDef.source];};EventRenderer.prototype.sortEventSegs=function(segs){segs.sort(util_1.proxy(this,'compareEventSegs'));};EventRenderer.prototype.compareEventSegs=function(seg1,seg2){var f1=seg1.footprint;var f2=seg2.footprint;var cf1=f1.componentFootprint;var cf2=f2.componentFootprint;var r1=cf1.unzonedRange;var r2=cf2.unzonedRange;return r1.startMs-r2.startMs||r2.endMs-r2.startMs-(r1.endMs-r1.startMs)||cf2.isAllDay-cf1.isAllDay||util_1.compareByFieldSpecs(f1.eventDef,f2.eventDef,this.view.eventOrderSpecs,f1.eventDef.miscProps,f2.eventDef.miscProps);};return EventRenderer;}();exports.default=EventRenderer;},,,,,function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var moment_ext_1=__webpack_require__(10);moment_ext_1.newMomentProto.format=function(){if(this._fullCalendar&&arguments[0]){return formatDate(this,arguments[0]);}if(this._ambigTime){return moment_ext_1.oldMomentFormat(englishMoment(this),'YYYY-MM-DD');}if(this._ambigZone){return moment_ext_1.oldMomentFormat(englishMoment(this),'YYYY-MM-DD[T]HH:mm:ss');}if(this._fullCalendar){return moment_ext_1.oldMomentFormat(englishMoment(this));}return moment_ext_1.oldMomentProto.format.apply(this,arguments);};moment_ext_1.newMomentProto.toISOString=function(){if(this._ambigTime){return moment_ext_1.oldMomentFormat(englishMoment(this),'YYYY-MM-DD');}if(this._ambigZone){return moment_ext_1.oldMomentFormat(englishMoment(this),'YYYY-MM-DD[T]HH:mm:ss');}if(this._fullCalendar){return moment_ext_1.oldMomentProto.toISOString.apply(englishMoment(this),arguments);}return moment_ext_1.oldMomentProto.toISOString.apply(this,arguments);};function englishMoment(mom){if(mom.locale()!=='en'){return mom.clone().locale('en');}return mom;}var PART_SEPARATOR='\x0B';var SPECIAL_TOKEN_MARKER='\x1F';var MAYBE_MARKER='\x1E';var MAYBE_REGEXP=new RegExp(MAYBE_MARKER+'([^'+MAYBE_MARKER+']*)'+MAYBE_MARKER,'g');var specialTokens={t:function t(date){return moment_ext_1.oldMomentFormat(date,'a').charAt(0);},T:function T(date){return moment_ext_1.oldMomentFormat(date,'A').charAt(0);}};var largeTokenMap={Y:{value:1,unit:'year'},M:{value:2,unit:'month'},W:{value:3,unit:'week'},w:{value:3,unit:'week'},D:{value:4,unit:'day'},d:{value:4,unit:'day'}};function formatDate(date,formatStr){return renderFakeFormatString(getParsedFormatString(formatStr).fakeFormatString,date);}exports.formatDate=formatDate;function formatRange(date1,date2,formatStr,separator,isRTL){var localeData;date1=moment_ext_1.default.parseZone(date1);date2=moment_ext_1.default.parseZone(date2);localeData=date1.localeData();formatStr=localeData.longDateFormat(formatStr)||formatStr;return renderParsedFormat(getParsedFormatString(formatStr),date1,date2,separator||' - ',isRTL);}exports.formatRange=formatRange;function renderParsedFormat(parsedFormat,date1,date2,separator,isRTL){var sameUnits=parsedFormat.sameUnits;var unzonedDate1=date1.clone().stripZone();var unzonedDate2=date2.clone().stripZone();var renderedParts1=renderFakeFormatStringParts(parsedFormat.fakeFormatString,date1);var renderedParts2=renderFakeFormatStringParts(parsedFormat.fakeFormatString,date2);var leftI;var leftStr='';var rightI;var rightStr='';var middleI;var middleStr1='';var middleStr2='';var middleStr='';for(leftI=0;leftI<sameUnits.length&&(!sameUnits[leftI]||unzonedDate1.isSame(unzonedDate2,sameUnits[leftI]));leftI++){leftStr+=renderedParts1[leftI];}for(rightI=sameUnits.length-1;rightI>leftI&&(!sameUnits[rightI]||unzonedDate1.isSame(unzonedDate2,sameUnits[rightI]));rightI--){if(rightI-1===leftI&&renderedParts1[rightI]==='.'){break;}rightStr=renderedParts1[rightI]+rightStr;}for(middleI=leftI;middleI<=rightI;middleI++){middleStr1+=renderedParts1[middleI];middleStr2+=renderedParts2[middleI];}if(middleStr1||middleStr2){if(isRTL){middleStr=middleStr2+separator+middleStr1;}else{middleStr=middleStr1+separator+middleStr2;}}return processMaybeMarkers(leftStr+middleStr+rightStr);}var parsedFormatStrCache={};function getParsedFormatString(formatStr){return parsedFormatStrCache[formatStr]||(parsedFormatStrCache[formatStr]=parseFormatString(formatStr));}function parseFormatString(formatStr){var chunks=chunkFormatString(formatStr);return{fakeFormatString:buildFakeFormatString(chunks),sameUnits:buildSameUnits(chunks)};}function chunkFormatString(formatStr){var chunks=[];var match;var chunker=/\[([^\]]*)\]|\(([^\)]*)\)|(LTS|LT|(\w)\4*o?)|([^\w\[\(]+)/g;while(match=chunker.exec(formatStr)){if(match[1]){chunks.push.apply(chunks,splitStringLiteral(match[1]));}else if(match[2]){chunks.push({maybe:chunkFormatString(match[2])});}else if(match[3]){chunks.push({token:match[3]});}else if(match[5]){chunks.push.apply(chunks,splitStringLiteral(match[5]));}}return chunks;}function splitStringLiteral(s){if(s==='. '){return['.',' '];}else{return[s];}}function buildFakeFormatString(chunks){var parts=[];var i;var chunk;for(i=0;i<chunks.length;i++){chunk=chunks[i];if(typeof chunk==='string'){parts.push('['+chunk+']');}else if(chunk.token){if(chunk.token in specialTokens){parts.push(SPECIAL_TOKEN_MARKER+'['+chunk.token+']');}else{parts.push(chunk.token);}}else if(chunk.maybe){parts.push(MAYBE_MARKER+buildFakeFormatString(chunk.maybe)+MAYBE_MARKER);}}return parts.join(PART_SEPARATOR);}function buildSameUnits(chunks){var units=[];var i;var chunk;var tokenInfo;for(i=0;i<chunks.length;i++){chunk=chunks[i];if(chunk.token){tokenInfo=largeTokenMap[chunk.token.charAt(0)];units.push(tokenInfo?tokenInfo.unit:'second');}else if(chunk.maybe){units.push.apply(units,buildSameUnits(chunk.maybe));}else{units.push(null);}}return units;}function renderFakeFormatString(fakeFormatString,date){return processMaybeMarkers(renderFakeFormatStringParts(fakeFormatString,date).join(''));}function renderFakeFormatStringParts(fakeFormatString,date){var parts=[];var fakeRender=moment_ext_1.oldMomentFormat(date,fakeFormatString);var fakeParts=fakeRender.split(PART_SEPARATOR);var i;var fakePart;for(i=0;i<fakeParts.length;i++){fakePart=fakeParts[i];if(fakePart.charAt(0)===SPECIAL_TOKEN_MARKER){parts.push(specialTokens[fakePart.substring(1)](date));}else{parts.push(fakePart);}}return parts;}function processMaybeMarkers(s){return s.replace(MAYBE_REGEXP,function(m0,m1){if(m1.match(/[1-9]/)){return m1;}else{return'';}});}function queryMostGranularFormatUnit(formatStr){var chunks=chunkFormatString(formatStr);var i;var chunk;var candidate;var best;for(i=0;i<chunks.length;i++){chunk=chunks[i];if(chunk.token){candidate=largeTokenMap[chunk.token.charAt(0)];if(candidate){if(!best||candidate.value>best.value){best=candidate;}}}}if(best){return best.unit;}return null;}exports.queryMostGranularFormatUnit=queryMostGranularFormatUnit;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var Class_1=__webpack_require__(33);var EmitterMixin_1=__webpack_require__(11);var ListenerMixin_1=__webpack_require__(7);var Model=function(_super){tslib_1.__extends(Model,_super);function Model(){var _this=_super.call(this)||this;_this._watchers={};_this._props={};_this.applyGlobalWatchers();_this.constructed();return _this;}Model.watch=function(name){var args=[];for(var _i=1;_i<arguments.length;_i++){args[_i-1]=arguments[_i];}if(!this.prototype.hasOwnProperty('_globalWatchArgs')){this.prototype._globalWatchArgs=__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_create___default()(this.prototype._globalWatchArgs);}this.prototype._globalWatchArgs[name]=args;};Model.prototype.constructed=function(){};Model.prototype.applyGlobalWatchers=function(){var map=this._globalWatchArgs;var name;for(name in map){this.watch.apply(this,[name].concat(map[name]));}};Model.prototype.has=function(name){return name in this._props;};Model.prototype.get=function(name){if(name===undefined){return this._props;}return this._props[name];};Model.prototype.set=function(name,val){var newProps;if(typeof name==='string'){newProps={};newProps[name]=val===undefined?null:val;}else{newProps=name;}this.setProps(newProps);};Model.prototype.reset=function(newProps){var oldProps=this._props;var changeset={};var name;for(name in oldProps){changeset[name]=undefined;}for(name in newProps){changeset[name]=newProps[name];}this.setProps(changeset);};Model.prototype.unset=function(name){var newProps={};var names;var i;if(typeof name==='string'){names=[name];}else{names=name;}for(i=0;i<names.length;i++){newProps[names[i]]=undefined;}this.setProps(newProps);};Model.prototype.setProps=function(newProps){var changedProps={};var changedCnt=0;var name;var val;for(name in newProps){val=newProps[name];if((typeof val==='undefined'?'undefined':Object(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__["default"])(val))==='object'||val!==this._props[name]){changedProps[name]=val;changedCnt++;}}if(changedCnt){this.trigger('before:batchChange',changedProps);for(name in changedProps){val=changedProps[name];this.trigger('before:change',name,val);this.trigger('before:change:'+name,val);}for(name in changedProps){val=changedProps[name];if(val===undefined){delete this._props[name];}else{this._props[name]=val;}this.trigger('change:'+name,val);this.trigger('change',name,val);}this.trigger('batchChange',changedProps);}};Model.prototype.watch=function(name,depList,startFunc,stopFunc){var _this=this;this.unwatch(name);this._watchers[name]=this._watchDeps(depList,function(deps){var res=startFunc.call(_this,deps);if(res&&res.then){_this.unset(name);res.then(function(val){_this.set(name,val);});}else{_this.set(name,res);}},function(deps){_this.unset(name);if(stopFunc){stopFunc.call(_this,deps);}});};Model.prototype.unwatch=function(name){var watcher=this._watchers[name];if(watcher){delete this._watchers[name];watcher.teardown();}};Model.prototype._watchDeps=function(depList,startFunc,stopFunc){var _this=this;var queuedChangeCnt=0;var depCnt=depList.length;var satisfyCnt=0;var values={};var bindTuples=[];var isCallingStop=false;var onBeforeDepChange=function onBeforeDepChange(depName,val,isOptional){queuedChangeCnt++;if(queuedChangeCnt===1){if(satisfyCnt===depCnt){isCallingStop=true;stopFunc(values);isCallingStop=false;}}};var onDepChange=function onDepChange(depName,val,isOptional){if(val===undefined){if(!isOptional&&values[depName]!==undefined){satisfyCnt--;}delete values[depName];}else{if(!isOptional&&values[depName]===undefined){satisfyCnt++;}values[depName]=val;}queuedChangeCnt--;if(!queuedChangeCnt){if(satisfyCnt===depCnt){if(!isCallingStop){startFunc(values);}}}};var bind=function bind(eventName,handler){_this.on(eventName,handler);bindTuples.push([eventName,handler]);};depList.forEach(function(depName){var isOptional=false;if(depName.charAt(0)==='?'){depName=depName.substring(1);isOptional=true;}bind('before:change:'+depName,function(val){onBeforeDepChange(depName,val,isOptional);});bind('change:'+depName,function(val){onDepChange(depName,val,isOptional);});});depList.forEach(function(depName){var isOptional=false;if(depName.charAt(0)==='?'){depName=depName.substring(1);isOptional=true;}if(_this.has(depName)){values[depName]=_this.get(depName);satisfyCnt++;}else if(isOptional){satisfyCnt++;}});if(satisfyCnt===depCnt){startFunc(values);}return{teardown:function teardown(){for(var i=0;i<bindTuples.length;i++){_this.off(bindTuples[i][0],bindTuples[i][1]);}bindTuples=null;if(satisfyCnt===depCnt){stopFunc();}},flash:function flash(){if(satisfyCnt===depCnt){stopFunc();startFunc(values);}}};};Model.prototype.flash=function(name){var watcher=this._watchers[name];if(watcher){watcher.flash();}};return Model;}(Class_1.default);exports.default=Model;Model.prototype._globalWatchArgs={};EmitterMixin_1.default.mixInto(Model);ListenerMixin_1.default.mixInto(Model);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var moment=__webpack_require__(0);var util_1=__webpack_require__(4);var SingleEventDef_1=__webpack_require__(13);var RecurringEventDef_1=__webpack_require__(210);exports.default={parse:function parse(eventInput,source){if(util_1.isTimeString(eventInput.start)||moment.isDuration(eventInput.start)||util_1.isTimeString(eventInput.end)||moment.isDuration(eventInput.end)){return RecurringEventDef_1.default.parse(eventInput,source);}else{return SingleEventDef_1.default.parse(eventInput,source);}}};},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var util_1=__webpack_require__(4);var EventDateProfile_1=__webpack_require__(17);var EventDefDateMutation=function(){function EventDefDateMutation(){this.clearEnd=false;this.forceTimed=false;this.forceAllDay=false;}EventDefDateMutation.createFromDiff=function(dateProfile0,dateProfile1,largeUnit){var clearEnd=dateProfile0.end&&!dateProfile1.end;var forceTimed=dateProfile0.isAllDay()&&!dateProfile1.isAllDay();var forceAllDay=!dateProfile0.isAllDay()&&dateProfile1.isAllDay();var dateDelta;var endDiff;var endDelta;var mutation;function subtractDates(date1,date0){if(largeUnit){return util_1.diffByUnit(date1,date0,largeUnit);}else if(dateProfile1.isAllDay()){return util_1.diffDay(date1,date0);}else{return util_1.diffDayTime(date1,date0);}}dateDelta=subtractDates(dateProfile1.start,dateProfile0.start);if(dateProfile1.end){endDiff=subtractDates(dateProfile1.unzonedRange.getEnd(),dateProfile0.unzonedRange.getEnd());endDelta=endDiff.subtract(dateDelta);}mutation=new EventDefDateMutation();mutation.clearEnd=clearEnd;mutation.forceTimed=forceTimed;mutation.forceAllDay=forceAllDay;mutation.setDateDelta(dateDelta);mutation.setEndDelta(endDelta);return mutation;};EventDefDateMutation.prototype.buildNewDateProfile=function(eventDateProfile,calendar){var start=eventDateProfile.start.clone();var end=null;var shouldRezone=false;if(eventDateProfile.end&&!this.clearEnd){end=eventDateProfile.end.clone();}else if(this.endDelta&&!end){end=calendar.getDefaultEventEnd(eventDateProfile.isAllDay(),start);}if(this.forceTimed){shouldRezone=true;if(!start.hasTime()){start.time(0);}if(end&&!end.hasTime()){end.time(0);}}else if(this.forceAllDay){if(start.hasTime()){start.stripTime();}if(end&&end.hasTime()){end.stripTime();}}if(this.dateDelta){shouldRezone=true;start.add(this.dateDelta);if(end){end.add(this.dateDelta);}}if(this.endDelta){shouldRezone=true;end.add(this.endDelta);}if(this.startDelta){shouldRezone=true;start.add(this.startDelta);}if(shouldRezone){start=calendar.applyTimezone(start);if(end){end=calendar.applyTimezone(end);}}if(!end&&calendar.opt('forceEventDuration')){end=calendar.getDefaultEventEnd(eventDateProfile.isAllDay(),start);}return new EventDateProfile_1.default(start,end,calendar);};EventDefDateMutation.prototype.setDateDelta=function(dateDelta){if(dateDelta&&dateDelta.valueOf()){this.dateDelta=dateDelta;}else{this.dateDelta=null;}};EventDefDateMutation.prototype.setStartDelta=function(startDelta){if(startDelta&&startDelta.valueOf()){this.startDelta=startDelta;}else{this.startDelta=null;}};EventDefDateMutation.prototype.setEndDelta=function(endDelta){if(endDelta&&endDelta.valueOf()){this.endDelta=endDelta;}else{this.endDelta=null;}};EventDefDateMutation.prototype.isEmpty=function(){return!this.clearEnd&&!this.forceTimed&&!this.forceAllDay&&!this.dateDelta&&!this.startDelta&&!this.endDelta;};return EventDefDateMutation;}();exports.default=EventDefDateMutation;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var StandardTheme_1=__webpack_require__(213);var JqueryUiTheme_1=__webpack_require__(214);var themeClassHash={};function defineThemeSystem(themeName,themeClass){themeClassHash[themeName]=themeClass;}exports.defineThemeSystem=defineThemeSystem;function getThemeSystemClass(themeSetting){if(!themeSetting){return StandardTheme_1.default;}else if(themeSetting===true){return JqueryUiTheme_1.default;}else{return themeClassHash[themeSetting];}}exports.getThemeSystemClass=getThemeSystemClass;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var Promise_1=__webpack_require__(20);var EventSource_1=__webpack_require__(6);var SingleEventDef_1=__webpack_require__(13);var ArrayEventSource=function(_super){tslib_1.__extends(ArrayEventSource,_super);function ArrayEventSource(calendar){var _this=_super.call(this,calendar)||this;_this.eventDefs=[];return _this;}ArrayEventSource.parse=function(rawInput,calendar){var rawProps;if($.isArray(rawInput.events)){rawProps=rawInput;}else if($.isArray(rawInput)){rawProps={events:rawInput};}if(rawProps){return EventSource_1.default.parse.call(this,rawProps,calendar);}return false;};ArrayEventSource.prototype.setRawEventDefs=function(rawEventDefs){this.rawEventDefs=rawEventDefs;this.eventDefs=this.parseEventDefs(rawEventDefs);};ArrayEventSource.prototype.fetch=function(start,end,timezone){var eventDefs=this.eventDefs;var i;if(this.currentTimezone!=null&&this.currentTimezone!==timezone){for(i=0;i<eventDefs.length;i++){if(eventDefs[i]instanceof SingleEventDef_1.default){eventDefs[i].rezone();}}}this.currentTimezone=timezone;return Promise_1.default.resolve(eventDefs);};ArrayEventSource.prototype.addEventDef=function(eventDef){this.eventDefs.push(eventDef);};ArrayEventSource.prototype.removeEventDefsById=function(eventDefId){return util_1.removeMatching(this.eventDefs,function(eventDef){return eventDef.id===eventDefId;});};ArrayEventSource.prototype.removeAllEventDefs=function(){this.eventDefs=[];};ArrayEventSource.prototype.getPrimitive=function(){return this.rawEventDefs;};ArrayEventSource.prototype.applyManualStandardProps=function(rawProps){var superSuccess=_super.prototype.applyManualStandardProps.call(this,rawProps);this.setRawEventDefs(rawProps.events);return superSuccess;};return ArrayEventSource;}(EventSource_1.default);exports.default=ArrayEventSource;ArrayEventSource.defineStandardProps({events:false});},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var util_1=__webpack_require__(4);var CoordCache=function(){function CoordCache(options){this.isHorizontal=false;this.isVertical=false;this.els=$(options.els);this.isHorizontal=options.isHorizontal;this.isVertical=options.isVertical;this.forcedOffsetParentEl=options.offsetParent?$(options.offsetParent):null;}CoordCache.prototype.build=function(){var offsetParentEl=this.forcedOffsetParentEl;if(!offsetParentEl&&this.els.length>0){offsetParentEl=this.els.eq(0).offsetParent();}this.origin=offsetParentEl?offsetParentEl.offset():null;this.boundingRect=this.queryBoundingRect();if(this.isHorizontal){this.buildElHorizontals();}if(this.isVertical){this.buildElVerticals();}};CoordCache.prototype.clear=function(){this.origin=null;this.boundingRect=null;this.lefts=null;this.rights=null;this.tops=null;this.bottoms=null;};CoordCache.prototype.ensureBuilt=function(){if(!this.origin){this.build();}};CoordCache.prototype.buildElHorizontals=function(){var lefts=[];var rights=[];this.els.each(function(i,node){var el=$(node);var left=el.offset().left;var width=el.outerWidth();lefts.push(left);rights.push(left+width);});this.lefts=lefts;this.rights=rights;};CoordCache.prototype.buildElVerticals=function(){var tops=[];var bottoms=[];this.els.each(function(i,node){var el=$(node);var top=el.offset().top;var height=el.outerHeight();tops.push(top);bottoms.push(top+height);});this.tops=tops;this.bottoms=bottoms;};CoordCache.prototype.getHorizontalIndex=function(leftOffset){this.ensureBuilt();var lefts=this.lefts;var rights=this.rights;var len=lefts.length;var i;for(i=0;i<len;i++){if(leftOffset>=lefts[i]&&leftOffset<rights[i]){return i;}}};CoordCache.prototype.getVerticalIndex=function(topOffset){this.ensureBuilt();var tops=this.tops;var bottoms=this.bottoms;var len=tops.length;var i;for(i=0;i<len;i++){if(topOffset>=tops[i]&&topOffset<bottoms[i]){return i;}}};CoordCache.prototype.getLeftOffset=function(leftIndex){this.ensureBuilt();return this.lefts[leftIndex];};CoordCache.prototype.getLeftPosition=function(leftIndex){this.ensureBuilt();return this.lefts[leftIndex]-this.origin.left;};CoordCache.prototype.getRightOffset=function(leftIndex){this.ensureBuilt();return this.rights[leftIndex];};CoordCache.prototype.getRightPosition=function(leftIndex){this.ensureBuilt();return this.rights[leftIndex]-this.origin.left;};CoordCache.prototype.getWidth=function(leftIndex){this.ensureBuilt();return this.rights[leftIndex]-this.lefts[leftIndex];};CoordCache.prototype.getTopOffset=function(topIndex){this.ensureBuilt();return this.tops[topIndex];};CoordCache.prototype.getTopPosition=function(topIndex){this.ensureBuilt();return this.tops[topIndex]-this.origin.top;};CoordCache.prototype.getBottomOffset=function(topIndex){this.ensureBuilt();return this.bottoms[topIndex];};CoordCache.prototype.getBottomPosition=function(topIndex){this.ensureBuilt();return this.bottoms[topIndex]-this.origin.top;};CoordCache.prototype.getHeight=function(topIndex){this.ensureBuilt();return this.bottoms[topIndex]-this.tops[topIndex];};CoordCache.prototype.queryBoundingRect=function(){var scrollParentEl;if(this.els.length>0){scrollParentEl=util_1.getScrollParent(this.els.eq(0));if(!scrollParentEl.is(document)){return util_1.getClientRect(scrollParentEl);}}return null;};CoordCache.prototype.isPointInBounds=function(leftOffset,topOffset){return this.isLeftInBounds(leftOffset)&&this.isTopInBounds(topOffset);};CoordCache.prototype.isLeftInBounds=function(leftOffset){return!this.boundingRect||leftOffset>=this.boundingRect.left&&leftOffset<this.boundingRect.right;};CoordCache.prototype.isTopInBounds=function(topOffset){return!this.boundingRect||topOffset>=this.boundingRect.top&&topOffset<this.boundingRect.bottom;};return CoordCache;}();exports.default=CoordCache;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var util_1=__webpack_require__(4);var ListenerMixin_1=__webpack_require__(7);var GlobalEmitter_1=__webpack_require__(21);var DragListener=function(){function DragListener(options){this.isInteracting=false;this.isDistanceSurpassed=false;this.isDelayEnded=false;this.isDragging=false;this.isTouch=false;this.isGeneric=false;this.shouldCancelTouchScroll=true;this.scrollAlwaysKills=false;this.isAutoScroll=false;this.scrollSensitivity=30;this.scrollSpeed=200;this.scrollIntervalMs=50;this.options=options||{};}DragListener.prototype.startInteraction=function(ev,extraOptions){if(extraOptions===void 0){extraOptions={};}if(ev.type==='mousedown'){if(GlobalEmitter_1.default.get().shouldIgnoreMouse()){return;}else if(!util_1.isPrimaryMouseButton(ev)){return;}else{ev.preventDefault();}}if(!this.isInteracting){this.delay=util_1.firstDefined(extraOptions.delay,this.options.delay,0);this.minDistance=util_1.firstDefined(extraOptions.distance,this.options.distance,0);this.subjectEl=this.options.subjectEl;util_1.preventSelection($('body'));this.isInteracting=true;this.isTouch=util_1.getEvIsTouch(ev);this.isGeneric=ev.type==='dragstart';this.isDelayEnded=false;this.isDistanceSurpassed=false;this.originX=util_1.getEvX(ev);this.originY=util_1.getEvY(ev);this.scrollEl=util_1.getScrollParent($(ev.target));this.bindHandlers();this.initAutoScroll();this.handleInteractionStart(ev);this.startDelay(ev);if(!this.minDistance){this.handleDistanceSurpassed(ev);}}};DragListener.prototype.handleInteractionStart=function(ev){this.trigger('interactionStart',ev);};DragListener.prototype.endInteraction=function(ev,isCancelled){if(this.isInteracting){this.endDrag(ev);if(this.delayTimeoutId){clearTimeout(this.delayTimeoutId);this.delayTimeoutId=null;}this.destroyAutoScroll();this.unbindHandlers();this.isInteracting=false;this.handleInteractionEnd(ev,isCancelled);util_1.allowSelection($('body'));}};DragListener.prototype.handleInteractionEnd=function(ev,isCancelled){this.trigger('interactionEnd',ev,isCancelled||false);};DragListener.prototype.bindHandlers=function(){var globalEmitter=GlobalEmitter_1.default.get();if(this.isGeneric){this.listenTo($(document),{drag:this.handleMove,dragstop:this.endInteraction});}else if(this.isTouch){this.listenTo(globalEmitter,{touchmove:this.handleTouchMove,touchend:this.endInteraction,scroll:this.handleTouchScroll});}else{this.listenTo(globalEmitter,{mousemove:this.handleMouseMove,mouseup:this.endInteraction});}this.listenTo(globalEmitter,{selectstart:util_1.preventDefault,contextmenu:util_1.preventDefault});};DragListener.prototype.unbindHandlers=function(){this.stopListeningTo(GlobalEmitter_1.default.get());this.stopListeningTo($(document));};DragListener.prototype.startDrag=function(ev,extraOptions){this.startInteraction(ev,extraOptions);if(!this.isDragging){this.isDragging=true;this.handleDragStart(ev);}};DragListener.prototype.handleDragStart=function(ev){this.trigger('dragStart',ev);};DragListener.prototype.handleMove=function(ev){var dx=util_1.getEvX(ev)-this.originX;var dy=util_1.getEvY(ev)-this.originY;var minDistance=this.minDistance;var distanceSq;if(!this.isDistanceSurpassed){distanceSq=dx*dx+dy*dy;if(distanceSq>=minDistance*minDistance){this.handleDistanceSurpassed(ev);}}if(this.isDragging){this.handleDrag(dx,dy,ev);}};DragListener.prototype.handleDrag=function(dx,dy,ev){this.trigger('drag',dx,dy,ev);this.updateAutoScroll(ev);};DragListener.prototype.endDrag=function(ev){if(this.isDragging){this.isDragging=false;this.handleDragEnd(ev);}};DragListener.prototype.handleDragEnd=function(ev){this.trigger('dragEnd',ev);};DragListener.prototype.startDelay=function(initialEv){var _this=this;if(this.delay){this.delayTimeoutId=setTimeout(function(){_this.handleDelayEnd(initialEv);},this.delay);}else{this.handleDelayEnd(initialEv);}};DragListener.prototype.handleDelayEnd=function(initialEv){this.isDelayEnded=true;if(this.isDistanceSurpassed){this.startDrag(initialEv);}};DragListener.prototype.handleDistanceSurpassed=function(ev){this.isDistanceSurpassed=true;if(this.isDelayEnded){this.startDrag(ev);}};DragListener.prototype.handleTouchMove=function(ev){if(this.isDragging&&this.shouldCancelTouchScroll){ev.preventDefault();}this.handleMove(ev);};DragListener.prototype.handleMouseMove=function(ev){this.handleMove(ev);};DragListener.prototype.handleTouchScroll=function(ev){if(!this.isDragging||this.scrollAlwaysKills){this.endInteraction(ev,true);}};DragListener.prototype.trigger=function(name){var args=[];for(var _i=1;_i<arguments.length;_i++){args[_i-1]=arguments[_i];}if(this.options[name]){this.options[name].apply(this,args);}if(this['_'+name]){this['_'+name].apply(this,args);}};DragListener.prototype.initAutoScroll=function(){var scrollEl=this.scrollEl;this.isAutoScroll=this.options.scroll&&scrollEl&&!scrollEl.is(window)&&!scrollEl.is(document);if(this.isAutoScroll){this.listenTo(scrollEl,'scroll',util_1.debounce(this.handleDebouncedScroll,100));}};DragListener.prototype.destroyAutoScroll=function(){this.endAutoScroll();if(this.isAutoScroll){this.stopListeningTo(this.scrollEl,'scroll');}};DragListener.prototype.computeScrollBounds=function(){if(this.isAutoScroll){this.scrollBounds=util_1.getOuterRect(this.scrollEl);}};DragListener.prototype.updateAutoScroll=function(ev){var sensitivity=this.scrollSensitivity;var bounds=this.scrollBounds;var topCloseness;var bottomCloseness;var leftCloseness;var rightCloseness;var topVel=0;var leftVel=0;if(bounds){topCloseness=(sensitivity-(util_1.getEvY(ev)-bounds.top))/sensitivity;bottomCloseness=(sensitivity-(bounds.bottom-util_1.getEvY(ev)))/sensitivity;leftCloseness=(sensitivity-(util_1.getEvX(ev)-bounds.left))/sensitivity;rightCloseness=(sensitivity-(bounds.right-util_1.getEvX(ev)))/sensitivity;if(topCloseness>=0&&topCloseness<=1){topVel=topCloseness*this.scrollSpeed*-1;}else if(bottomCloseness>=0&&bottomCloseness<=1){topVel=bottomCloseness*this.scrollSpeed;}if(leftCloseness>=0&&leftCloseness<=1){leftVel=leftCloseness*this.scrollSpeed*-1;}else if(rightCloseness>=0&&rightCloseness<=1){leftVel=rightCloseness*this.scrollSpeed;}}this.setScrollVel(topVel,leftVel);};DragListener.prototype.setScrollVel=function(topVel,leftVel){this.scrollTopVel=topVel;this.scrollLeftVel=leftVel;this.constrainScrollVel();if((this.scrollTopVel||this.scrollLeftVel)&&!this.scrollIntervalId){this.scrollIntervalId=setInterval(util_1.proxy(this,'scrollIntervalFunc'),this.scrollIntervalMs);}};DragListener.prototype.constrainScrollVel=function(){var el=this.scrollEl;if(this.scrollTopVel<0){if(el.scrollTop()<=0){this.scrollTopVel=0;}}else if(this.scrollTopVel>0){if(el.scrollTop()+el[0].clientHeight>=el[0].scrollHeight){this.scrollTopVel=0;}}if(this.scrollLeftVel<0){if(el.scrollLeft()<=0){this.scrollLeftVel=0;}}else if(this.scrollLeftVel>0){if(el.scrollLeft()+el[0].clientWidth>=el[0].scrollWidth){this.scrollLeftVel=0;}}};DragListener.prototype.scrollIntervalFunc=function(){var el=this.scrollEl;var frac=this.scrollIntervalMs/1000;if(this.scrollTopVel){el.scrollTop(el.scrollTop()+this.scrollTopVel*frac);}if(this.scrollLeftVel){el.scrollLeft(el.scrollLeft()+this.scrollLeftVel*frac);}this.constrainScrollVel();if(!this.scrollTopVel&&!this.scrollLeftVel){this.endAutoScroll();}};DragListener.prototype.endAutoScroll=function(){if(this.scrollIntervalId){clearInterval(this.scrollIntervalId);this.scrollIntervalId=null;this.handleScrollEnd();}};DragListener.prototype.handleDebouncedScroll=function(){if(!this.scrollIntervalId){this.handleScrollEnd();}};DragListener.prototype.handleScrollEnd=function(){};return DragListener;}();exports.default=DragListener;ListenerMixin_1.default.mixInto(DragListener);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var util_1=__webpack_require__(4);var Mixin_1=__webpack_require__(14);var DayTableMixin=function(_super){tslib_1.__extends(DayTableMixin,_super);function DayTableMixin(){return _super!==null&&_super.apply(this,arguments)||this;}DayTableMixin.prototype.updateDayTable=function(){var t=this;var view=t.view;var calendar=view.calendar;var date=calendar.msToUtcMoment(t.dateProfile.renderUnzonedRange.startMs,true);var end=calendar.msToUtcMoment(t.dateProfile.renderUnzonedRange.endMs,true);var dayIndex=-1;var dayIndices=[];var dayDates=[];var daysPerRow;var firstDay;var rowCnt;while(date.isBefore(end)){if(view.isHiddenDay(date)){dayIndices.push(dayIndex+0.5);}else{dayIndex++;dayIndices.push(dayIndex);dayDates.push(date.clone());}date.add(1,'days');}if(this.breakOnWeeks){firstDay=dayDates[0].day();for(daysPerRow=1;daysPerRow<dayDates.length;daysPerRow++){if(dayDates[daysPerRow].day()===firstDay){break;}}rowCnt=Math.ceil(dayDates.length/daysPerRow);}else{rowCnt=1;daysPerRow=dayDates.length;}this.dayDates=dayDates;this.dayIndices=dayIndices;this.daysPerRow=daysPerRow;this.rowCnt=rowCnt;this.updateDayTableCols();};DayTableMixin.prototype.updateDayTableCols=function(){this.colCnt=this.computeColCnt();this.colHeadFormat=this.opt('columnHeaderFormat')||this.opt('columnFormat')||this.computeColHeadFormat();};DayTableMixin.prototype.computeColCnt=function(){return this.daysPerRow;};DayTableMixin.prototype.getCellDate=function(row,col){return this.dayDates[this.getCellDayIndex(row,col)].clone();};DayTableMixin.prototype.getCellRange=function(row,col){var start=this.getCellDate(row,col);var end=start.clone().add(1,'days');return{start:start,end:end};};DayTableMixin.prototype.getCellDayIndex=function(row,col){return row*this.daysPerRow+this.getColDayIndex(col);};DayTableMixin.prototype.getColDayIndex=function(col){if(this.isRTL){return this.colCnt-1-col;}else{return col;}};DayTableMixin.prototype.getDateDayIndex=function(date){var dayIndices=this.dayIndices;var dayOffset=date.diff(this.dayDates[0],'days');if(dayOffset<0){return dayIndices[0]-1;}else if(dayOffset>=dayIndices.length){return dayIndices[dayIndices.length-1]+1;}else{return dayIndices[dayOffset];}};DayTableMixin.prototype.computeColHeadFormat=function(){if(this.rowCnt>1||this.colCnt>10){return'ddd';}else if(this.colCnt>1){return this.opt('dayOfMonthFormat');}else{return'dddd';}};DayTableMixin.prototype.sliceRangeByRow=function(unzonedRange){var daysPerRow=this.daysPerRow;var normalRange=this.view.computeDayRange(unzonedRange);var rangeFirst=this.getDateDayIndex(normalRange.start);var rangeLast=this.getDateDayIndex(normalRange.end.clone().subtract(1,'days'));var segs=[];var row;var rowFirst;var rowLast;var segFirst;var segLast;for(row=0;row<this.rowCnt;row++){rowFirst=row*daysPerRow;rowLast=rowFirst+daysPerRow-1;segFirst=Math.max(rangeFirst,rowFirst);segLast=Math.min(rangeLast,rowLast);segFirst=Math.ceil(segFirst);segLast=Math.floor(segLast);if(segFirst<=segLast){segs.push({row:row,firstRowDayIndex:segFirst-rowFirst,lastRowDayIndex:segLast-rowFirst,isStart:segFirst===rangeFirst,isEnd:segLast===rangeLast});}}return segs;};DayTableMixin.prototype.sliceRangeByDay=function(unzonedRange){var daysPerRow=this.daysPerRow;var normalRange=this.view.computeDayRange(unzonedRange);var rangeFirst=this.getDateDayIndex(normalRange.start);var rangeLast=this.getDateDayIndex(normalRange.end.clone().subtract(1,'days'));var segs=[];var row;var rowFirst;var rowLast;var i;var segFirst;var segLast;for(row=0;row<this.rowCnt;row++){rowFirst=row*daysPerRow;rowLast=rowFirst+daysPerRow-1;for(i=rowFirst;i<=rowLast;i++){segFirst=Math.max(rangeFirst,i);segLast=Math.min(rangeLast,i);segFirst=Math.ceil(segFirst);segLast=Math.floor(segLast);if(segFirst<=segLast){segs.push({row:row,firstRowDayIndex:segFirst-rowFirst,lastRowDayIndex:segLast-rowFirst,isStart:segFirst===rangeFirst,isEnd:segLast===rangeLast});}}}return segs;};DayTableMixin.prototype.renderHeadHtml=function(){var theme=this.view.calendar.theme;return''+'<div class="fc-row '+theme.getClass('headerRow')+'">'+'<table class="'+theme.getClass('tableGrid')+'">'+'<thead>'+this.renderHeadTrHtml()+'</thead>'+'</table>'+'</div>';};DayTableMixin.prototype.renderHeadIntroHtml=function(){return this.renderIntroHtml();};DayTableMixin.prototype.renderHeadTrHtml=function(){return''+'<tr>'+(this.isRTL?'':this.renderHeadIntroHtml())+this.renderHeadDateCellsHtml()+(this.isRTL?this.renderHeadIntroHtml():'')+'</tr>';};DayTableMixin.prototype.renderHeadDateCellsHtml=function(){var htmls=[];var col;var date;for(col=0;col<this.colCnt;col++){date=this.getCellDate(0,col);htmls.push(this.renderHeadDateCellHtml(date));}return htmls.join('');};DayTableMixin.prototype.renderHeadDateCellHtml=function(date,colspan,otherAttrs){var t=this;var view=t.view;var isDateValid=t.dateProfile.activeUnzonedRange.containsDate(date);var classNames=['fc-day-header',view.calendar.theme.getClass('widgetHeader')];var innerHtml;if(typeof t.opt('columnHeaderHtml')==='function'){innerHtml=t.opt('columnHeaderHtml')(date);}else if(typeof t.opt('columnHeaderText')==='function'){innerHtml=util_1.htmlEscape(t.opt('columnHeaderText')(date));}else{innerHtml=util_1.htmlEscape(date.format(t.colHeadFormat));}if(t.rowCnt===1){classNames=classNames.concat(t.getDayClasses(date,true));}else{classNames.push('fc-'+util_1.dayIDs[date.day()]);}return''+'<th class="'+classNames.join(' ')+'"'+((isDateValid&&t.rowCnt)===1?' data-date="'+date.format('YYYY-MM-DD')+'"':'')+(colspan>1?' colspan="'+colspan+'"':'')+(otherAttrs?' '+otherAttrs:'')+'>'+(isDateValid?view.buildGotoAnchorHtml({date:date,forceOff:t.rowCnt>1||t.colCnt===1},innerHtml):innerHtml)+'</th>';};DayTableMixin.prototype.renderBgTrHtml=function(row){return''+'<tr>'+(this.isRTL?'':this.renderBgIntroHtml(row))+this.renderBgCellsHtml(row)+(this.isRTL?this.renderBgIntroHtml(row):'')+'</tr>';};DayTableMixin.prototype.renderBgIntroHtml=function(row){return this.renderIntroHtml();};DayTableMixin.prototype.renderBgCellsHtml=function(row){var htmls=[];var col;var date;for(col=0;col<this.colCnt;col++){date=this.getCellDate(row,col);htmls.push(this.renderBgCellHtml(date));}return htmls.join('');};DayTableMixin.prototype.renderBgCellHtml=function(date,otherAttrs){var t=this;var view=t.view;var isDateValid=t.dateProfile.activeUnzonedRange.containsDate(date);var classes=t.getDayClasses(date);classes.unshift('fc-day',view.calendar.theme.getClass('widgetContent'));return'<td class="'+classes.join(' ')+'"'+(isDateValid?' data-date="'+date.format('YYYY-MM-DD')+'"':'')+(otherAttrs?' '+otherAttrs:'')+'></td>';};DayTableMixin.prototype.renderIntroHtml=function(){};DayTableMixin.prototype.bookendCells=function(trEl){var introHtml=this.renderIntroHtml();if(introHtml){if(this.isRTL){trEl.append(introHtml);}else{trEl.prepend(introHtml);}}};return DayTableMixin;}(Mixin_1.default);exports.default=DayTableMixin;},function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var BusinessHourRenderer=function(){function BusinessHourRenderer(component,fillRenderer){this.component=component;this.fillRenderer=fillRenderer;}BusinessHourRenderer.prototype.render=function(businessHourGenerator){var component=this.component;var unzonedRange=component._getDateProfile().activeUnzonedRange;var eventInstanceGroup=businessHourGenerator.buildEventInstanceGroup(component.hasAllDayBusinessHours,unzonedRange);var eventFootprints=eventInstanceGroup?component.eventRangesToEventFootprints(eventInstanceGroup.sliceRenderRanges(unzonedRange)):[];this.renderEventFootprints(eventFootprints);};BusinessHourRenderer.prototype.renderEventFootprints=function(eventFootprints){var segs=this.component.eventFootprintsToSegs(eventFootprints);this.renderSegs(segs);this.segs=segs;};BusinessHourRenderer.prototype.renderSegs=function(segs){if(this.fillRenderer){this.fillRenderer.renderSegs('businessHours',segs,{getClasses:function getClasses(seg){return['fc-nonbusiness','fc-bgevent'];}});}};BusinessHourRenderer.prototype.unrender=function(){if(this.fillRenderer){this.fillRenderer.unrender('businessHours');}this.segs=null;};BusinessHourRenderer.prototype.getSegs=function(){return this.segs||[];};return BusinessHourRenderer;}();exports.default=BusinessHourRenderer;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var util_1=__webpack_require__(4);var FillRenderer=function(){function FillRenderer(component){this.fillSegTag='div';this.component=component;this.elsByFill={};}FillRenderer.prototype.renderFootprint=function(type,componentFootprint,props){this.renderSegs(type,this.component.componentFootprintToSegs(componentFootprint),props);};FillRenderer.prototype.renderSegs=function(type,segs,props){var els;segs=this.buildSegEls(type,segs,props);els=this.attachSegEls(type,segs);if(els){this.reportEls(type,els);}return segs;};FillRenderer.prototype.unrender=function(type){var el=this.elsByFill[type];if(el){el.remove();delete this.elsByFill[type];}};FillRenderer.prototype.buildSegEls=function(type,segs,props){var _this=this;var html='';var renderedSegs=[];var i;if(segs.length){for(i=0;i<segs.length;i++){html+=this.buildSegHtml(type,segs[i],props);}$(html).each(function(i,node){var seg=segs[i];var el=$(node);if(props.filterEl){el=props.filterEl(seg,el);}if(el){el=$(el);if(el.is(_this.fillSegTag)){seg.el=el;renderedSegs.push(seg);}}});}return renderedSegs;};FillRenderer.prototype.buildSegHtml=function(type,seg,props){var classes=props.getClasses?props.getClasses(seg):[];var css=util_1.cssToStr(props.getCss?props.getCss(seg):{});return'<'+this.fillSegTag+(classes.length?' class="'+classes.join(' ')+'"':'')+(css?' style="'+css+'"':'')+' />';};FillRenderer.prototype.attachSegEls=function(type,segs){};FillRenderer.prototype.reportEls=function(type,nodes){if(this.elsByFill[type]){this.elsByFill[type]=this.elsByFill[type].add(nodes);}else{this.elsByFill[type]=$(nodes);}};return FillRenderer;}();exports.default=FillRenderer;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var SingleEventDef_1=__webpack_require__(13);var EventFootprint_1=__webpack_require__(36);var EventSource_1=__webpack_require__(6);var HelperRenderer=function(){function HelperRenderer(component,eventRenderer){this.view=component._getView();this.component=component;this.eventRenderer=eventRenderer;}HelperRenderer.prototype.renderComponentFootprint=function(componentFootprint){this.renderEventFootprints([this.fabricateEventFootprint(componentFootprint)]);};HelperRenderer.prototype.renderEventDraggingFootprints=function(eventFootprints,sourceSeg,isTouch){this.renderEventFootprints(eventFootprints,sourceSeg,'fc-dragging',isTouch?null:this.view.opt('dragOpacity'));};HelperRenderer.prototype.renderEventResizingFootprints=function(eventFootprints,sourceSeg,isTouch){this.renderEventFootprints(eventFootprints,sourceSeg,'fc-resizing');};HelperRenderer.prototype.renderEventFootprints=function(eventFootprints,sourceSeg,extraClassNames,opacity){var segs=this.component.eventFootprintsToSegs(eventFootprints);var classNames='fc-helper '+(extraClassNames||'');var i;segs=this.eventRenderer.renderFgSegEls(segs);for(i=0;i<segs.length;i++){segs[i].el.addClass(classNames);}if(opacity!=null){for(i=0;i<segs.length;i++){segs[i].el.css('opacity',opacity);}}this.helperEls=this.renderSegs(segs,sourceSeg);};HelperRenderer.prototype.renderSegs=function(segs,sourceSeg){};HelperRenderer.prototype.unrender=function(){if(this.helperEls){this.helperEls.remove();this.helperEls=null;}};HelperRenderer.prototype.fabricateEventFootprint=function(componentFootprint){var calendar=this.view.calendar;var eventDateProfile=calendar.footprintToDateProfile(componentFootprint);var dummyEvent=new SingleEventDef_1.default(new EventSource_1.default(calendar));var dummyInstance;dummyEvent.dateProfile=eventDateProfile;dummyInstance=dummyEvent.buildInstance();return new EventFootprint_1.default(componentFootprint,dummyEvent,dummyInstance);};return HelperRenderer;}();exports.default=HelperRenderer;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var GlobalEmitter_1=__webpack_require__(21);var Interaction_1=__webpack_require__(15);var EventPointing=function(_super){tslib_1.__extends(EventPointing,_super);function EventPointing(){return _super!==null&&_super.apply(this,arguments)||this;}EventPointing.prototype.bindToEl=function(el){var component=this.component;component.bindSegHandlerToEl(el,'click',this.handleClick.bind(this));component.bindSegHandlerToEl(el,'mouseenter',this.handleMouseover.bind(this));component.bindSegHandlerToEl(el,'mouseleave',this.handleMouseout.bind(this));};EventPointing.prototype.handleClick=function(seg,ev){var res=this.component.publiclyTrigger('eventClick',{context:seg.el[0],args:[seg.footprint.getEventLegacy(),ev,this.view]});if(res===false){ev.preventDefault();}};EventPointing.prototype.handleMouseover=function(seg,ev){if(!GlobalEmitter_1.default.get().shouldIgnoreMouse()&&!this.mousedOverSeg){this.mousedOverSeg=seg;if(this.view.isEventDefResizable(seg.footprint.eventDef)){seg.el.addClass('fc-allow-mouse-resize');}this.component.publiclyTrigger('eventMouseover',{context:seg.el[0],args:[seg.footprint.getEventLegacy(),ev,this.view]});}};EventPointing.prototype.handleMouseout=function(seg,ev){if(this.mousedOverSeg){this.mousedOverSeg=null;if(this.view.isEventDefResizable(seg.footprint.eventDef)){seg.el.removeClass('fc-allow-mouse-resize');}this.component.publiclyTrigger('eventMouseout',{context:seg.el[0],args:[seg.footprint.getEventLegacy(),ev||{},this.view]});}};EventPointing.prototype.end=function(){if(this.mousedOverSeg){this.handleMouseout(this.mousedOverSeg);}};return EventPointing;}(Interaction_1.default);exports.default=EventPointing;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var Mixin_1=__webpack_require__(14);var DateClicking_1=__webpack_require__(245);var DateSelecting_1=__webpack_require__(225);var EventPointing_1=__webpack_require__(59);var EventDragging_1=__webpack_require__(224);var EventResizing_1=__webpack_require__(223);var ExternalDropping_1=__webpack_require__(222);var StandardInteractionsMixin=function(_super){tslib_1.__extends(StandardInteractionsMixin,_super);function StandardInteractionsMixin(){return _super!==null&&_super.apply(this,arguments)||this;}return StandardInteractionsMixin;}(Mixin_1.default);exports.default=StandardInteractionsMixin;StandardInteractionsMixin.prototype.dateClickingClass=DateClicking_1.default;StandardInteractionsMixin.prototype.dateSelectingClass=DateSelecting_1.default;StandardInteractionsMixin.prototype.eventPointingClass=EventPointing_1.default;StandardInteractionsMixin.prototype.eventDraggingClass=EventDragging_1.default;StandardInteractionsMixin.prototype.eventResizingClass=EventResizing_1.default;StandardInteractionsMixin.prototype.externalDroppingClass=ExternalDropping_1.default;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var CoordCache_1=__webpack_require__(53);var Popover_1=__webpack_require__(249);var UnzonedRange_1=__webpack_require__(5);var ComponentFootprint_1=__webpack_require__(12);var EventFootprint_1=__webpack_require__(36);var BusinessHourRenderer_1=__webpack_require__(56);var StandardInteractionsMixin_1=__webpack_require__(60);var InteractiveDateComponent_1=__webpack_require__(40);var DayTableMixin_1=__webpack_require__(55);var DayGridEventRenderer_1=__webpack_require__(250);var DayGridHelperRenderer_1=__webpack_require__(251);var DayGridFillRenderer_1=__webpack_require__(252);var DayGrid=function(_super){tslib_1.__extends(DayGrid,_super);function DayGrid(view){var _this=_super.call(this,view)||this;_this.cellWeekNumbersVisible=false;_this.bottomCoordPadding=0;_this.isRigid=false;_this.hasAllDayBusinessHours=true;return _this;}DayGrid.prototype.componentFootprintToSegs=function(componentFootprint){var segs=this.sliceRangeByRow(componentFootprint.unzonedRange);var i;var seg;for(i=0;i<segs.length;i++){seg=segs[i];if(this.isRTL){seg.leftCol=this.daysPerRow-1-seg.lastRowDayIndex;seg.rightCol=this.daysPerRow-1-seg.firstRowDayIndex;}else{seg.leftCol=seg.firstRowDayIndex;seg.rightCol=seg.lastRowDayIndex;}}return segs;};DayGrid.prototype.renderDates=function(dateProfile){this.dateProfile=dateProfile;this.updateDayTable();this.renderGrid();};DayGrid.prototype.unrenderDates=function(){this.removeSegPopover();};DayGrid.prototype.renderGrid=function(){var view=this.view;var rowCnt=this.rowCnt;var colCnt=this.colCnt;var html='';var row;var col;if(this.headContainerEl){this.headContainerEl.html(this.renderHeadHtml());}for(row=0;row<rowCnt;row++){html+=this.renderDayRowHtml(row,this.isRigid);}this.el.html(html);this.rowEls=this.el.find('.fc-row');this.cellEls=this.el.find('.fc-day, .fc-disabled-day');this.rowCoordCache=new CoordCache_1.default({els:this.rowEls,isVertical:true});this.colCoordCache=new CoordCache_1.default({els:this.cellEls.slice(0,this.colCnt),isHorizontal:true});for(row=0;row<rowCnt;row++){for(col=0;col<colCnt;col++){this.publiclyTrigger('dayRender',{context:view,args:[this.getCellDate(row,col),this.getCellEl(row,col),view]});}}};DayGrid.prototype.renderDayRowHtml=function(row,isRigid){var theme=this.view.calendar.theme;var classes=['fc-row','fc-week',theme.getClass('dayRow')];if(isRigid){classes.push('fc-rigid');}return''+'<div class="'+classes.join(' ')+'">'+'<div class="fc-bg">'+'<table class="'+theme.getClass('tableGrid')+'">'+this.renderBgTrHtml(row)+'</table>'+'</div>'+'<div class="fc-content-skeleton">'+'<table>'+(this.getIsNumbersVisible()?'<thead>'+this.renderNumberTrHtml(row)+'</thead>':'')+'</table>'+'</div>'+'</div>';};DayGrid.prototype.getIsNumbersVisible=function(){return this.getIsDayNumbersVisible()||this.cellWeekNumbersVisible;};DayGrid.prototype.getIsDayNumbersVisible=function(){return this.rowCnt>1;};DayGrid.prototype.renderNumberTrHtml=function(row){return''+'<tr>'+(this.isRTL?'':this.renderNumberIntroHtml(row))+this.renderNumberCellsHtml(row)+(this.isRTL?this.renderNumberIntroHtml(row):'')+'</tr>';};DayGrid.prototype.renderNumberIntroHtml=function(row){return this.renderIntroHtml();};DayGrid.prototype.renderNumberCellsHtml=function(row){var htmls=[];var col;var date;for(col=0;col<this.colCnt;col++){date=this.getCellDate(row,col);htmls.push(this.renderNumberCellHtml(date));}return htmls.join('');};DayGrid.prototype.renderNumberCellHtml=function(date){var view=this.view;var html='';var isDateValid=this.dateProfile.activeUnzonedRange.containsDate(date);var isDayNumberVisible=this.getIsDayNumbersVisible()&&isDateValid;var classes;var weekCalcFirstDoW;if(!isDayNumberVisible&&!this.cellWeekNumbersVisible){return'<td/>';}classes=this.getDayClasses(date);classes.unshift('fc-day-top');if(this.cellWeekNumbersVisible){if(date._locale._fullCalendar_weekCalc==='ISO'){weekCalcFirstDoW=1;}else{weekCalcFirstDoW=date._locale.firstDayOfWeek();}}html+='<td class="'+classes.join(' ')+'"'+(isDateValid?' data-date="'+date.format()+'"':'')+'>';if(this.cellWeekNumbersVisible&&date.day()===weekCalcFirstDoW){html+=view.buildGotoAnchorHtml({date:date,type:'week'},{'class':'fc-week-number'},date.format('w'));}if(isDayNumberVisible){html+=view.buildGotoAnchorHtml(date,{'class':'fc-day-number'},date.format('D'));}html+='</td>';return html;};DayGrid.prototype.prepareHits=function(){this.colCoordCache.build();this.rowCoordCache.build();this.rowCoordCache.bottoms[this.rowCnt-1]+=this.bottomCoordPadding;};DayGrid.prototype.releaseHits=function(){this.colCoordCache.clear();this.rowCoordCache.clear();};DayGrid.prototype.queryHit=function(leftOffset,topOffset){if(this.colCoordCache.isLeftInBounds(leftOffset)&&this.rowCoordCache.isTopInBounds(topOffset)){var col=this.colCoordCache.getHorizontalIndex(leftOffset);var row=this.rowCoordCache.getVerticalIndex(topOffset);if(row!=null&&col!=null){return this.getCellHit(row,col);}}};DayGrid.prototype.getHitFootprint=function(hit){var range=this.getCellRange(hit.row,hit.col);return new ComponentFootprint_1.default(new UnzonedRange_1.default(range.start,range.end),true);};DayGrid.prototype.getHitEl=function(hit){return this.getCellEl(hit.row,hit.col);};DayGrid.prototype.getCellHit=function(row,col){return{row:row,col:col,component:this,left:this.colCoordCache.getLeftOffset(col),right:this.colCoordCache.getRightOffset(col),top:this.rowCoordCache.getTopOffset(row),bottom:this.rowCoordCache.getBottomOffset(row)};};DayGrid.prototype.getCellEl=function(row,col){return this.cellEls.eq(row*this.colCnt+col);};DayGrid.prototype.executeEventUnrender=function(){this.removeSegPopover();_super.prototype.executeEventUnrender.call(this);};DayGrid.prototype.getOwnEventSegs=function(){return _super.prototype.getOwnEventSegs.call(this).concat(this.popoverSegs||[]);};DayGrid.prototype.renderDrag=function(eventFootprints,seg,isTouch){var i;for(i=0;i<eventFootprints.length;i++){this.renderHighlight(eventFootprints[i].componentFootprint);}if(eventFootprints.length&&seg&&seg.component!==this){this.helperRenderer.renderEventDraggingFootprints(eventFootprints,seg,isTouch);return true;}};DayGrid.prototype.unrenderDrag=function(){this.unrenderHighlight();this.helperRenderer.unrender();};DayGrid.prototype.renderEventResize=function(eventFootprints,seg,isTouch){var i;for(i=0;i<eventFootprints.length;i++){this.renderHighlight(eventFootprints[i].componentFootprint);}this.helperRenderer.renderEventResizingFootprints(eventFootprints,seg,isTouch);};DayGrid.prototype.unrenderEventResize=function(){this.unrenderHighlight();this.helperRenderer.unrender();};DayGrid.prototype.removeSegPopover=function(){if(this.segPopover){this.segPopover.hide();}};DayGrid.prototype.limitRows=function(levelLimit){var rowStructs=this.eventRenderer.rowStructs||[];var row;var rowLevelLimit;for(row=0;row<rowStructs.length;row++){this.unlimitRow(row);if(!levelLimit){rowLevelLimit=false;}else if(typeof levelLimit==='number'){rowLevelLimit=levelLimit;}else{rowLevelLimit=this.computeRowLevelLimit(row);}if(rowLevelLimit!==false){this.limitRow(row,rowLevelLimit);}}};DayGrid.prototype.computeRowLevelLimit=function(row){var rowEl=this.rowEls.eq(row);var rowHeight=rowEl.height();var trEls=this.eventRenderer.rowStructs[row].tbodyEl.children();var i;var trEl;var trHeight;function iterInnerHeights(i,childNode){trHeight=Math.max(trHeight,$(childNode).outerHeight());}for(i=0;i<trEls.length;i++){trEl=trEls.eq(i).removeClass('fc-limited');trHeight=0;trEl.find('> td > :first-child').each(iterInnerHeights);if(trEl.position().top+trHeight>rowHeight){return i;}}return false;};DayGrid.prototype.limitRow=function(row,levelLimit){var _this=this;var rowStruct=this.eventRenderer.rowStructs[row];var moreNodes=[];var col=0;var levelSegs;var cellMatrix;var limitedNodes;var i;var seg;var segsBelow;var totalSegsBelow;var colSegsBelow;var td;var rowspan;var segMoreNodes;var j;var moreTd;var moreWrap;var moreLink;var emptyCellsUntil=function emptyCellsUntil(endCol){while(col<endCol){segsBelow=_this.getCellSegs(row,col,levelLimit);if(segsBelow.length){td=cellMatrix[levelLimit-1][col];moreLink=_this.renderMoreLink(row,col,segsBelow);moreWrap=$('<div/>').append(moreLink);td.append(moreWrap);moreNodes.push(moreWrap[0]);}col++;}};if(levelLimit&&levelLimit<rowStruct.segLevels.length){levelSegs=rowStruct.segLevels[levelLimit-1];cellMatrix=rowStruct.cellMatrix;limitedNodes=rowStruct.tbodyEl.children().slice(levelLimit).addClass('fc-limited').get();for(i=0;i<levelSegs.length;i++){seg=levelSegs[i];emptyCellsUntil(seg.leftCol);colSegsBelow=[];totalSegsBelow=0;while(col<=seg.rightCol){segsBelow=this.getCellSegs(row,col,levelLimit);colSegsBelow.push(segsBelow);totalSegsBelow+=segsBelow.length;col++;}if(totalSegsBelow){td=cellMatrix[levelLimit-1][seg.leftCol];rowspan=td.attr('rowspan')||1;segMoreNodes=[];for(j=0;j<colSegsBelow.length;j++){moreTd=$('<td class="fc-more-cell"/>').attr('rowspan',rowspan);segsBelow=colSegsBelow[j];moreLink=this.renderMoreLink(row,seg.leftCol+j,[seg].concat(segsBelow));moreWrap=$('<div/>').append(moreLink);moreTd.append(moreWrap);segMoreNodes.push(moreTd[0]);moreNodes.push(moreTd[0]);}td.addClass('fc-limited').after($(segMoreNodes));limitedNodes.push(td[0]);}}emptyCellsUntil(this.colCnt);rowStruct.moreEls=$(moreNodes);rowStruct.limitedEls=$(limitedNodes);}};DayGrid.prototype.unlimitRow=function(row){var rowStruct=this.eventRenderer.rowStructs[row];if(rowStruct.moreEls){rowStruct.moreEls.remove();rowStruct.moreEls=null;}if(rowStruct.limitedEls){rowStruct.limitedEls.removeClass('fc-limited');rowStruct.limitedEls=null;}};DayGrid.prototype.renderMoreLink=function(row,col,hiddenSegs){var _this=this;var view=this.view;return $('<a class="fc-more"/>').text(this.getMoreLinkText(hiddenSegs.length)).on('click',function(ev){var clickOption=_this.opt('eventLimitClick');var date=_this.getCellDate(row,col);var moreEl=$(ev.currentTarget);var dayEl=_this.getCellEl(row,col);var allSegs=_this.getCellSegs(row,col);var reslicedAllSegs=_this.resliceDaySegs(allSegs,date);var reslicedHiddenSegs=_this.resliceDaySegs(hiddenSegs,date);if(typeof clickOption==='function'){clickOption=_this.publiclyTrigger('eventLimitClick',{context:view,args:[{date:date.clone(),dayEl:dayEl,moreEl:moreEl,segs:reslicedAllSegs,hiddenSegs:reslicedHiddenSegs},ev,view]});}if(clickOption==='popover'){_this.showSegPopover(row,col,moreEl,reslicedAllSegs);}else if(typeof clickOption==='string'){view.calendar.zoomTo(date,clickOption);}});};DayGrid.prototype.showSegPopover=function(row,col,moreLink,segs){var _this=this;var view=this.view;var moreWrap=moreLink.parent();var topEl;var options;if(this.rowCnt===1){topEl=view.el;}else{topEl=this.rowEls.eq(row);}options={className:'fc-more-popover '+view.calendar.theme.getClass('popover'),content:this.renderSegPopoverContent(row,col,segs),parentEl:view.el,top:topEl.offset().top,autoHide:true,viewportConstrain:this.opt('popoverViewportConstrain'),hide:function hide(){if(_this.popoverSegs){_this.triggerBeforeEventSegsDestroyed(_this.popoverSegs);}_this.segPopover.removeElement();_this.segPopover=null;_this.popoverSegs=null;}};if(this.isRTL){options.right=moreWrap.offset().left+moreWrap.outerWidth()+1;}else{options.left=moreWrap.offset().left-1;}this.segPopover=new Popover_1.default(options);this.segPopover.show();this.bindAllSegHandlersToEl(this.segPopover.el);this.triggerAfterEventSegsRendered(segs);};DayGrid.prototype.renderSegPopoverContent=function(row,col,segs){var view=this.view;var theme=view.calendar.theme;var title=this.getCellDate(row,col).format(this.opt('dayPopoverFormat'));var content=$('<div class="fc-header '+theme.getClass('popoverHeader')+'">'+'<span class="fc-close '+theme.getIconClass('close')+'"></span>'+'<span class="fc-title">'+util_1.htmlEscape(title)+'</span>'+'<div class="fc-clear"/>'+'</div>'+'<div class="fc-body '+theme.getClass('popoverContent')+'">'+'<div class="fc-event-container"></div>'+'</div>');var segContainer=content.find('.fc-event-container');var i;segs=this.eventRenderer.renderFgSegEls(segs,true);this.popoverSegs=segs;for(i=0;i<segs.length;i++){this.hitsNeeded();segs[i].hit=this.getCellHit(row,col);this.hitsNotNeeded();segContainer.append(segs[i].el);}return content;};DayGrid.prototype.resliceDaySegs=function(segs,dayDate){var dayStart=dayDate.clone();var dayEnd=dayStart.clone().add(1,'days');var dayRange=new UnzonedRange_1.default(dayStart,dayEnd);var newSegs=[];var i;var seg;var slicedRange;for(i=0;i<segs.length;i++){seg=segs[i];slicedRange=seg.footprint.componentFootprint.unzonedRange.intersect(dayRange);if(slicedRange){newSegs.push($.extend({},seg,{footprint:new EventFootprint_1.default(new ComponentFootprint_1.default(slicedRange,seg.footprint.componentFootprint.isAllDay),seg.footprint.eventDef,seg.footprint.eventInstance),isStart:seg.isStart&&slicedRange.isStart,isEnd:seg.isEnd&&slicedRange.isEnd}));}}this.eventRenderer.sortEventSegs(newSegs);return newSegs;};DayGrid.prototype.getMoreLinkText=function(num){var opt=this.opt('eventLimitText');if(typeof opt==='function'){return opt(num);}else{return'+'+num+' '+opt;}};DayGrid.prototype.getCellSegs=function(row,col,startLevel){var segMatrix=this.eventRenderer.rowStructs[row].segMatrix;var level=startLevel||0;var segs=[];var seg;while(level<segMatrix.length){seg=segMatrix[level][col];if(seg){segs.push(seg);}level++;}return segs;};return DayGrid;}(InteractiveDateComponent_1.default);exports.default=DayGrid;DayGrid.prototype.eventRendererClass=DayGridEventRenderer_1.default;DayGrid.prototype.businessHourRendererClass=BusinessHourRenderer_1.default;DayGrid.prototype.helperRendererClass=DayGridHelperRenderer_1.default;DayGrid.prototype.fillRendererClass=DayGridFillRenderer_1.default;StandardInteractionsMixin_1.default.mixInto(DayGrid);DayTableMixin_1.default.mixInto(DayGrid);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var Scroller_1=__webpack_require__(39);var View_1=__webpack_require__(41);var BasicViewDateProfileGenerator_1=__webpack_require__(228);var DayGrid_1=__webpack_require__(61);var BasicView=function(_super){tslib_1.__extends(BasicView,_super);function BasicView(calendar,viewSpec){var _this=_super.call(this,calendar,viewSpec)||this;_this.dayGrid=_this.instantiateDayGrid();_this.dayGrid.isRigid=_this.hasRigidRows();if(_this.opt('weekNumbers')){if(_this.opt('weekNumbersWithinDays')){_this.dayGrid.cellWeekNumbersVisible=true;_this.dayGrid.colWeekNumbersVisible=false;}else{_this.dayGrid.cellWeekNumbersVisible=false;_this.dayGrid.colWeekNumbersVisible=true;}}_this.addChild(_this.dayGrid);_this.scroller=new Scroller_1.default({overflowX:'hidden',overflowY:'auto'});return _this;}BasicView.prototype.instantiateDayGrid=function(){var subclass=makeDayGridSubclass(this.dayGridClass);return new subclass(this);};BasicView.prototype.executeDateRender=function(dateProfile){this.dayGrid.breakOnWeeks=/year|month|week/.test(dateProfile.currentRangeUnit);_super.prototype.executeDateRender.call(this,dateProfile);};BasicView.prototype.renderSkeleton=function(){var dayGridContainerEl;var dayGridEl;this.el.addClass('fc-basic-view').html(this.renderSkeletonHtml());this.scroller.render();dayGridContainerEl=this.scroller.el.addClass('fc-day-grid-container');dayGridEl=$('<div class="fc-day-grid" />').appendTo(dayGridContainerEl);this.el.find('.fc-body > tr > td').append(dayGridContainerEl);this.dayGrid.headContainerEl=this.el.find('.fc-head-container');this.dayGrid.setElement(dayGridEl);};BasicView.prototype.unrenderSkeleton=function(){this.dayGrid.removeElement();this.scroller.destroy();};BasicView.prototype.renderSkeletonHtml=function(){var theme=this.calendar.theme;return''+'<table class="'+theme.getClass('tableGrid')+'">'+(this.opt('columnHeader')?'<thead class="fc-head">'+'<tr>'+'<td class="fc-head-container '+theme.getClass('widgetHeader')+'">&nbsp;</td>'+'</tr>'+'</thead>':'')+'<tbody class="fc-body">'+'<tr>'+'<td class="'+theme.getClass('widgetContent')+'"></td>'+'</tr>'+'</tbody>'+'</table>';};BasicView.prototype.weekNumberStyleAttr=function(){if(this.weekNumberWidth!=null){return'style="width:'+this.weekNumberWidth+'px"';}return'';};BasicView.prototype.hasRigidRows=function(){var eventLimit=this.opt('eventLimit');return eventLimit&&typeof eventLimit!=='number';};BasicView.prototype.updateSize=function(totalHeight,isAuto,isResize){var eventLimit=this.opt('eventLimit');var headRowEl=this.dayGrid.headContainerEl.find('.fc-row');var scrollerHeight;var scrollbarWidths;if(!this.dayGrid.rowEls){if(!isAuto){scrollerHeight=this.computeScrollerHeight(totalHeight);this.scroller.setHeight(scrollerHeight);}return;}_super.prototype.updateSize.call(this,totalHeight,isAuto,isResize);if(this.dayGrid.colWeekNumbersVisible){this.weekNumberWidth=util_1.matchCellWidths(this.el.find('.fc-week-number'));}this.scroller.clear();util_1.uncompensateScroll(headRowEl);this.dayGrid.removeSegPopover();if(eventLimit&&typeof eventLimit==='number'){this.dayGrid.limitRows(eventLimit);}scrollerHeight=this.computeScrollerHeight(totalHeight);this.setGridHeight(scrollerHeight,isAuto);if(eventLimit&&typeof eventLimit!=='number'){this.dayGrid.limitRows(eventLimit);}if(!isAuto){this.scroller.setHeight(scrollerHeight);scrollbarWidths=this.scroller.getScrollbarWidths();if(scrollbarWidths.left||scrollbarWidths.right){util_1.compensateScroll(headRowEl,scrollbarWidths);scrollerHeight=this.computeScrollerHeight(totalHeight);this.scroller.setHeight(scrollerHeight);}this.scroller.lockOverflow(scrollbarWidths);}};BasicView.prototype.computeScrollerHeight=function(totalHeight){return totalHeight-util_1.subtractInnerElHeight(this.el,this.scroller.el);};BasicView.prototype.setGridHeight=function(height,isAuto){if(isAuto){util_1.undistributeHeight(this.dayGrid.rowEls);}else{util_1.distributeHeight(this.dayGrid.rowEls,height,true);}};BasicView.prototype.computeInitialDateScroll=function(){return{top:0};};BasicView.prototype.queryDateScroll=function(){return{top:this.scroller.getScrollTop()};};BasicView.prototype.applyDateScroll=function(scroll){if(scroll.top!==undefined){this.scroller.setScrollTop(scroll.top);}};return BasicView;}(View_1.default);exports.default=BasicView;BasicView.prototype.dateProfileGeneratorClass=BasicViewDateProfileGenerator_1.default;BasicView.prototype.dayGridClass=DayGrid_1.default;function makeDayGridSubclass(SuperClass){return function(_super){tslib_1.__extends(SubClass,_super);function SubClass(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.colWeekNumbersVisible=false;return _this;}SubClass.prototype.renderHeadIntroHtml=function(){var view=this.view;if(this.colWeekNumbersVisible){return''+'<th class="fc-week-number '+view.calendar.theme.getClass('widgetHeader')+'" '+view.weekNumberStyleAttr()+'>'+'<span>'+util_1.htmlEscape(this.opt('weekNumberTitle'))+'</span>'+'</th>';}return'';};SubClass.prototype.renderNumberIntroHtml=function(row){var view=this.view;var weekStart=this.getCellDate(row,0);if(this.colWeekNumbersVisible){return''+'<td class="fc-week-number" '+view.weekNumberStyleAttr()+'>'+view.buildGotoAnchorHtml({date:weekStart,type:'week',forceOff:this.colCnt===1},weekStart.format('w'))+'</td>';}return'';};SubClass.prototype.renderBgIntroHtml=function(){var view=this.view;if(this.colWeekNumbersVisible){return'<td class="fc-week-number '+view.calendar.theme.getClass('widgetContent')+'" '+view.weekNumberStyleAttr()+'></td>';}return'';};SubClass.prototype.renderIntroHtml=function(){var view=this.view;if(this.colWeekNumbersVisible){return'<td class="fc-week-number" '+view.weekNumberStyleAttr()+'></td>';}return'';};SubClass.prototype.getIsNumbersVisible=function(){return DayGrid_1.default.prototype.getIsNumbersVisible.apply(this,arguments)||this.colWeekNumbersVisible;};return SubClass;}(SuperClass);}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var UnzonedRange_1=__webpack_require__(5);var ComponentFootprint_1=__webpack_require__(12);var EventDefParser_1=__webpack_require__(49);var EventSource_1=__webpack_require__(6);var util_1=__webpack_require__(35);var Constraints=function(){function Constraints(eventManager,_calendar){this.eventManager=eventManager;this._calendar=_calendar;}Constraints.prototype.opt=function(name){return this._calendar.opt(name);};Constraints.prototype.isEventInstanceGroupAllowed=function(eventInstanceGroup){var eventDef=eventInstanceGroup.getEventDef();var eventFootprints=this.eventRangesToEventFootprints(eventInstanceGroup.getAllEventRanges());var i;var peerEventInstances=this.getPeerEventInstances(eventDef);var peerEventRanges=peerEventInstances.map(util_1.eventInstanceToEventRange);var peerEventFootprints=this.eventRangesToEventFootprints(peerEventRanges);var constraintVal=eventDef.getConstraint();var overlapVal=eventDef.getOverlap();var eventAllowFunc=this.opt('eventAllow');for(i=0;i<eventFootprints.length;i++){if(!this.isFootprintAllowed(eventFootprints[i].componentFootprint,peerEventFootprints,constraintVal,overlapVal,eventFootprints[i].eventInstance)){return false;}}if(eventAllowFunc){for(i=0;i<eventFootprints.length;i++){if(eventAllowFunc(eventFootprints[i].componentFootprint.toLegacy(this._calendar),eventFootprints[i].getEventLegacy())===false){return false;}}}return true;};Constraints.prototype.getPeerEventInstances=function(eventDef){return this.eventManager.getEventInstancesWithoutId(eventDef.id);};Constraints.prototype.isSelectionFootprintAllowed=function(componentFootprint){var peerEventInstances=this.eventManager.getEventInstances();var peerEventRanges=peerEventInstances.map(util_1.eventInstanceToEventRange);var peerEventFootprints=this.eventRangesToEventFootprints(peerEventRanges);var selectAllowFunc;if(this.isFootprintAllowed(componentFootprint,peerEventFootprints,this.opt('selectConstraint'),this.opt('selectOverlap'))){selectAllowFunc=this.opt('selectAllow');if(selectAllowFunc){return selectAllowFunc(componentFootprint.toLegacy(this._calendar))!==false;}else{return true;}}return false;};Constraints.prototype.isFootprintAllowed=function(componentFootprint,peerEventFootprints,constraintVal,overlapVal,subjectEventInstance){var constraintFootprints;var overlapEventFootprints;if(constraintVal!=null){constraintFootprints=this.constraintValToFootprints(constraintVal,componentFootprint.isAllDay);if(!this.isFootprintWithinConstraints(componentFootprint,constraintFootprints)){return false;}}overlapEventFootprints=this.collectOverlapEventFootprints(peerEventFootprints,componentFootprint);if(overlapVal===false){if(overlapEventFootprints.length){return false;}}else if(typeof overlapVal==='function'){if(!isOverlapsAllowedByFunc(overlapEventFootprints,overlapVal,subjectEventInstance)){return false;}}if(subjectEventInstance){if(!isOverlapEventInstancesAllowed(overlapEventFootprints,subjectEventInstance)){return false;}}return true;};Constraints.prototype.isFootprintWithinConstraints=function(componentFootprint,constraintFootprints){var i;for(i=0;i<constraintFootprints.length;i++){if(this.footprintContainsFootprint(constraintFootprints[i],componentFootprint)){return true;}}return false;};Constraints.prototype.constraintValToFootprints=function(constraintVal,isAllDay){var eventInstances;if(constraintVal==='businessHours'){return this.buildCurrentBusinessFootprints(isAllDay);}else if((typeof constraintVal==='undefined'?'undefined':Object(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__["default"])(constraintVal))==='object'){eventInstances=this.parseEventDefToInstances(constraintVal);if(!eventInstances){return this.parseFootprints(constraintVal);}else{return this.eventInstancesToFootprints(eventInstances);}}else if(constraintVal!=null){eventInstances=this.eventManager.getEventInstancesWithId(constraintVal);return this.eventInstancesToFootprints(eventInstances);}};Constraints.prototype.buildCurrentBusinessFootprints=function(isAllDay){var view=this._calendar.view;var businessHourGenerator=view.get('businessHourGenerator');var unzonedRange=view.dateProfile.activeUnzonedRange;var eventInstanceGroup=businessHourGenerator.buildEventInstanceGroup(isAllDay,unzonedRange);if(eventInstanceGroup){return this.eventInstancesToFootprints(eventInstanceGroup.eventInstances);}else{return[];}};Constraints.prototype.eventInstancesToFootprints=function(eventInstances){var eventRanges=eventInstances.map(util_1.eventInstanceToEventRange);var eventFootprints=this.eventRangesToEventFootprints(eventRanges);return eventFootprints.map(util_1.eventFootprintToComponentFootprint);};Constraints.prototype.collectOverlapEventFootprints=function(peerEventFootprints,targetFootprint){var overlapEventFootprints=[];var i;for(i=0;i<peerEventFootprints.length;i++){if(this.footprintsIntersect(targetFootprint,peerEventFootprints[i].componentFootprint)){overlapEventFootprints.push(peerEventFootprints[i]);}}return overlapEventFootprints;};Constraints.prototype.parseEventDefToInstances=function(eventInput){var eventManager=this.eventManager;var eventDef=EventDefParser_1.default.parse(eventInput,new EventSource_1.default(this._calendar));if(!eventDef){return false;}return eventDef.buildInstances(eventManager.currentPeriod.unzonedRange);};Constraints.prototype.eventRangesToEventFootprints=function(eventRanges){var i;var eventFootprints=[];for(i=0;i<eventRanges.length;i++){eventFootprints.push.apply(eventFootprints,this.eventRangeToEventFootprints(eventRanges[i]));}return eventFootprints;};Constraints.prototype.eventRangeToEventFootprints=function(eventRange){return[util_1.eventRangeToEventFootprint(eventRange)];};Constraints.prototype.parseFootprints=function(rawInput){var start;var end;if(rawInput.start){start=this._calendar.moment(rawInput.start);if(!start.isValid()){start=null;}}if(rawInput.end){end=this._calendar.moment(rawInput.end);if(!end.isValid()){end=null;}}return[new ComponentFootprint_1.default(new UnzonedRange_1.default(start,end),start&&!start.hasTime()||end&&!end.hasTime())];};Constraints.prototype.footprintContainsFootprint=function(outerFootprint,innerFootprint){return outerFootprint.unzonedRange.containsRange(innerFootprint.unzonedRange);};Constraints.prototype.footprintsIntersect=function(footprint0,footprint1){return footprint0.unzonedRange.intersectsWith(footprint1.unzonedRange);};return Constraints;}();exports.default=Constraints;function isOverlapsAllowedByFunc(overlapEventFootprints,overlapFunc,subjectEventInstance){var i;for(i=0;i<overlapEventFootprints.length;i++){if(!overlapFunc(overlapEventFootprints[i].eventInstance.toLegacy(),subjectEventInstance?subjectEventInstance.toLegacy():null)){return false;}}return true;}function isOverlapEventInstancesAllowed(overlapEventFootprints,subjectEventInstance){var subjectLegacyInstance=subjectEventInstance.toLegacy();var i;var overlapEventInstance;var overlapEventDef;var overlapVal;for(i=0;i<overlapEventFootprints.length;i++){overlapEventInstance=overlapEventFootprints[i].eventInstance;overlapEventDef=overlapEventInstance.def;overlapVal=overlapEventDef.getOverlap();if(overlapVal===false){return false;}else if(typeof overlapVal==='function'){if(!overlapVal(overlapEventInstance.toLegacy(),subjectLegacyInstance)){return false;}}}return true;}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var util_1=__webpack_require__(4);var Mixin_1=__webpack_require__(14);var ParsableModelMixin=function(_super){tslib_1.__extends(ParsableModelMixin,_super);function ParsableModelMixin(){return _super!==null&&_super.apply(this,arguments)||this;}ParsableModelMixin.defineStandardProps=function(propDefs){var proto=this.prototype;if(!proto.hasOwnProperty('standardPropMap')){proto.standardPropMap=__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_create___default()(proto.standardPropMap);}util_1.copyOwnProps(propDefs,proto.standardPropMap);};ParsableModelMixin.copyVerbatimStandardProps=function(src,dest){var map=this.prototype.standardPropMap;var propName;for(propName in map){if(src[propName]!=null&&map[propName]===true){dest[propName]=src[propName];}}};ParsableModelMixin.prototype.applyProps=function(rawProps){var standardPropMap=this.standardPropMap;var manualProps={};var miscProps={};var propName;for(propName in rawProps){if(standardPropMap[propName]===true){this[propName]=rawProps[propName];}else if(standardPropMap[propName]===false){manualProps[propName]=rawProps[propName];}else{miscProps[propName]=rawProps[propName];}}this.applyMiscProps(miscProps);return this.applyManualStandardProps(manualProps);};ParsableModelMixin.prototype.applyManualStandardProps=function(rawProps){return true;};ParsableModelMixin.prototype.applyMiscProps=function(rawProps){};ParsableModelMixin.prototype.isStandardProp=function(propName){return propName in this.standardPropMap;};return ParsableModelMixin;}(Mixin_1.default);exports.default=ParsableModelMixin;ParsableModelMixin.prototype.standardPropMap={};},function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var EventInstance=function(){function EventInstance(def,dateProfile){this.def=def;this.dateProfile=dateProfile;}EventInstance.prototype.toLegacy=function(){var dateProfile=this.dateProfile;var obj=this.def.toLegacy();obj.start=dateProfile.start.clone();obj.end=dateProfile.end?dateProfile.end.clone():null;return obj;};return EventInstance;}();exports.default=EventInstance;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var moment=__webpack_require__(0);var EventDef_1=__webpack_require__(34);var EventInstance_1=__webpack_require__(209);var EventDateProfile_1=__webpack_require__(17);var RecurringEventDef=function(_super){tslib_1.__extends(RecurringEventDef,_super);function RecurringEventDef(){return _super!==null&&_super.apply(this,arguments)||this;}RecurringEventDef.prototype.isAllDay=function(){return!this.startTime&&!this.endTime;};RecurringEventDef.prototype.buildInstances=function(unzonedRange){var calendar=this.source.calendar;var unzonedDate=unzonedRange.getStart();var unzonedEnd=unzonedRange.getEnd();var zonedDayStart;var instanceStart;var instanceEnd;var instances=[];while(unzonedDate.isBefore(unzonedEnd)){if(!this.dowHash||this.dowHash[unzonedDate.day()]){zonedDayStart=calendar.applyTimezone(unzonedDate);instanceStart=zonedDayStart.clone();instanceEnd=null;if(this.startTime){instanceStart.time(this.startTime);}else{instanceStart.stripTime();}if(this.endTime){instanceEnd=zonedDayStart.clone().time(this.endTime);}instances.push(new EventInstance_1.default(this,new EventDateProfile_1.default(instanceStart,instanceEnd,calendar)));}unzonedDate.add(1,'days');}return instances;};RecurringEventDef.prototype.setDow=function(dowNumbers){if(!this.dowHash){this.dowHash={};}for(var i=0;i<dowNumbers.length;i++){this.dowHash[dowNumbers[i]]=true;}};RecurringEventDef.prototype.clone=function(){var def=_super.prototype.clone.call(this);if(def.startTime){def.startTime=moment.duration(this.startTime);}if(def.endTime){def.endTime=moment.duration(this.endTime);}if(this.dowHash){def.dowHash=$.extend({},this.dowHash);}return def;};return RecurringEventDef;}(EventDef_1.default);exports.default=RecurringEventDef;RecurringEventDef.prototype.applyProps=function(rawProps){var superSuccess=EventDef_1.default.prototype.applyProps.call(this,rawProps);if(rawProps.start){this.startTime=moment.duration(rawProps.start);}if(rawProps.end){this.endTime=moment.duration(rawProps.end);}if(rawProps.dow){this.setDow(rawProps.dow);}return superSuccess;};RecurringEventDef.defineStandardProps({start:false,end:false,dow:false});},function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var EventRange=function(){function EventRange(unzonedRange,eventDef,eventInstance){this.unzonedRange=unzonedRange;this.eventDef=eventDef;if(eventInstance){this.eventInstance=eventInstance;}}return EventRange;}();exports.default=EventRange;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var util_1=__webpack_require__(35);var EventInstanceGroup_1=__webpack_require__(18);var RecurringEventDef_1=__webpack_require__(210);var EventSource_1=__webpack_require__(6);var BUSINESS_HOUR_EVENT_DEFAULTS={start:'09:00',end:'17:00',dow:[1,2,3,4,5],rendering:'inverse-background'};var BusinessHourGenerator=function(){function BusinessHourGenerator(rawComplexDef,calendar){this.rawComplexDef=rawComplexDef;this.calendar=calendar;}BusinessHourGenerator.prototype.buildEventInstanceGroup=function(isAllDay,unzonedRange){var eventDefs=this.buildEventDefs(isAllDay);var eventInstanceGroup;if(eventDefs.length){eventInstanceGroup=new EventInstanceGroup_1.default(util_1.eventDefsToEventInstances(eventDefs,unzonedRange));eventInstanceGroup.explicitEventDef=eventDefs[0];return eventInstanceGroup;}};BusinessHourGenerator.prototype.buildEventDefs=function(isAllDay){var rawComplexDef=this.rawComplexDef;var rawDefs=[];var requireDow=false;var i;var defs=[];if(rawComplexDef===true){rawDefs=[{}];}else if($.isPlainObject(rawComplexDef)){rawDefs=[rawComplexDef];}else if($.isArray(rawComplexDef)){rawDefs=rawComplexDef;requireDow=true;}for(i=0;i<rawDefs.length;i++){if(!requireDow||rawDefs[i].dow){defs.push(this.buildEventDef(isAllDay,rawDefs[i]));}}return defs;};BusinessHourGenerator.prototype.buildEventDef=function(isAllDay,rawDef){var fullRawDef=$.extend({},BUSINESS_HOUR_EVENT_DEFAULTS,rawDef);if(isAllDay){fullRawDef.start=null;fullRawDef.end=null;}return RecurringEventDef_1.default.parse(fullRawDef,new EventSource_1.default(this.calendar));};return BusinessHourGenerator;}();exports.default=BusinessHourGenerator;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var Theme_1=__webpack_require__(19);var StandardTheme=function(_super){tslib_1.__extends(StandardTheme,_super);function StandardTheme(){return _super!==null&&_super.apply(this,arguments)||this;}return StandardTheme;}(Theme_1.default);exports.default=StandardTheme;StandardTheme.prototype.classes={widget:'fc-unthemed',widgetHeader:'fc-widget-header',widgetContent:'fc-widget-content',buttonGroup:'fc-button-group',button:'fc-button',cornerLeft:'fc-corner-left',cornerRight:'fc-corner-right',stateDefault:'fc-state-default',stateActive:'fc-state-active',stateDisabled:'fc-state-disabled',stateHover:'fc-state-hover',stateDown:'fc-state-down',popoverHeader:'fc-widget-header',popoverContent:'fc-widget-content',headerRow:'fc-widget-header',dayRow:'fc-widget-content',listView:'fc-widget-content'};StandardTheme.prototype.baseIconClass='fc-icon';StandardTheme.prototype.iconClasses={close:'fc-icon-x',prev:'fc-icon-left-single-arrow',next:'fc-icon-right-single-arrow',prevYear:'fc-icon-left-double-arrow',nextYear:'fc-icon-right-double-arrow'};StandardTheme.prototype.iconOverrideOption='buttonIcons';StandardTheme.prototype.iconOverrideCustomButtonOption='icon';StandardTheme.prototype.iconOverridePrefix='fc-icon-';},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var Theme_1=__webpack_require__(19);var JqueryUiTheme=function(_super){tslib_1.__extends(JqueryUiTheme,_super);function JqueryUiTheme(){return _super!==null&&_super.apply(this,arguments)||this;}return JqueryUiTheme;}(Theme_1.default);exports.default=JqueryUiTheme;JqueryUiTheme.prototype.classes={widget:'ui-widget',widgetHeader:'ui-widget-header',widgetContent:'ui-widget-content',buttonGroup:'fc-button-group',button:'ui-button',cornerLeft:'ui-corner-left',cornerRight:'ui-corner-right',stateDefault:'ui-state-default',stateActive:'ui-state-active',stateDisabled:'ui-state-disabled',stateHover:'ui-state-hover',stateDown:'ui-state-down',today:'ui-state-highlight',popoverHeader:'ui-widget-header',popoverContent:'ui-widget-content',headerRow:'ui-widget-header',dayRow:'ui-widget-content',listView:'ui-widget-content'};JqueryUiTheme.prototype.baseIconClass='ui-icon';JqueryUiTheme.prototype.iconClasses={close:'ui-icon-closethick',prev:'ui-icon-circle-triangle-w',next:'ui-icon-circle-triangle-e',prevYear:'ui-icon-seek-prev',nextYear:'ui-icon-seek-next'};JqueryUiTheme.prototype.iconOverrideOption='themeButtonIcons';JqueryUiTheme.prototype.iconOverrideCustomButtonOption='themeIcon';JqueryUiTheme.prototype.iconOverridePrefix='ui-icon-';},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var Promise_1=__webpack_require__(20);var EventSource_1=__webpack_require__(6);var FuncEventSource=function(_super){tslib_1.__extends(FuncEventSource,_super);function FuncEventSource(){return _super!==null&&_super.apply(this,arguments)||this;}FuncEventSource.parse=function(rawInput,calendar){var rawProps;if($.isFunction(rawInput.events)){rawProps=rawInput;}else if($.isFunction(rawInput)){rawProps={events:rawInput};}if(rawProps){return EventSource_1.default.parse.call(this,rawProps,calendar);}return false;};FuncEventSource.prototype.fetch=function(start,end,timezone){var _this=this;this.calendar.pushLoading();return Promise_1.default.construct(function(onResolve){_this.func.call(_this.calendar,start.clone(),end.clone(),timezone,function(rawEventDefs){_this.calendar.popLoading();onResolve(_this.parseEventDefs(rawEventDefs));});});};FuncEventSource.prototype.getPrimitive=function(){return this.func;};FuncEventSource.prototype.applyManualStandardProps=function(rawProps){var superSuccess=_super.prototype.applyManualStandardProps.call(this,rawProps);this.func=rawProps.events;return superSuccess;};return FuncEventSource;}(EventSource_1.default);exports.default=FuncEventSource;FuncEventSource.defineStandardProps({events:false});},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var Promise_1=__webpack_require__(20);var EventSource_1=__webpack_require__(6);var JsonFeedEventSource=function(_super){tslib_1.__extends(JsonFeedEventSource,_super);function JsonFeedEventSource(){return _super!==null&&_super.apply(this,arguments)||this;}JsonFeedEventSource.parse=function(rawInput,calendar){var rawProps;if(typeof rawInput.url==='string'){rawProps=rawInput;}else if(typeof rawInput==='string'){rawProps={url:rawInput};}if(rawProps){return EventSource_1.default.parse.call(this,rawProps,calendar);}return false;};JsonFeedEventSource.prototype.fetch=function(start,end,timezone){var _this=this;var ajaxSettings=this.ajaxSettings;var onSuccess=ajaxSettings.success;var onError=ajaxSettings.error;var requestParams=this.buildRequestParams(start,end,timezone);this.calendar.pushLoading();return Promise_1.default.construct(function(onResolve,onReject){$.ajax($.extend({},JsonFeedEventSource.AJAX_DEFAULTS,ajaxSettings,{url:_this.url,data:requestParams,success:function success(rawEventDefs,status,xhr){var callbackRes;_this.calendar.popLoading();if(rawEventDefs){callbackRes=util_1.applyAll(onSuccess,_this,[rawEventDefs,status,xhr]);if($.isArray(callbackRes)){rawEventDefs=callbackRes;}onResolve(_this.parseEventDefs(rawEventDefs));}else{onReject();}},error:function error(xhr,statusText,errorThrown){_this.calendar.popLoading();util_1.applyAll(onError,_this,[xhr,statusText,errorThrown]);onReject();}}));});};JsonFeedEventSource.prototype.buildRequestParams=function(start,end,timezone){var calendar=this.calendar;var ajaxSettings=this.ajaxSettings;var startParam;var endParam;var timezoneParam;var customRequestParams;var params={};startParam=this.startParam;if(startParam==null){startParam=calendar.opt('startParam');}endParam=this.endParam;if(endParam==null){endParam=calendar.opt('endParam');}timezoneParam=this.timezoneParam;if(timezoneParam==null){timezoneParam=calendar.opt('timezoneParam');}if($.isFunction(ajaxSettings.data)){customRequestParams=ajaxSettings.data();}else{customRequestParams=ajaxSettings.data||{};}$.extend(params,customRequestParams);params[startParam]=start.format();params[endParam]=end.format();if(timezone&&timezone!=='local'){params[timezoneParam]=timezone;}return params;};JsonFeedEventSource.prototype.getPrimitive=function(){return this.url;};JsonFeedEventSource.prototype.applyMiscProps=function(rawProps){this.ajaxSettings=rawProps;};JsonFeedEventSource.AJAX_DEFAULTS={dataType:'json',cache:false};return JsonFeedEventSource;}(EventSource_1.default);exports.default=JsonFeedEventSource;JsonFeedEventSource.defineStandardProps({url:true,startParam:true,endParam:true,timezoneParam:true});},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var EmitterMixin_1=__webpack_require__(11);var TaskQueue=function(){function TaskQueue(){this.q=[];this.isPaused=false;this.isRunning=false;}TaskQueue.prototype.queue=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}this.q.push.apply(this.q,args);this.tryStart();};TaskQueue.prototype.pause=function(){this.isPaused=true;};TaskQueue.prototype.resume=function(){this.isPaused=false;this.tryStart();};TaskQueue.prototype.getIsIdle=function(){return!this.isRunning&&!this.isPaused;};TaskQueue.prototype.tryStart=function(){if(!this.isRunning&&this.canRunNext()){this.isRunning=true;this.trigger('start');this.runRemaining();}};TaskQueue.prototype.canRunNext=function(){return!this.isPaused&&this.q.length;};TaskQueue.prototype.runRemaining=function(){var _this=this;var task;var res;do{task=this.q.shift();res=this.runTask(task);if(res&&res.then){res.then(function(){if(_this.canRunNext()){_this.runRemaining();}});return;}}while(this.canRunNext());this.trigger('stop');this.isRunning=false;this.tryStart();};TaskQueue.prototype.runTask=function(task){return task();};return TaskQueue;}();exports.default=TaskQueue;EmitterMixin_1.default.mixInto(TaskQueue);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var TaskQueue_1=__webpack_require__(217);var RenderQueue=function(_super){tslib_1.__extends(RenderQueue,_super);function RenderQueue(waitsByNamespace){var _this=_super.call(this)||this;_this.waitsByNamespace=waitsByNamespace||{};return _this;}RenderQueue.prototype.queue=function(taskFunc,namespace,type){var task={func:taskFunc,namespace:namespace,type:type};var waitMs;if(namespace){waitMs=this.waitsByNamespace[namespace];}if(this.waitNamespace){if(namespace===this.waitNamespace&&waitMs!=null){this.delayWait(waitMs);}else{this.clearWait();this.tryStart();}}if(this.compoundTask(task)){if(!this.waitNamespace&&waitMs!=null){this.startWait(namespace,waitMs);}else{this.tryStart();}}};RenderQueue.prototype.startWait=function(namespace,waitMs){this.waitNamespace=namespace;this.spawnWait(waitMs);};RenderQueue.prototype.delayWait=function(waitMs){clearTimeout(this.waitId);this.spawnWait(waitMs);};RenderQueue.prototype.spawnWait=function(waitMs){var _this=this;this.waitId=setTimeout(function(){_this.waitNamespace=null;_this.tryStart();},waitMs);};RenderQueue.prototype.clearWait=function(){if(this.waitNamespace){clearTimeout(this.waitId);this.waitId=null;this.waitNamespace=null;}};RenderQueue.prototype.canRunNext=function(){if(!_super.prototype.canRunNext.call(this)){return false;}if(this.waitNamespace){var q=this.q;for(var i=0;i<q.length;i++){if(q[i].namespace!==this.waitNamespace){return true;}}return false;}return true;};RenderQueue.prototype.runTask=function(task){task.func();};RenderQueue.prototype.compoundTask=function(newTask){var q=this.q;var shouldAppend=true;var i;var task;if(newTask.namespace&&newTask.type==='destroy'){for(i=q.length-1;i>=0;i--){task=q[i];switch(task.type){case'init':shouldAppend=false;case'add':case'remove':q.splice(i,1);}}}if(shouldAppend){q.push(newTask);}return shouldAppend;};return RenderQueue;}(TaskQueue_1.default);exports.default=RenderQueue;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var moment=__webpack_require__(0);var util_1=__webpack_require__(4);var moment_ext_1=__webpack_require__(10);var date_formatting_1=__webpack_require__(47);var Component_1=__webpack_require__(237);var util_2=__webpack_require__(35);var DateComponent=function(_super){tslib_1.__extends(DateComponent,_super);function DateComponent(_view,_options){var _this=_super.call(this)||this;_this.isRTL=false;_this.hitsNeededDepth=0;_this.hasAllDayBusinessHours=false;_this.isDatesRendered=false;if(_view){_this['view']=_view;}if(_options){_this['options']=_options;}_this.uid=String(DateComponent.guid++);_this.childrenByUid={};_this.nextDayThreshold=moment.duration(_this.opt('nextDayThreshold'));_this.isRTL=_this.opt('isRTL');if(_this.fillRendererClass){_this.fillRenderer=new _this.fillRendererClass(_this);}if(_this.eventRendererClass){_this.eventRenderer=new _this.eventRendererClass(_this,_this.fillRenderer);}if(_this.helperRendererClass&&_this.eventRenderer){_this.helperRenderer=new _this.helperRendererClass(_this,_this.eventRenderer);}if(_this.businessHourRendererClass&&_this.fillRenderer){_this.businessHourRenderer=new _this.businessHourRendererClass(_this,_this.fillRenderer);}return _this;}DateComponent.prototype.addChild=function(child){if(!this.childrenByUid[child.uid]){this.childrenByUid[child.uid]=child;return true;}return false;};DateComponent.prototype.removeChild=function(child){if(this.childrenByUid[child.uid]){delete this.childrenByUid[child.uid];return true;}return false;};DateComponent.prototype.updateSize=function(totalHeight,isAuto,isResize){this.callChildren('updateSize',arguments);};DateComponent.prototype.opt=function(name){return this._getView().opt(name);};DateComponent.prototype.publiclyTrigger=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var calendar=this._getCalendar();return calendar.publiclyTrigger.apply(calendar,args);};DateComponent.prototype.hasPublicHandlers=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var calendar=this._getCalendar();return calendar.hasPublicHandlers.apply(calendar,args);};DateComponent.prototype.executeDateRender=function(dateProfile){this.dateProfile=dateProfile;this.renderDates(dateProfile);this.isDatesRendered=true;this.callChildren('executeDateRender',arguments);};DateComponent.prototype.executeDateUnrender=function(){this.callChildren('executeDateUnrender',arguments);this.dateProfile=null;this.unrenderDates();this.isDatesRendered=false;};DateComponent.prototype.renderDates=function(dateProfile){};DateComponent.prototype.unrenderDates=function(){};DateComponent.prototype.getNowIndicatorUnit=function(){};DateComponent.prototype.renderNowIndicator=function(date){this.callChildren('renderNowIndicator',arguments);};DateComponent.prototype.unrenderNowIndicator=function(){this.callChildren('unrenderNowIndicator',arguments);};DateComponent.prototype.renderBusinessHours=function(businessHourGenerator){if(this.businessHourRenderer){this.businessHourRenderer.render(businessHourGenerator);}this.callChildren('renderBusinessHours',arguments);};DateComponent.prototype.unrenderBusinessHours=function(){this.callChildren('unrenderBusinessHours',arguments);if(this.businessHourRenderer){this.businessHourRenderer.unrender();}};DateComponent.prototype.executeEventRender=function(eventsPayload){if(this.eventRenderer){this.eventRenderer.rangeUpdated();this.eventRenderer.render(eventsPayload);}else if(this['renderEvents']){this['renderEvents'](convertEventsPayloadToLegacyArray(eventsPayload));}this.callChildren('executeEventRender',arguments);};DateComponent.prototype.executeEventUnrender=function(){this.callChildren('executeEventUnrender',arguments);if(this.eventRenderer){this.eventRenderer.unrender();}else if(this['destroyEvents']){this['destroyEvents']();}};DateComponent.prototype.getBusinessHourSegs=function(){var segs=this.getOwnBusinessHourSegs();this.iterChildren(function(child){segs.push.apply(segs,child.getBusinessHourSegs());});return segs;};DateComponent.prototype.getOwnBusinessHourSegs=function(){if(this.businessHourRenderer){return this.businessHourRenderer.getSegs();}return[];};DateComponent.prototype.getEventSegs=function(){var segs=this.getOwnEventSegs();this.iterChildren(function(child){segs.push.apply(segs,child.getEventSegs());});return segs;};DateComponent.prototype.getOwnEventSegs=function(){if(this.eventRenderer){return this.eventRenderer.getSegs();}return[];};DateComponent.prototype.triggerAfterEventsRendered=function(){this.triggerAfterEventSegsRendered(this.getEventSegs());this.publiclyTrigger('eventAfterAllRender',{context:this,args:[this]});};DateComponent.prototype.triggerAfterEventSegsRendered=function(segs){var _this=this;if(this.hasPublicHandlers('eventAfterRender')){segs.forEach(function(seg){var legacy;if(seg.el){legacy=seg.footprint.getEventLegacy();_this.publiclyTrigger('eventAfterRender',{context:legacy,args:[legacy,seg.el,_this]});}});}};DateComponent.prototype.triggerBeforeEventsDestroyed=function(){this.triggerBeforeEventSegsDestroyed(this.getEventSegs());};DateComponent.prototype.triggerBeforeEventSegsDestroyed=function(segs){var _this=this;if(this.hasPublicHandlers('eventDestroy')){segs.forEach(function(seg){var legacy;if(seg.el){legacy=seg.footprint.getEventLegacy();_this.publiclyTrigger('eventDestroy',{context:legacy,args:[legacy,seg.el,_this]});}});}};DateComponent.prototype.showEventsWithId=function(eventDefId){this.getEventSegs().forEach(function(seg){if(seg.footprint.eventDef.id===eventDefId&&seg.el){seg.el.css('visibility','');}});this.callChildren('showEventsWithId',arguments);};DateComponent.prototype.hideEventsWithId=function(eventDefId){this.getEventSegs().forEach(function(seg){if(seg.footprint.eventDef.id===eventDefId&&seg.el){seg.el.css('visibility','hidden');}});this.callChildren('hideEventsWithId',arguments);};DateComponent.prototype.renderDrag=function(eventFootprints,seg,isTouch){var renderedHelper=false;this.iterChildren(function(child){if(child.renderDrag(eventFootprints,seg,isTouch)){renderedHelper=true;}});return renderedHelper;};DateComponent.prototype.unrenderDrag=function(){this.callChildren('unrenderDrag',arguments);};DateComponent.prototype.renderEventResize=function(eventFootprints,seg,isTouch){this.callChildren('renderEventResize',arguments);};DateComponent.prototype.unrenderEventResize=function(){this.callChildren('unrenderEventResize',arguments);};DateComponent.prototype.renderSelectionFootprint=function(componentFootprint){this.renderHighlight(componentFootprint);this.callChildren('renderSelectionFootprint',arguments);};DateComponent.prototype.unrenderSelection=function(){this.unrenderHighlight();this.callChildren('unrenderSelection',arguments);};DateComponent.prototype.renderHighlight=function(componentFootprint){if(this.fillRenderer){this.fillRenderer.renderFootprint('highlight',componentFootprint,{getClasses:function getClasses(){return['fc-highlight'];}});}this.callChildren('renderHighlight',arguments);};DateComponent.prototype.unrenderHighlight=function(){if(this.fillRenderer){this.fillRenderer.unrender('highlight');}this.callChildren('unrenderHighlight',arguments);};DateComponent.prototype.hitsNeeded=function(){if(!this.hitsNeededDepth++){this.prepareHits();}this.callChildren('hitsNeeded',arguments);};DateComponent.prototype.hitsNotNeeded=function(){if(this.hitsNeededDepth&&! --this.hitsNeededDepth){this.releaseHits();}this.callChildren('hitsNotNeeded',arguments);};DateComponent.prototype.prepareHits=function(){};DateComponent.prototype.releaseHits=function(){};DateComponent.prototype.queryHit=function(leftOffset,topOffset){var childrenByUid=this.childrenByUid;var uid;var hit;for(uid in childrenByUid){hit=childrenByUid[uid].queryHit(leftOffset,topOffset);if(hit){break;}}return hit;};DateComponent.prototype.getSafeHitFootprint=function(hit){var footprint=this.getHitFootprint(hit);if(!this.dateProfile.activeUnzonedRange.containsRange(footprint.unzonedRange)){return null;}return footprint;};DateComponent.prototype.getHitFootprint=function(hit){};DateComponent.prototype.getHitEl=function(hit){};DateComponent.prototype.eventRangesToEventFootprints=function(eventRanges){var eventFootprints=[];var i;for(i=0;i<eventRanges.length;i++){eventFootprints.push.apply(eventFootprints,this.eventRangeToEventFootprints(eventRanges[i]));}return eventFootprints;};DateComponent.prototype.eventRangeToEventFootprints=function(eventRange){return[util_2.eventRangeToEventFootprint(eventRange)];};DateComponent.prototype.eventFootprintsToSegs=function(eventFootprints){var segs=[];var i;for(i=0;i<eventFootprints.length;i++){segs.push.apply(segs,this.eventFootprintToSegs(eventFootprints[i]));}return segs;};DateComponent.prototype.eventFootprintToSegs=function(eventFootprint){var unzonedRange=eventFootprint.componentFootprint.unzonedRange;var segs;var i;var seg;segs=this.componentFootprintToSegs(eventFootprint.componentFootprint);for(i=0;i<segs.length;i++){seg=segs[i];if(!unzonedRange.isStart){seg.isStart=false;}if(!unzonedRange.isEnd){seg.isEnd=false;}seg.footprint=eventFootprint;}return segs;};DateComponent.prototype.componentFootprintToSegs=function(componentFootprint){return[];};DateComponent.prototype.callChildren=function(methodName,args){this.iterChildren(function(child){child[methodName].apply(child,args);});};DateComponent.prototype.iterChildren=function(func){var childrenByUid=this.childrenByUid;var uid;for(uid in childrenByUid){func(childrenByUid[uid]);}};DateComponent.prototype._getCalendar=function(){var t=this;return t.calendar||t.view.calendar;};DateComponent.prototype._getView=function(){return this.view;};DateComponent.prototype._getDateProfile=function(){return this._getView().get('dateProfile');};DateComponent.prototype.buildGotoAnchorHtml=function(gotoOptions,attrs,innerHtml){var date;var type;var forceOff;var finalOptions;if($.isPlainObject(gotoOptions)){date=gotoOptions.date;type=gotoOptions.type;forceOff=gotoOptions.forceOff;}else{date=gotoOptions;}date=moment_ext_1.default(date);finalOptions={date:date.format('YYYY-MM-DD'),type:type||'day'};if(typeof attrs==='string'){innerHtml=attrs;attrs=null;}attrs=attrs?' '+util_1.attrsToStr(attrs):'';innerHtml=innerHtml||'';if(!forceOff&&this.opt('navLinks')){return'<a'+attrs+' data-goto="'+util_1.htmlEscape(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(finalOptions))+'">'+innerHtml+'</a>';}else{return'<span'+attrs+'>'+innerHtml+'</span>';}};DateComponent.prototype.getAllDayHtml=function(){return this.opt('allDayHtml')||util_1.htmlEscape(this.opt('allDayText'));};DateComponent.prototype.getDayClasses=function(date,noThemeHighlight){var view=this._getView();var classes=[];var today;if(!this.dateProfile.activeUnzonedRange.containsDate(date)){classes.push('fc-disabled-day');}else{classes.push('fc-'+util_1.dayIDs[date.day()]);if(view.isDateInOtherMonth(date,this.dateProfile)){classes.push('fc-other-month');}today=view.calendar.getNow();if(date.isSame(today,'day')){classes.push('fc-today');if(noThemeHighlight!==true){classes.push(view.calendar.theme.getClass('today'));}}else if(date<today){classes.push('fc-past');}else{classes.push('fc-future');}}return classes;};DateComponent.prototype.formatRange=function(range,isAllDay,formatStr,separator){var end=range.end;if(isAllDay){end=end.clone().subtract(1);}return date_formatting_1.formatRange(range.start,end,formatStr,separator,this.isRTL);};DateComponent.prototype.currentRangeAs=function(unit){return this._getDateProfile().currentUnzonedRange.as(unit);};DateComponent.prototype.computeDayRange=function(unzonedRange){var calendar=this._getCalendar();var startDay=calendar.msToUtcMoment(unzonedRange.startMs,true);var end=calendar.msToUtcMoment(unzonedRange.endMs);var endTimeMS=+end.time();var endDay=end.clone().stripTime();if(endTimeMS&&endTimeMS>=this.nextDayThreshold){endDay.add(1,'days');}if(endDay<=startDay){endDay=startDay.clone().add(1,'days');}return{start:startDay,end:endDay};};DateComponent.prototype.isMultiDayRange=function(unzonedRange){var dayRange=this.computeDayRange(unzonedRange);return dayRange.end.diff(dayRange.start,'days')>1;};DateComponent.guid=0;return DateComponent;}(Component_1.default);exports.default=DateComponent;function convertEventsPayloadToLegacyArray(eventsPayload){var eventDefId;var eventInstances;var legacyEvents=[];var i;for(eventDefId in eventsPayload){eventInstances=eventsPayload[eventDefId].eventInstances;for(i=0;i<eventInstances.length;i++){legacyEvents.push(eventInstances[i].toLegacy());}}return legacyEvents;}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var moment=__webpack_require__(0);var util_1=__webpack_require__(4);var options_1=__webpack_require__(32);var Iterator_1=__webpack_require__(238);var GlobalEmitter_1=__webpack_require__(21);var EmitterMixin_1=__webpack_require__(11);var ListenerMixin_1=__webpack_require__(7);var Toolbar_1=__webpack_require__(239);var OptionsManager_1=__webpack_require__(240);var ViewSpecManager_1=__webpack_require__(241);var Constraints_1=__webpack_require__(207);var locale_1=__webpack_require__(31);var moment_ext_1=__webpack_require__(10);var UnzonedRange_1=__webpack_require__(5);var ComponentFootprint_1=__webpack_require__(12);var EventDateProfile_1=__webpack_require__(17);var EventManager_1=__webpack_require__(242);var BusinessHourGenerator_1=__webpack_require__(212);var EventSourceParser_1=__webpack_require__(38);var EventDefParser_1=__webpack_require__(49);var SingleEventDef_1=__webpack_require__(13);var EventDefMutation_1=__webpack_require__(37);var EventSource_1=__webpack_require__(6);var ThemeRegistry_1=__webpack_require__(51);var Calendar=function(){function Calendar(el,overrides){this.loadingLevel=0;this.ignoreUpdateViewSize=0;this.freezeContentHeightDepth=0;GlobalEmitter_1.default.needed();this.el=el;this.viewsByType={};this.optionsManager=new OptionsManager_1.default(this,overrides);this.viewSpecManager=new ViewSpecManager_1.default(this.optionsManager,this);this.initMomentInternals();this.initCurrentDate();this.initEventManager();this.constraints=new Constraints_1.default(this.eventManager,this);this.constructed();}Calendar.prototype.constructed=function(){};Calendar.prototype.getView=function(){return this.view;};Calendar.prototype.publiclyTrigger=function(name,triggerInfo){var optHandler=this.opt(name);var context;var args;if($.isPlainObject(triggerInfo)){context=triggerInfo.context;args=triggerInfo.args;}else if($.isArray(triggerInfo)){args=triggerInfo;}if(context==null){context=this.el[0];}if(!args){args=[];}this.triggerWith(name,context,args);if(optHandler){return optHandler.apply(context,args);}};Calendar.prototype.hasPublicHandlers=function(name){return this.hasHandlers(name)||this.opt(name);};Calendar.prototype.option=function(name,value){var newOptionHash;if(typeof name==='string'){if(value===undefined){return this.optionsManager.get(name);}else{newOptionHash={};newOptionHash[name]=value;this.optionsManager.add(newOptionHash);}}else if((typeof name==='undefined'?'undefined':Object(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__["default"])(name))==='object'){this.optionsManager.add(name);}};Calendar.prototype.opt=function(name){return this.optionsManager.get(name);};Calendar.prototype.instantiateView=function(viewType){var spec=this.viewSpecManager.getViewSpec(viewType);if(!spec){throw new Error("View type \""+viewType+"\" is not valid");}return new spec['class'](this,spec);};Calendar.prototype.isValidViewType=function(viewType){return Boolean(this.viewSpecManager.getViewSpec(viewType));};Calendar.prototype.changeView=function(viewName,dateOrRange){if(dateOrRange){if(dateOrRange.start&&dateOrRange.end){this.optionsManager.recordOverrides({visibleRange:dateOrRange});}else{this.currentDate=this.moment(dateOrRange).stripZone();}}this.renderView(viewName);};Calendar.prototype.zoomTo=function(newDate,viewType){var spec;viewType=viewType||'day';spec=this.viewSpecManager.getViewSpec(viewType)||this.viewSpecManager.getUnitViewSpec(viewType);this.currentDate=newDate.clone();this.renderView(spec?spec.type:null);};Calendar.prototype.initCurrentDate=function(){var defaultDateInput=this.opt('defaultDate');if(defaultDateInput!=null){this.currentDate=this.moment(defaultDateInput).stripZone();}else{this.currentDate=this.getNow();}};Calendar.prototype.prev=function(){var view=this.view;var prevInfo=view.dateProfileGenerator.buildPrev(view.get('dateProfile'));if(prevInfo.isValid){this.currentDate=prevInfo.date;this.renderView();}};Calendar.prototype.next=function(){var view=this.view;var nextInfo=view.dateProfileGenerator.buildNext(view.get('dateProfile'));if(nextInfo.isValid){this.currentDate=nextInfo.date;this.renderView();}};Calendar.prototype.prevYear=function(){this.currentDate.add(-1,'years');this.renderView();};Calendar.prototype.nextYear=function(){this.currentDate.add(1,'years');this.renderView();};Calendar.prototype.today=function(){this.currentDate=this.getNow();this.renderView();};Calendar.prototype.gotoDate=function(zonedDateInput){this.currentDate=this.moment(zonedDateInput).stripZone();this.renderView();};Calendar.prototype.incrementDate=function(delta){this.currentDate.add(moment.duration(delta));this.renderView();};Calendar.prototype.getDate=function(){return this.applyTimezone(this.currentDate);};Calendar.prototype.pushLoading=function(){if(!this.loadingLevel++){this.publiclyTrigger('loading',[true,this.view]);}};Calendar.prototype.popLoading=function(){if(! --this.loadingLevel){this.publiclyTrigger('loading',[false,this.view]);}};Calendar.prototype.render=function(){if(!this.contentEl){this.initialRender();}else if(this.elementVisible()){this.calcSize();this.updateViewSize();}};Calendar.prototype.initialRender=function(){var _this=this;var el=this.el;el.addClass('fc');el.on('click.fc','a[data-goto]',function(ev){var anchorEl=$(ev.currentTarget);var gotoOptions=anchorEl.data('goto');var date=_this.moment(gotoOptions.date);var viewType=gotoOptions.type;var customAction=_this.view.opt('navLink'+util_1.capitaliseFirstLetter(viewType)+'Click');if(typeof customAction==='function'){customAction(date,ev);}else{if(typeof customAction==='string'){viewType=customAction;}_this.zoomTo(date,viewType);}});this.optionsManager.watch('settingTheme',['?theme','?themeSystem'],function(opts){var themeClass=ThemeRegistry_1.getThemeSystemClass(opts.themeSystem||opts.theme);var theme=new themeClass(_this.optionsManager);var widgetClass=theme.getClass('widget');_this.theme=theme;if(widgetClass){el.addClass(widgetClass);}},function(){var widgetClass=_this.theme.getClass('widget');_this.theme=null;if(widgetClass){el.removeClass(widgetClass);}});this.optionsManager.watch('settingBusinessHourGenerator',['?businessHours'],function(deps){_this.businessHourGenerator=new BusinessHourGenerator_1.default(deps.businessHours,_this);if(_this.view){_this.view.set('businessHourGenerator',_this.businessHourGenerator);}},function(){_this.businessHourGenerator=null;});this.optionsManager.watch('applyingDirClasses',['?isRTL','?locale'],function(opts){el.toggleClass('fc-ltr',!opts.isRTL);el.toggleClass('fc-rtl',opts.isRTL);});this.contentEl=$("<div class='fc-view-container'/>").prependTo(el);this.initToolbars();this.renderHeader();this.renderFooter();this.renderView(this.opt('defaultView'));if(this.opt('handleWindowResize')){$(window).resize(this.windowResizeProxy=util_1.debounce(this.windowResize.bind(this),this.opt('windowResizeDelay')));}};Calendar.prototype.destroy=function(){if(this.view){this.clearView();}this.toolbarsManager.proxyCall('removeElement');this.contentEl.remove();this.el.removeClass('fc fc-ltr fc-rtl');this.optionsManager.unwatch('settingTheme');this.optionsManager.unwatch('settingBusinessHourGenerator');this.el.off('.fc');if(this.windowResizeProxy){$(window).unbind('resize',this.windowResizeProxy);this.windowResizeProxy=null;}GlobalEmitter_1.default.unneeded();};Calendar.prototype.elementVisible=function(){return this.el.is(':visible');};Calendar.prototype.bindViewHandlers=function(view){var _this=this;view.watch('titleForCalendar',['title'],function(deps){if(view===_this.view){_this.setToolbarsTitle(deps.title);}});view.watch('dateProfileForCalendar',['dateProfile'],function(deps){if(view===_this.view){_this.currentDate=deps.dateProfile.date;_this.updateToolbarButtons(deps.dateProfile);}});};Calendar.prototype.unbindViewHandlers=function(view){view.unwatch('titleForCalendar');view.unwatch('dateProfileForCalendar');};Calendar.prototype.renderView=function(viewType){var oldView=this.view;var newView;this.freezeContentHeight();if(oldView&&viewType&&oldView.type!==viewType){this.clearView();}if(!this.view&&viewType){newView=this.view=this.viewsByType[viewType]||(this.viewsByType[viewType]=this.instantiateView(viewType));this.bindViewHandlers(newView);newView.startBatchRender();newView.setElement($("<div class='fc-view fc-"+viewType+"-view' />").appendTo(this.contentEl));this.toolbarsManager.proxyCall('activateButton',viewType);}if(this.view){if(this.view.get('businessHourGenerator')!==this.businessHourGenerator){this.view.set('businessHourGenerator',this.businessHourGenerator);}this.view.setDate(this.currentDate);if(newView){newView.stopBatchRender();}}this.thawContentHeight();};Calendar.prototype.clearView=function(){var currentView=this.view;this.toolbarsManager.proxyCall('deactivateButton',currentView.type);this.unbindViewHandlers(currentView);currentView.removeElement();currentView.unsetDate();this.view=null;};Calendar.prototype.reinitView=function(){var oldView=this.view;var scroll=oldView.queryScroll();this.freezeContentHeight();this.clearView();this.calcSize();this.renderView(oldView.type);this.view.applyScroll(scroll);this.thawContentHeight();};Calendar.prototype.getSuggestedViewHeight=function(){if(this.suggestedViewHeight==null){this.calcSize();}return this.suggestedViewHeight;};Calendar.prototype.isHeightAuto=function(){return this.opt('contentHeight')==='auto'||this.opt('height')==='auto';};Calendar.prototype.updateViewSize=function(isResize){if(isResize===void 0){isResize=false;}var view=this.view;var scroll;if(!this.ignoreUpdateViewSize&&view){if(isResize){this.calcSize();scroll=view.queryScroll();}this.ignoreUpdateViewSize++;view.updateSize(this.getSuggestedViewHeight(),this.isHeightAuto(),isResize);this.ignoreUpdateViewSize--;if(isResize){view.applyScroll(scroll);}return true;}};Calendar.prototype.calcSize=function(){if(this.elementVisible()){this._calcSize();}};Calendar.prototype._calcSize=function(){var contentHeightInput=this.opt('contentHeight');var heightInput=this.opt('height');if(typeof contentHeightInput==='number'){this.suggestedViewHeight=contentHeightInput;}else if(typeof contentHeightInput==='function'){this.suggestedViewHeight=contentHeightInput();}else if(typeof heightInput==='number'){this.suggestedViewHeight=heightInput-this.queryToolbarsHeight();}else if(typeof heightInput==='function'){this.suggestedViewHeight=heightInput()-this.queryToolbarsHeight();}else if(heightInput==='parent'){this.suggestedViewHeight=this.el.parent().height()-this.queryToolbarsHeight();}else{this.suggestedViewHeight=Math.round(this.contentEl.width()/Math.max(this.opt('aspectRatio'),.5));}};Calendar.prototype.windowResize=function(ev){if(ev.target===window&&this.view&&this.view.isDatesRendered){if(this.updateViewSize(true)){this.publiclyTrigger('windowResize',[this.view]);}}};Calendar.prototype.freezeContentHeight=function(){if(!this.freezeContentHeightDepth++){this.forceFreezeContentHeight();}};Calendar.prototype.forceFreezeContentHeight=function(){this.contentEl.css({width:'100%',height:this.contentEl.height(),overflow:'hidden'});};Calendar.prototype.thawContentHeight=function(){this.freezeContentHeightDepth--;this.contentEl.css({width:'',height:'',overflow:''});if(this.freezeContentHeightDepth){this.forceFreezeContentHeight();}};Calendar.prototype.initToolbars=function(){this.header=new Toolbar_1.default(this,this.computeHeaderOptions());this.footer=new Toolbar_1.default(this,this.computeFooterOptions());this.toolbarsManager=new Iterator_1.default([this.header,this.footer]);};Calendar.prototype.computeHeaderOptions=function(){return{extraClasses:'fc-header-toolbar',layout:this.opt('header')};};Calendar.prototype.computeFooterOptions=function(){return{extraClasses:'fc-footer-toolbar',layout:this.opt('footer')};};Calendar.prototype.renderHeader=function(){var header=this.header;header.setToolbarOptions(this.computeHeaderOptions());header.render();if(header.el){this.el.prepend(header.el);}};Calendar.prototype.renderFooter=function(){var footer=this.footer;footer.setToolbarOptions(this.computeFooterOptions());footer.render();if(footer.el){this.el.append(footer.el);}};Calendar.prototype.setToolbarsTitle=function(title){this.toolbarsManager.proxyCall('updateTitle',title);};Calendar.prototype.updateToolbarButtons=function(dateProfile){var now=this.getNow();var view=this.view;var todayInfo=view.dateProfileGenerator.build(now);var prevInfo=view.dateProfileGenerator.buildPrev(view.get('dateProfile'));var nextInfo=view.dateProfileGenerator.buildNext(view.get('dateProfile'));this.toolbarsManager.proxyCall(todayInfo.isValid&&!dateProfile.currentUnzonedRange.containsDate(now)?'enableButton':'disableButton','today');this.toolbarsManager.proxyCall(prevInfo.isValid?'enableButton':'disableButton','prev');this.toolbarsManager.proxyCall(nextInfo.isValid?'enableButton':'disableButton','next');};Calendar.prototype.queryToolbarsHeight=function(){return this.toolbarsManager.items.reduce(function(accumulator,toolbar){var toolbarHeight=toolbar.el?toolbar.el.outerHeight(true):0;return accumulator+toolbarHeight;},0);};Calendar.prototype.select=function(zonedStartInput,zonedEndInput){this.view.select(this.buildSelectFootprint.apply(this,arguments));};Calendar.prototype.unselect=function(){if(this.view){this.view.unselect();}};Calendar.prototype.buildSelectFootprint=function(zonedStartInput,zonedEndInput){var start=this.moment(zonedStartInput).stripZone();var end;if(zonedEndInput){end=this.moment(zonedEndInput).stripZone();}else if(start.hasTime()){end=start.clone().add(this.defaultTimedEventDuration);}else{end=start.clone().add(this.defaultAllDayEventDuration);}return new ComponentFootprint_1.default(new UnzonedRange_1.default(start,end),!start.hasTime());};Calendar.prototype.initMomentInternals=function(){var _this=this;this.defaultAllDayEventDuration=moment.duration(this.opt('defaultAllDayEventDuration'));this.defaultTimedEventDuration=moment.duration(this.opt('defaultTimedEventDuration'));this.optionsManager.watch('buildingMomentLocale',['?locale','?monthNames','?monthNamesShort','?dayNames','?dayNamesShort','?firstDay','?weekNumberCalculation'],function(opts){var weekNumberCalculation=opts.weekNumberCalculation;var firstDay=opts.firstDay;var _week;if(weekNumberCalculation==='iso'){weekNumberCalculation='ISO';}var localeData=__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_create___default()(locale_1.getMomentLocaleData(opts.locale));if(opts.monthNames){localeData._months=opts.monthNames;}if(opts.monthNamesShort){localeData._monthsShort=opts.monthNamesShort;}if(opts.dayNames){localeData._weekdays=opts.dayNames;}if(opts.dayNamesShort){localeData._weekdaysShort=opts.dayNamesShort;}if(firstDay==null&&weekNumberCalculation==='ISO'){firstDay=1;}if(firstDay!=null){_week=__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_create___default()(localeData._week);_week.dow=firstDay;localeData._week=_week;}if(weekNumberCalculation==='ISO'||weekNumberCalculation==='local'||typeof weekNumberCalculation==='function'){localeData._fullCalendar_weekCalc=weekNumberCalculation;}_this.localeData=localeData;if(_this.currentDate){_this.localizeMoment(_this.currentDate);}});};Calendar.prototype.moment=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var mom;if(this.opt('timezone')==='local'){mom=moment_ext_1.default.apply(null,args);if(mom.hasTime()){mom.local();}}else if(this.opt('timezone')==='UTC'){mom=moment_ext_1.default.utc.apply(null,args);}else{mom=moment_ext_1.default.parseZone.apply(null,args);}this.localizeMoment(mom);return mom;};Calendar.prototype.msToMoment=function(ms,forceAllDay){var mom=moment_ext_1.default.utc(ms);if(forceAllDay){mom.stripTime();}else{mom=this.applyTimezone(mom);}this.localizeMoment(mom);return mom;};Calendar.prototype.msToUtcMoment=function(ms,forceAllDay){var mom=moment_ext_1.default.utc(ms);if(forceAllDay){mom.stripTime();}this.localizeMoment(mom);return mom;};Calendar.prototype.localizeMoment=function(mom){mom._locale=this.localeData;};Calendar.prototype.getIsAmbigTimezone=function(){return this.opt('timezone')!=='local'&&this.opt('timezone')!=='UTC';};Calendar.prototype.applyTimezone=function(date){if(!date.hasTime()){return date.clone();}var zonedDate=this.moment(date.toArray());var timeAdjust=date.time().asMilliseconds()-zonedDate.time().asMilliseconds();var adjustedZonedDate;if(timeAdjust){adjustedZonedDate=zonedDate.clone().add(timeAdjust);if(date.time().asMilliseconds()-adjustedZonedDate.time().asMilliseconds()===0){zonedDate=adjustedZonedDate;}}return zonedDate;};Calendar.prototype.footprintToDateProfile=function(componentFootprint,ignoreEnd){if(ignoreEnd===void 0){ignoreEnd=false;}var start=moment_ext_1.default.utc(componentFootprint.unzonedRange.startMs);var end;if(!ignoreEnd){end=moment_ext_1.default.utc(componentFootprint.unzonedRange.endMs);}if(componentFootprint.isAllDay){start.stripTime();if(end){end.stripTime();}}else{start=this.applyTimezone(start);if(end){end=this.applyTimezone(end);}}return new EventDateProfile_1.default(start,end,this);};Calendar.prototype.getNow=function(){var now=this.opt('now');if(typeof now==='function'){now=now();}return this.moment(now).stripZone();};Calendar.prototype.humanizeDuration=function(duration){return duration.locale(this.opt('locale')).humanize();};Calendar.prototype.parseUnzonedRange=function(rangeInput){var start=null;var end=null;if(rangeInput.start){start=this.moment(rangeInput.start).stripZone();}if(rangeInput.end){end=this.moment(rangeInput.end).stripZone();}if(!start&&!end){return null;}if(start&&end&&end.isBefore(start)){return null;}return new UnzonedRange_1.default(start,end);};Calendar.prototype.initEventManager=function(){var _this=this;var eventManager=new EventManager_1.default(this);var rawSources=this.opt('eventSources')||[];var singleRawSource=this.opt('events');this.eventManager=eventManager;if(singleRawSource){rawSources.unshift(singleRawSource);}eventManager.on('release',function(eventsPayload){_this.trigger('eventsReset',eventsPayload);});eventManager.freeze();rawSources.forEach(function(rawSource){var source=EventSourceParser_1.default.parse(rawSource,_this);if(source){eventManager.addSource(source);}});eventManager.thaw();};Calendar.prototype.requestEvents=function(start,end){return this.eventManager.requestEvents(start,end,this.opt('timezone'),!this.opt('lazyFetching'));};Calendar.prototype.getEventEnd=function(event){if(event.end){return event.end.clone();}else{return this.getDefaultEventEnd(event.allDay,event.start);}};Calendar.prototype.getDefaultEventEnd=function(allDay,zonedStart){var end=zonedStart.clone();if(allDay){end.stripTime().add(this.defaultAllDayEventDuration);}else{end.add(this.defaultTimedEventDuration);}if(this.getIsAmbigTimezone()){end.stripZone();}return end;};Calendar.prototype.rerenderEvents=function(){this.view.flash('displayingEvents');};Calendar.prototype.refetchEvents=function(){this.eventManager.refetchAllSources();};Calendar.prototype.renderEvents=function(eventInputs,isSticky){this.eventManager.freeze();for(var i=0;i<eventInputs.length;i++){this.renderEvent(eventInputs[i],isSticky);}this.eventManager.thaw();};Calendar.prototype.renderEvent=function(eventInput,isSticky){if(isSticky===void 0){isSticky=false;}var eventManager=this.eventManager;var eventDef=EventDefParser_1.default.parse(eventInput,eventInput.source||eventManager.stickySource);if(eventDef){eventManager.addEventDef(eventDef,isSticky);}};Calendar.prototype.removeEvents=function(legacyQuery){var eventManager=this.eventManager;var legacyInstances=[];var idMap={};var eventDef;var i;if(legacyQuery==null){eventManager.removeAllEventDefs();}else{eventManager.getEventInstances().forEach(function(eventInstance){legacyInstances.push(eventInstance.toLegacy());});legacyInstances=filterLegacyEventInstances(legacyInstances,legacyQuery);for(i=0;i<legacyInstances.length;i++){eventDef=this.eventManager.getEventDefByUid(legacyInstances[i]._id);idMap[eventDef.id]=true;}eventManager.freeze();for(i in idMap){eventManager.removeEventDefsById(i);}eventManager.thaw();}};Calendar.prototype.clientEvents=function(legacyQuery){var legacyEventInstances=[];this.eventManager.getEventInstances().forEach(function(eventInstance){legacyEventInstances.push(eventInstance.toLegacy());});return filterLegacyEventInstances(legacyEventInstances,legacyQuery);};Calendar.prototype.updateEvents=function(eventPropsArray){this.eventManager.freeze();for(var i=0;i<eventPropsArray.length;i++){this.updateEvent(eventPropsArray[i]);}this.eventManager.thaw();};Calendar.prototype.updateEvent=function(eventProps){var eventDef=this.eventManager.getEventDefByUid(eventProps._id);var eventInstance;var eventDefMutation;if(eventDef instanceof SingleEventDef_1.default){eventInstance=eventDef.buildInstance();eventDefMutation=EventDefMutation_1.default.createFromRawProps(eventInstance,eventProps,null);this.eventManager.mutateEventsWithId(eventDef.id,eventDefMutation);}};Calendar.prototype.getEventSources=function(){return this.eventManager.otherSources.slice();};Calendar.prototype.getEventSourceById=function(id){return this.eventManager.getSourceById(EventSource_1.default.normalizeId(id));};Calendar.prototype.addEventSource=function(sourceInput){var source=EventSourceParser_1.default.parse(sourceInput,this);if(source){this.eventManager.addSource(source);}};Calendar.prototype.removeEventSources=function(sourceMultiQuery){var eventManager=this.eventManager;var sources;var i;if(sourceMultiQuery==null){this.eventManager.removeAllSources();}else{sources=eventManager.multiQuerySources(sourceMultiQuery);eventManager.freeze();for(i=0;i<sources.length;i++){eventManager.removeSource(sources[i]);}eventManager.thaw();}};Calendar.prototype.removeEventSource=function(sourceQuery){var eventManager=this.eventManager;var sources=eventManager.querySources(sourceQuery);var i;eventManager.freeze();for(i=0;i<sources.length;i++){eventManager.removeSource(sources[i]);}eventManager.thaw();};Calendar.prototype.refetchEventSources=function(sourceMultiQuery){var eventManager=this.eventManager;var sources=eventManager.multiQuerySources(sourceMultiQuery);var i;eventManager.freeze();for(i=0;i<sources.length;i++){eventManager.refetchSource(sources[i]);}eventManager.thaw();};Calendar.defaults=options_1.globalDefaults;Calendar.englishDefaults=options_1.englishDefaults;Calendar.rtlDefaults=options_1.rtlDefaults;return Calendar;}();exports.default=Calendar;EmitterMixin_1.default.mixInto(Calendar);ListenerMixin_1.default.mixInto(Calendar);function filterLegacyEventInstances(legacyEventInstances,legacyQuery){if(legacyQuery==null){return legacyEventInstances;}else if($.isFunction(legacyQuery)){return legacyEventInstances.filter(legacyQuery);}else{legacyQuery+='';return legacyEventInstances.filter(function(legacyEventInstance){return legacyEventInstance.id==legacyQuery||legacyEventInstance._id===legacyQuery;});}}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var moment=__webpack_require__(0);var util_1=__webpack_require__(4);var UnzonedRange_1=__webpack_require__(5);var DateProfileGenerator=function(){function DateProfileGenerator(_view){this._view=_view;}DateProfileGenerator.prototype.opt=function(name){return this._view.opt(name);};DateProfileGenerator.prototype.trimHiddenDays=function(unzonedRange){return this._view.trimHiddenDays(unzonedRange);};DateProfileGenerator.prototype.msToUtcMoment=function(ms,forceAllDay){return this._view.calendar.msToUtcMoment(ms,forceAllDay);};DateProfileGenerator.prototype.buildPrev=function(currentDateProfile){var prevDate=currentDateProfile.date.clone().startOf(currentDateProfile.currentRangeUnit).subtract(currentDateProfile.dateIncrement);return this.build(prevDate,-1);};DateProfileGenerator.prototype.buildNext=function(currentDateProfile){var nextDate=currentDateProfile.date.clone().startOf(currentDateProfile.currentRangeUnit).add(currentDateProfile.dateIncrement);return this.build(nextDate,1);};DateProfileGenerator.prototype.build=function(date,direction,forceToValid){if(forceToValid===void 0){forceToValid=false;}var isDateAllDay=!date.hasTime();var validUnzonedRange;var minTime=null;var maxTime=null;var currentInfo;var isRangeAllDay;var renderUnzonedRange;var activeUnzonedRange;var isValid;validUnzonedRange=this.buildValidRange();validUnzonedRange=this.trimHiddenDays(validUnzonedRange);if(forceToValid){date=this.msToUtcMoment(validUnzonedRange.constrainDate(date),isDateAllDay);}currentInfo=this.buildCurrentRangeInfo(date,direction);isRangeAllDay=/^(year|month|week|day)$/.test(currentInfo.unit);renderUnzonedRange=this.buildRenderRange(this.trimHiddenDays(currentInfo.unzonedRange),currentInfo.unit,isRangeAllDay);renderUnzonedRange=this.trimHiddenDays(renderUnzonedRange);activeUnzonedRange=renderUnzonedRange.clone();if(!this.opt('showNonCurrentDates')){activeUnzonedRange=activeUnzonedRange.intersect(currentInfo.unzonedRange);}minTime=moment.duration(this.opt('minTime'));maxTime=moment.duration(this.opt('maxTime'));activeUnzonedRange=this.adjustActiveRange(activeUnzonedRange,minTime,maxTime);activeUnzonedRange=activeUnzonedRange.intersect(validUnzonedRange);if(activeUnzonedRange){date=this.msToUtcMoment(activeUnzonedRange.constrainDate(date),isDateAllDay);}isValid=currentInfo.unzonedRange.intersectsWith(validUnzonedRange);return{validUnzonedRange:validUnzonedRange,currentUnzonedRange:currentInfo.unzonedRange,currentRangeUnit:currentInfo.unit,isRangeAllDay:isRangeAllDay,activeUnzonedRange:activeUnzonedRange,renderUnzonedRange:renderUnzonedRange,minTime:minTime,maxTime:maxTime,isValid:isValid,date:date,dateIncrement:this.buildDateIncrement(currentInfo.duration)};};DateProfileGenerator.prototype.buildValidRange=function(){return this._view.getUnzonedRangeOption('validRange',this._view.calendar.getNow())||new UnzonedRange_1.default();};DateProfileGenerator.prototype.buildCurrentRangeInfo=function(date,direction){var viewSpec=this._view.viewSpec;var duration=null;var unit=null;var unzonedRange=null;var dayCount;if(viewSpec.duration){duration=viewSpec.duration;unit=viewSpec.durationUnit;unzonedRange=this.buildRangeFromDuration(date,direction,duration,unit);}else if(dayCount=this.opt('dayCount')){unit='day';unzonedRange=this.buildRangeFromDayCount(date,direction,dayCount);}else if(unzonedRange=this.buildCustomVisibleRange(date)){unit=util_1.computeGreatestUnit(unzonedRange.getStart(),unzonedRange.getEnd());}else{duration=this.getFallbackDuration();unit=util_1.computeGreatestUnit(duration);unzonedRange=this.buildRangeFromDuration(date,direction,duration,unit);}return{duration:duration,unit:unit,unzonedRange:unzonedRange};};DateProfileGenerator.prototype.getFallbackDuration=function(){return moment.duration({days:1});};DateProfileGenerator.prototype.adjustActiveRange=function(unzonedRange,minTime,maxTime){var start=unzonedRange.getStart();var end=unzonedRange.getEnd();if(this._view.usesMinMaxTime){if(minTime<0){start.time(0).add(minTime);}if(maxTime>24*60*60*1000){end.time(maxTime-24*60*60*1000);}}return new UnzonedRange_1.default(start,end);};DateProfileGenerator.prototype.buildRangeFromDuration=function(date,direction,duration,unit){var alignment=this.opt('dateAlignment');var dateIncrementInput;var dateIncrementDuration;var start;var end;var res;if(!alignment){dateIncrementInput=this.opt('dateIncrement');if(dateIncrementInput){dateIncrementDuration=moment.duration(dateIncrementInput);if(dateIncrementDuration<duration){alignment=util_1.computeDurationGreatestUnit(dateIncrementDuration,dateIncrementInput);}else{alignment=unit;}}else{alignment=unit;}}if(duration.as('days')<=1){if(this._view.isHiddenDay(start)){start=this._view.skipHiddenDays(start,direction);start.startOf('day');}}function computeRes(){start=date.clone().startOf(alignment);end=start.clone().add(duration);res=new UnzonedRange_1.default(start,end);}computeRes();if(!this.trimHiddenDays(res)){date=this._view.skipHiddenDays(date,direction);computeRes();}return res;};DateProfileGenerator.prototype.buildRangeFromDayCount=function(date,direction,dayCount){var customAlignment=this.opt('dateAlignment');var runningCount=0;var start=date.clone();var end;if(customAlignment){start.startOf(customAlignment);}start.startOf('day');start=this._view.skipHiddenDays(start,direction);end=start.clone();do{end.add(1,'day');if(!this._view.isHiddenDay(end)){runningCount++;}}while(runningCount<dayCount);return new UnzonedRange_1.default(start,end);};DateProfileGenerator.prototype.buildCustomVisibleRange=function(date){var visibleUnzonedRange=this._view.getUnzonedRangeOption('visibleRange',this._view.calendar.applyTimezone(date));if(visibleUnzonedRange&&(visibleUnzonedRange.startMs==null||visibleUnzonedRange.endMs==null)){return null;}return visibleUnzonedRange;};DateProfileGenerator.prototype.buildRenderRange=function(currentUnzonedRange,currentRangeUnit,isRangeAllDay){return currentUnzonedRange.clone();};DateProfileGenerator.prototype.buildDateIncrement=function(fallback){var dateIncrementInput=this.opt('dateIncrement');var customAlignment;if(dateIncrementInput){return moment.duration(dateIncrementInput);}else if(customAlignment=this.opt('dateAlignment')){return moment.duration(1,customAlignment);}else if(fallback){return fallback;}else{return moment.duration({days:1});}};return DateProfileGenerator;}();exports.default=DateProfileGenerator;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var moment=__webpack_require__(0);var exportHooks=__webpack_require__(16);var util_1=__webpack_require__(4);var moment_ext_1=__webpack_require__(10);var ListenerMixin_1=__webpack_require__(7);var HitDragListener_1=__webpack_require__(23);var SingleEventDef_1=__webpack_require__(13);var EventInstanceGroup_1=__webpack_require__(18);var EventSource_1=__webpack_require__(6);var Interaction_1=__webpack_require__(15);var ExternalDropping=function(_super){tslib_1.__extends(ExternalDropping,_super);function ExternalDropping(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.isDragging=false;return _this;}ExternalDropping.prototype.end=function(){if(this.dragListener){this.dragListener.endInteraction();}};ExternalDropping.prototype.bindToDocument=function(){this.listenTo($(document),{dragstart:this.handleDragStart,sortstart:this.handleDragStart});};ExternalDropping.prototype.unbindFromDocument=function(){this.stopListeningTo($(document));};ExternalDropping.prototype.handleDragStart=function(ev,ui){var el;var accept;if(this.opt('droppable')){el=$((ui?ui.item:null)||ev.target);accept=this.opt('dropAccept');if($.isFunction(accept)?accept.call(el[0],el):el.is(accept)){if(!this.isDragging){this.listenToExternalDrag(el,ev,ui);}}}};ExternalDropping.prototype.listenToExternalDrag=function(el,ev,ui){var _this=this;var component=this.component;var view=this.view;var meta=getDraggedElMeta(el);var singleEventDef;var dragListener=this.dragListener=new HitDragListener_1.default(component,{interactionStart:function interactionStart(){_this.isDragging=true;},hitOver:function hitOver(hit){var isAllowed=true;var hitFootprint=hit.component.getSafeHitFootprint(hit);var mutatedEventInstanceGroup;if(hitFootprint){singleEventDef=_this.computeExternalDrop(hitFootprint,meta);if(singleEventDef){mutatedEventInstanceGroup=new EventInstanceGroup_1.default(singleEventDef.buildInstances());isAllowed=meta.eventProps?component.isEventInstanceGroupAllowed(mutatedEventInstanceGroup):component.isExternalInstanceGroupAllowed(mutatedEventInstanceGroup);}else{isAllowed=false;}}else{isAllowed=false;}if(!isAllowed){singleEventDef=null;util_1.disableCursor();}if(singleEventDef){component.renderDrag(component.eventRangesToEventFootprints(mutatedEventInstanceGroup.sliceRenderRanges(component.dateProfile.renderUnzonedRange,view.calendar)));}},hitOut:function hitOut(){singleEventDef=null;},hitDone:function hitDone(){util_1.enableCursor();component.unrenderDrag();},interactionEnd:function interactionEnd(ev){if(singleEventDef){view.reportExternalDrop(singleEventDef,Boolean(meta.eventProps),Boolean(meta.stick),el,ev,ui);}_this.isDragging=false;_this.dragListener=null;}});dragListener.startDrag(ev);};ExternalDropping.prototype.computeExternalDrop=function(componentFootprint,meta){var calendar=this.view.calendar;var start=moment_ext_1.default.utc(componentFootprint.unzonedRange.startMs).stripZone();var end;var eventDef;if(componentFootprint.isAllDay){if(meta.startTime){start.time(meta.startTime);}else{start.stripTime();}}if(meta.duration){end=start.clone().add(meta.duration);}start=calendar.applyTimezone(start);if(end){end=calendar.applyTimezone(end);}eventDef=SingleEventDef_1.default.parse($.extend({},meta.eventProps,{start:start,end:end}),new EventSource_1.default(calendar));return eventDef;};return ExternalDropping;}(Interaction_1.default);exports.default=ExternalDropping;ListenerMixin_1.default.mixInto(ExternalDropping);exportHooks.dataAttrPrefix='';function getDraggedElMeta(el){var prefix=exportHooks.dataAttrPrefix;var eventProps;var startTime;var duration;var stick;if(prefix){prefix+='-';}eventProps=el.data(prefix+'event')||null;if(eventProps){if((typeof eventProps==='undefined'?'undefined':Object(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_typeof__["default"])(eventProps))==='object'){eventProps=$.extend({},eventProps);}else{eventProps={};}startTime=eventProps.start;if(startTime==null){startTime=eventProps.time;}duration=eventProps.duration;stick=eventProps.stick;delete eventProps.start;delete eventProps.time;delete eventProps.duration;delete eventProps.stick;}if(startTime==null){startTime=el.data(prefix+'start');}if(startTime==null){startTime=el.data(prefix+'time');}if(duration==null){duration=el.data(prefix+'duration');}if(stick==null){stick=el.data(prefix+'stick');}startTime=startTime!=null?moment.duration(startTime):null;duration=duration!=null?moment.duration(duration):null;stick=Boolean(stick);return{eventProps:eventProps,startTime:startTime,duration:duration,stick:stick};}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var EventDefMutation_1=__webpack_require__(37);var EventDefDateMutation_1=__webpack_require__(50);var HitDragListener_1=__webpack_require__(23);var Interaction_1=__webpack_require__(15);var EventResizing=function(_super){tslib_1.__extends(EventResizing,_super);function EventResizing(component,eventPointing){var _this=_super.call(this,component)||this;_this.isResizing=false;_this.eventPointing=eventPointing;return _this;}EventResizing.prototype.end=function(){if(this.dragListener){this.dragListener.endInteraction();}};EventResizing.prototype.bindToEl=function(el){var component=this.component;component.bindSegHandlerToEl(el,'mousedown',this.handleMouseDown.bind(this));component.bindSegHandlerToEl(el,'touchstart',this.handleTouchStart.bind(this));};EventResizing.prototype.handleMouseDown=function(seg,ev){if(this.component.canStartResize(seg,ev)){this.buildDragListener(seg,$(ev.target).is('.fc-start-resizer')).startInteraction(ev,{distance:5});}};EventResizing.prototype.handleTouchStart=function(seg,ev){if(this.component.canStartResize(seg,ev)){this.buildDragListener(seg,$(ev.target).is('.fc-start-resizer')).startInteraction(ev);}};EventResizing.prototype.buildDragListener=function(seg,isStart){var _this=this;var component=this.component;var view=this.view;var calendar=view.calendar;var eventManager=calendar.eventManager;var el=seg.el;var eventDef=seg.footprint.eventDef;var eventInstance=seg.footprint.eventInstance;var isDragging;var resizeMutation;var dragListener=this.dragListener=new HitDragListener_1.default(component,{scroll:this.opt('dragScroll'),subjectEl:el,interactionStart:function interactionStart(){isDragging=false;},dragStart:function dragStart(ev){isDragging=true;_this.eventPointing.handleMouseout(seg,ev);_this.segResizeStart(seg,ev);},hitOver:function hitOver(hit,isOrig,origHit){var isAllowed=true;var origHitFootprint=component.getSafeHitFootprint(origHit);var hitFootprint=component.getSafeHitFootprint(hit);var mutatedEventInstanceGroup;if(origHitFootprint&&hitFootprint){resizeMutation=isStart?_this.computeEventStartResizeMutation(origHitFootprint,hitFootprint,seg.footprint):_this.computeEventEndResizeMutation(origHitFootprint,hitFootprint,seg.footprint);if(resizeMutation){mutatedEventInstanceGroup=eventManager.buildMutatedEventInstanceGroup(eventDef.id,resizeMutation);isAllowed=component.isEventInstanceGroupAllowed(mutatedEventInstanceGroup);}else{isAllowed=false;}}else{isAllowed=false;}if(!isAllowed){resizeMutation=null;util_1.disableCursor();}else if(resizeMutation.isEmpty()){resizeMutation=null;}if(resizeMutation){view.hideEventsWithId(seg.footprint.eventDef.id);view.renderEventResize(component.eventRangesToEventFootprints(mutatedEventInstanceGroup.sliceRenderRanges(component.dateProfile.renderUnzonedRange,calendar)),seg);}},hitOut:function hitOut(){resizeMutation=null;},hitDone:function hitDone(){view.unrenderEventResize(seg);view.showEventsWithId(seg.footprint.eventDef.id);util_1.enableCursor();},interactionEnd:function interactionEnd(ev){if(isDragging){_this.segResizeStop(seg,ev);}if(resizeMutation){view.reportEventResize(eventInstance,resizeMutation,el,ev);}_this.dragListener=null;}});return dragListener;};EventResizing.prototype.segResizeStart=function(seg,ev){this.isResizing=true;this.component.publiclyTrigger('eventResizeStart',{context:seg.el[0],args:[seg.footprint.getEventLegacy(),ev,{},this.view]});};EventResizing.prototype.segResizeStop=function(seg,ev){this.isResizing=false;this.component.publiclyTrigger('eventResizeStop',{context:seg.el[0],args:[seg.footprint.getEventLegacy(),ev,{},this.view]});};EventResizing.prototype.computeEventStartResizeMutation=function(startFootprint,endFootprint,origEventFootprint){var origRange=origEventFootprint.componentFootprint.unzonedRange;var startDelta=this.component.diffDates(endFootprint.unzonedRange.getStart(),startFootprint.unzonedRange.getStart());var dateMutation;var eventDefMutation;if(origRange.getStart().add(startDelta)<origRange.getEnd()){dateMutation=new EventDefDateMutation_1.default();dateMutation.setStartDelta(startDelta);eventDefMutation=new EventDefMutation_1.default();eventDefMutation.setDateMutation(dateMutation);return eventDefMutation;}return false;};EventResizing.prototype.computeEventEndResizeMutation=function(startFootprint,endFootprint,origEventFootprint){var origRange=origEventFootprint.componentFootprint.unzonedRange;var endDelta=this.component.diffDates(endFootprint.unzonedRange.getEnd(),startFootprint.unzonedRange.getEnd());var dateMutation;var eventDefMutation;if(origRange.getEnd().add(endDelta)>origRange.getStart()){dateMutation=new EventDefDateMutation_1.default();dateMutation.setEndDelta(endDelta);eventDefMutation=new EventDefMutation_1.default();eventDefMutation.setDateMutation(dateMutation);return eventDefMutation;}return false;};return EventResizing;}(Interaction_1.default);exports.default=EventResizing;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var util_1=__webpack_require__(4);var EventDefMutation_1=__webpack_require__(37);var EventDefDateMutation_1=__webpack_require__(50);var DragListener_1=__webpack_require__(54);var HitDragListener_1=__webpack_require__(23);var MouseFollower_1=__webpack_require__(244);var Interaction_1=__webpack_require__(15);var EventDragging=function(_super){tslib_1.__extends(EventDragging,_super);function EventDragging(component,eventPointing){var _this=_super.call(this,component)||this;_this.isDragging=false;_this.eventPointing=eventPointing;return _this;}EventDragging.prototype.end=function(){if(this.dragListener){this.dragListener.endInteraction();}};EventDragging.prototype.getSelectionDelay=function(){var delay=this.opt('eventLongPressDelay');if(delay==null){delay=this.opt('longPressDelay');}return delay;};EventDragging.prototype.bindToEl=function(el){var component=this.component;component.bindSegHandlerToEl(el,'mousedown',this.handleMousedown.bind(this));component.bindSegHandlerToEl(el,'touchstart',this.handleTouchStart.bind(this));};EventDragging.prototype.handleMousedown=function(seg,ev){if(!this.component.shouldIgnoreMouse()&&this.component.canStartDrag(seg,ev)){this.buildDragListener(seg).startInteraction(ev,{distance:5});}};EventDragging.prototype.handleTouchStart=function(seg,ev){var component=this.component;var settings={delay:this.view.isEventDefSelected(seg.footprint.eventDef)?0:this.getSelectionDelay()};if(component.canStartDrag(seg,ev)){this.buildDragListener(seg).startInteraction(ev,settings);}else if(component.canStartSelection(seg,ev)){this.buildSelectListener(seg).startInteraction(ev,settings);}};EventDragging.prototype.buildSelectListener=function(seg){var _this=this;var view=this.view;var eventDef=seg.footprint.eventDef;var eventInstance=seg.footprint.eventInstance;if(this.dragListener){return this.dragListener;}var dragListener=this.dragListener=new DragListener_1.default({dragStart:function dragStart(ev){if(dragListener.isTouch&&!view.isEventDefSelected(eventDef)&&eventInstance){view.selectEventInstance(eventInstance);}},interactionEnd:function interactionEnd(ev){_this.dragListener=null;}});return dragListener;};EventDragging.prototype.buildDragListener=function(seg){var _this=this;var component=this.component;var view=this.view;var calendar=view.calendar;var eventManager=calendar.eventManager;var el=seg.el;var eventDef=seg.footprint.eventDef;var eventInstance=seg.footprint.eventInstance;var isDragging;var mouseFollower;var eventDefMutation;if(this.dragListener){return this.dragListener;}var dragListener=this.dragListener=new HitDragListener_1.default(view,{scroll:this.opt('dragScroll'),subjectEl:el,subjectCenter:true,interactionStart:function interactionStart(ev){seg.component=component;isDragging=false;mouseFollower=new MouseFollower_1.default(seg.el,{additionalClass:'fc-dragging',parentEl:view.el,opacity:dragListener.isTouch?null:_this.opt('dragOpacity'),revertDuration:_this.opt('dragRevertDuration'),zIndex:2});mouseFollower.hide();mouseFollower.start(ev);},dragStart:function dragStart(ev){if(dragListener.isTouch&&!view.isEventDefSelected(eventDef)&&eventInstance){view.selectEventInstance(eventInstance);}isDragging=true;_this.eventPointing.handleMouseout(seg,ev);_this.segDragStart(seg,ev);view.hideEventsWithId(seg.footprint.eventDef.id);},hitOver:function hitOver(hit,isOrig,origHit){var isAllowed=true;var origFootprint;var footprint;var mutatedEventInstanceGroup;if(seg.hit){origHit=seg.hit;}origFootprint=origHit.component.getSafeHitFootprint(origHit);footprint=hit.component.getSafeHitFootprint(hit);if(origFootprint&&footprint){eventDefMutation=_this.computeEventDropMutation(origFootprint,footprint,eventDef);if(eventDefMutation){mutatedEventInstanceGroup=eventManager.buildMutatedEventInstanceGroup(eventDef.id,eventDefMutation);isAllowed=component.isEventInstanceGroupAllowed(mutatedEventInstanceGroup);}else{isAllowed=false;}}else{isAllowed=false;}if(!isAllowed){eventDefMutation=null;util_1.disableCursor();}if(eventDefMutation&&view.renderDrag(component.eventRangesToEventFootprints(mutatedEventInstanceGroup.sliceRenderRanges(component.dateProfile.renderUnzonedRange,calendar)),seg,dragListener.isTouch)){mouseFollower.hide();}else{mouseFollower.show();}if(isOrig){eventDefMutation=null;}},hitOut:function hitOut(){view.unrenderDrag(seg);mouseFollower.show();eventDefMutation=null;},hitDone:function hitDone(){util_1.enableCursor();},interactionEnd:function interactionEnd(ev){delete seg.component;mouseFollower.stop(!eventDefMutation,function(){if(isDragging){view.unrenderDrag(seg);_this.segDragStop(seg,ev);}view.showEventsWithId(seg.footprint.eventDef.id);if(eventDefMutation){view.reportEventDrop(eventInstance,eventDefMutation,el,ev);}});_this.dragListener=null;}});return dragListener;};EventDragging.prototype.segDragStart=function(seg,ev){this.isDragging=true;this.component.publiclyTrigger('eventDragStart',{context:seg.el[0],args:[seg.footprint.getEventLegacy(),ev,{},this.view]});};EventDragging.prototype.segDragStop=function(seg,ev){this.isDragging=false;this.component.publiclyTrigger('eventDragStop',{context:seg.el[0],args:[seg.footprint.getEventLegacy(),ev,{},this.view]});};EventDragging.prototype.computeEventDropMutation=function(startFootprint,endFootprint,eventDef){var eventDefMutation=new EventDefMutation_1.default();eventDefMutation.setDateMutation(this.computeEventDateMutation(startFootprint,endFootprint));return eventDefMutation;};EventDragging.prototype.computeEventDateMutation=function(startFootprint,endFootprint){var date0=startFootprint.unzonedRange.getStart();var date1=endFootprint.unzonedRange.getStart();var clearEnd=false;var forceTimed=false;var forceAllDay=false;var dateDelta;var dateMutation;if(startFootprint.isAllDay!==endFootprint.isAllDay){clearEnd=true;if(endFootprint.isAllDay){forceAllDay=true;date0.stripTime();}else{forceTimed=true;}}dateDelta=this.component.diffDates(date1,date0);dateMutation=new EventDefDateMutation_1.default();dateMutation.clearEnd=clearEnd;dateMutation.forceTimed=forceTimed;dateMutation.forceAllDay=forceAllDay;dateMutation.setDateDelta(dateDelta);return dateMutation;};return EventDragging;}(Interaction_1.default);exports.default=EventDragging;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var util_1=__webpack_require__(4);var HitDragListener_1=__webpack_require__(23);var ComponentFootprint_1=__webpack_require__(12);var UnzonedRange_1=__webpack_require__(5);var Interaction_1=__webpack_require__(15);var DateSelecting=function(_super){tslib_1.__extends(DateSelecting,_super);function DateSelecting(component){var _this=_super.call(this,component)||this;_this.dragListener=_this.buildDragListener();return _this;}DateSelecting.prototype.end=function(){this.dragListener.endInteraction();};DateSelecting.prototype.getDelay=function(){var delay=this.opt('selectLongPressDelay');if(delay==null){delay=this.opt('longPressDelay');}return delay;};DateSelecting.prototype.bindToEl=function(el){var _this=this;var component=this.component;var dragListener=this.dragListener;component.bindDateHandlerToEl(el,'mousedown',function(ev){if(_this.opt('selectable')&&!component.shouldIgnoreMouse()){dragListener.startInteraction(ev,{distance:_this.opt('selectMinDistance')});}});component.bindDateHandlerToEl(el,'touchstart',function(ev){if(_this.opt('selectable')&&!component.shouldIgnoreTouch()){dragListener.startInteraction(ev,{delay:_this.getDelay()});}});util_1.preventSelection(el);};DateSelecting.prototype.buildDragListener=function(){var _this=this;var component=this.component;var selectionFootprint;var dragListener=new HitDragListener_1.default(component,{scroll:this.opt('dragScroll'),interactionStart:function interactionStart(){selectionFootprint=null;},dragStart:function dragStart(ev){_this.view.unselect(ev);},hitOver:function hitOver(hit,isOrig,origHit){var origHitFootprint;var hitFootprint;if(origHit){origHitFootprint=component.getSafeHitFootprint(origHit);hitFootprint=component.getSafeHitFootprint(hit);if(origHitFootprint&&hitFootprint){selectionFootprint=_this.computeSelection(origHitFootprint,hitFootprint);}else{selectionFootprint=null;}if(selectionFootprint){component.renderSelectionFootprint(selectionFootprint);}else if(selectionFootprint===false){util_1.disableCursor();}}},hitOut:function hitOut(){selectionFootprint=null;component.unrenderSelection();},hitDone:function hitDone(){util_1.enableCursor();},interactionEnd:function interactionEnd(ev,isCancelled){if(!isCancelled&&selectionFootprint){_this.view.reportSelection(selectionFootprint,ev);}}});return dragListener;};DateSelecting.prototype.computeSelection=function(footprint0,footprint1){var wholeFootprint=this.computeSelectionFootprint(footprint0,footprint1);if(wholeFootprint&&!this.isSelectionFootprintAllowed(wholeFootprint)){return false;}return wholeFootprint;};DateSelecting.prototype.computeSelectionFootprint=function(footprint0,footprint1){var ms=[footprint0.unzonedRange.startMs,footprint0.unzonedRange.endMs,footprint1.unzonedRange.startMs,footprint1.unzonedRange.endMs];ms.sort(util_1.compareNumbers);return new ComponentFootprint_1.default(new UnzonedRange_1.default(ms[0],ms[3]),footprint0.isAllDay);};DateSelecting.prototype.isSelectionFootprintAllowed=function(componentFootprint){return this.component.dateProfile.validUnzonedRange.containsRange(componentFootprint.unzonedRange)&&this.view.calendar.constraints.isSelectionFootprintAllowed(componentFootprint);};return DateSelecting;}(Interaction_1.default);exports.default=DateSelecting;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var moment=__webpack_require__(0);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var Scroller_1=__webpack_require__(39);var View_1=__webpack_require__(41);var TimeGrid_1=__webpack_require__(227);var DayGrid_1=__webpack_require__(61);var AGENDA_ALL_DAY_EVENT_LIMIT=5;var agendaTimeGridMethods;var agendaDayGridMethods;var AgendaView=function(_super){tslib_1.__extends(AgendaView,_super);function AgendaView(calendar,viewSpec){var _this=_super.call(this,calendar,viewSpec)||this;_this.usesMinMaxTime=true;_this.timeGrid=_this.instantiateTimeGrid();_this.addChild(_this.timeGrid);if(_this.opt('allDaySlot')){_this.dayGrid=_this.instantiateDayGrid();_this.addChild(_this.dayGrid);}_this.scroller=new Scroller_1.default({overflowX:'hidden',overflowY:'auto'});return _this;}AgendaView.prototype.instantiateTimeGrid=function(){var timeGrid=new this.timeGridClass(this);util_1.copyOwnProps(agendaTimeGridMethods,timeGrid);return timeGrid;};AgendaView.prototype.instantiateDayGrid=function(){var dayGrid=new this.dayGridClass(this);util_1.copyOwnProps(agendaDayGridMethods,dayGrid);return dayGrid;};AgendaView.prototype.renderSkeleton=function(){var timeGridWrapEl;var timeGridEl;this.el.addClass('fc-agenda-view').html(this.renderSkeletonHtml());this.scroller.render();timeGridWrapEl=this.scroller.el.addClass('fc-time-grid-container');timeGridEl=$('<div class="fc-time-grid" />').appendTo(timeGridWrapEl);this.el.find('.fc-body > tr > td').append(timeGridWrapEl);this.timeGrid.headContainerEl=this.el.find('.fc-head-container');this.timeGrid.setElement(timeGridEl);if(this.dayGrid){this.dayGrid.setElement(this.el.find('.fc-day-grid'));this.dayGrid.bottomCoordPadding=this.dayGrid.el.next('hr').outerHeight();}};AgendaView.prototype.unrenderSkeleton=function(){this.timeGrid.removeElement();if(this.dayGrid){this.dayGrid.removeElement();}this.scroller.destroy();};AgendaView.prototype.renderSkeletonHtml=function(){var theme=this.calendar.theme;return''+'<table class="'+theme.getClass('tableGrid')+'">'+(this.opt('columnHeader')?'<thead class="fc-head">'+'<tr>'+'<td class="fc-head-container '+theme.getClass('widgetHeader')+'">&nbsp;</td>'+'</tr>'+'</thead>':'')+'<tbody class="fc-body">'+'<tr>'+'<td class="'+theme.getClass('widgetContent')+'">'+(this.dayGrid?'<div class="fc-day-grid"/>'+'<hr class="fc-divider '+theme.getClass('widgetHeader')+'"/>':'')+'</td>'+'</tr>'+'</tbody>'+'</table>';};AgendaView.prototype.axisStyleAttr=function(){if(this.axisWidth!=null){return'style="width:'+this.axisWidth+'px"';}return'';};AgendaView.prototype.getNowIndicatorUnit=function(){return this.timeGrid.getNowIndicatorUnit();};AgendaView.prototype.updateSize=function(totalHeight,isAuto,isResize){var eventLimit;var scrollerHeight;var scrollbarWidths;_super.prototype.updateSize.call(this,totalHeight,isAuto,isResize);this.axisWidth=util_1.matchCellWidths(this.el.find('.fc-axis'));if(!this.timeGrid.colEls){if(!isAuto){scrollerHeight=this.computeScrollerHeight(totalHeight);this.scroller.setHeight(scrollerHeight);}return;}var noScrollRowEls=this.el.find('.fc-row:not(.fc-scroller *)');this.timeGrid.bottomRuleEl.hide();this.scroller.clear();util_1.uncompensateScroll(noScrollRowEls);if(this.dayGrid){this.dayGrid.removeSegPopover();eventLimit=this.opt('eventLimit');if(eventLimit&&typeof eventLimit!=='number'){eventLimit=AGENDA_ALL_DAY_EVENT_LIMIT;}if(eventLimit){this.dayGrid.limitRows(eventLimit);}}if(!isAuto){scrollerHeight=this.computeScrollerHeight(totalHeight);this.scroller.setHeight(scrollerHeight);scrollbarWidths=this.scroller.getScrollbarWidths();if(scrollbarWidths.left||scrollbarWidths.right){util_1.compensateScroll(noScrollRowEls,scrollbarWidths);scrollerHeight=this.computeScrollerHeight(totalHeight);this.scroller.setHeight(scrollerHeight);}this.scroller.lockOverflow(scrollbarWidths);if(this.timeGrid.getTotalSlatHeight()<scrollerHeight){this.timeGrid.bottomRuleEl.show();}}};AgendaView.prototype.computeScrollerHeight=function(totalHeight){return totalHeight-util_1.subtractInnerElHeight(this.el,this.scroller.el);};AgendaView.prototype.computeInitialDateScroll=function(){var scrollTime=moment.duration(this.opt('scrollTime'));var top=this.timeGrid.computeTimeTop(scrollTime);top=Math.ceil(top);if(top){top++;}return{top:top};};AgendaView.prototype.queryDateScroll=function(){return{top:this.scroller.getScrollTop()};};AgendaView.prototype.applyDateScroll=function(scroll){if(scroll.top!==undefined){this.scroller.setScrollTop(scroll.top);}};AgendaView.prototype.getHitFootprint=function(hit){return hit.component.getHitFootprint(hit);};AgendaView.prototype.getHitEl=function(hit){return hit.component.getHitEl(hit);};AgendaView.prototype.executeEventRender=function(eventsPayload){var dayEventsPayload={};var timedEventsPayload={};var id;var eventInstanceGroup;for(id in eventsPayload){eventInstanceGroup=eventsPayload[id];if(eventInstanceGroup.getEventDef().isAllDay()){dayEventsPayload[id]=eventInstanceGroup;}else{timedEventsPayload[id]=eventInstanceGroup;}}this.timeGrid.executeEventRender(timedEventsPayload);if(this.dayGrid){this.dayGrid.executeEventRender(dayEventsPayload);}};AgendaView.prototype.renderDrag=function(eventFootprints,seg,isTouch){var groups=groupEventFootprintsByAllDay(eventFootprints);var renderedHelper=false;renderedHelper=this.timeGrid.renderDrag(groups.timed,seg,isTouch);if(this.dayGrid){renderedHelper=this.dayGrid.renderDrag(groups.allDay,seg,isTouch)||renderedHelper;}return renderedHelper;};AgendaView.prototype.renderEventResize=function(eventFootprints,seg,isTouch){var groups=groupEventFootprintsByAllDay(eventFootprints);this.timeGrid.renderEventResize(groups.timed,seg,isTouch);if(this.dayGrid){this.dayGrid.renderEventResize(groups.allDay,seg,isTouch);}};AgendaView.prototype.renderSelectionFootprint=function(componentFootprint){if(!componentFootprint.isAllDay){this.timeGrid.renderSelectionFootprint(componentFootprint);}else if(this.dayGrid){this.dayGrid.renderSelectionFootprint(componentFootprint);}};return AgendaView;}(View_1.default);exports.default=AgendaView;AgendaView.prototype.timeGridClass=TimeGrid_1.default;AgendaView.prototype.dayGridClass=DayGrid_1.default;agendaTimeGridMethods={renderHeadIntroHtml:function renderHeadIntroHtml(){var view=this.view;var calendar=view.calendar;var weekStart=calendar.msToUtcMoment(this.dateProfile.renderUnzonedRange.startMs,true);var weekText;if(this.opt('weekNumbers')){weekText=weekStart.format(this.opt('smallWeekFormat'));return''+'<th class="fc-axis fc-week-number '+calendar.theme.getClass('widgetHeader')+'" '+view.axisStyleAttr()+'>'+view.buildGotoAnchorHtml({date:weekStart,type:'week',forceOff:this.colCnt>1},util_1.htmlEscape(weekText))+'</th>';}else{return'<th class="fc-axis '+calendar.theme.getClass('widgetHeader')+'" '+view.axisStyleAttr()+'></th>';}},renderBgIntroHtml:function renderBgIntroHtml(){var view=this.view;return'<td class="fc-axis '+view.calendar.theme.getClass('widgetContent')+'" '+view.axisStyleAttr()+'></td>';},renderIntroHtml:function renderIntroHtml(){var view=this.view;return'<td class="fc-axis" '+view.axisStyleAttr()+'></td>';}};agendaDayGridMethods={renderBgIntroHtml:function renderBgIntroHtml(){var view=this.view;return''+'<td class="fc-axis '+view.calendar.theme.getClass('widgetContent')+'" '+view.axisStyleAttr()+'>'+'<span>'+view.getAllDayHtml()+'</span>'+'</td>';},renderIntroHtml:function renderIntroHtml(){var view=this.view;return'<td class="fc-axis" '+view.axisStyleAttr()+'></td>';}};function groupEventFootprintsByAllDay(eventFootprints){var allDay=[];var timed=[];var i;for(i=0;i<eventFootprints.length;i++){if(eventFootprints[i].componentFootprint.isAllDay){allDay.push(eventFootprints[i]);}else{timed.push(eventFootprints[i]);}}return{allDay:allDay,timed:timed};}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var moment=__webpack_require__(0);var util_1=__webpack_require__(4);var InteractiveDateComponent_1=__webpack_require__(40);var BusinessHourRenderer_1=__webpack_require__(56);var StandardInteractionsMixin_1=__webpack_require__(60);var DayTableMixin_1=__webpack_require__(55);var CoordCache_1=__webpack_require__(53);var UnzonedRange_1=__webpack_require__(5);var ComponentFootprint_1=__webpack_require__(12);var TimeGridEventRenderer_1=__webpack_require__(246);var TimeGridHelperRenderer_1=__webpack_require__(247);var TimeGridFillRenderer_1=__webpack_require__(248);var AGENDA_STOCK_SUB_DURATIONS=[{hours:1},{minutes:30},{minutes:15},{seconds:30},{seconds:15}];var TimeGrid=function(_super){tslib_1.__extends(TimeGrid,_super);function TimeGrid(view){var _this=_super.call(this,view)||this;_this.processOptions();return _this;}TimeGrid.prototype.componentFootprintToSegs=function(componentFootprint){var segs=this.sliceRangeByTimes(componentFootprint.unzonedRange);var i;for(i=0;i<segs.length;i++){if(this.isRTL){segs[i].col=this.daysPerRow-1-segs[i].dayIndex;}else{segs[i].col=segs[i].dayIndex;}}return segs;};TimeGrid.prototype.sliceRangeByTimes=function(unzonedRange){var segs=[];var segRange;var dayIndex;for(dayIndex=0;dayIndex<this.daysPerRow;dayIndex++){segRange=unzonedRange.intersect(this.dayRanges[dayIndex]);if(segRange){segs.push({startMs:segRange.startMs,endMs:segRange.endMs,isStart:segRange.isStart,isEnd:segRange.isEnd,dayIndex:dayIndex});}}return segs;};TimeGrid.prototype.processOptions=function(){var slotDuration=this.opt('slotDuration');var snapDuration=this.opt('snapDuration');var input;slotDuration=moment.duration(slotDuration);snapDuration=snapDuration?moment.duration(snapDuration):slotDuration;this.slotDuration=slotDuration;this.snapDuration=snapDuration;this.snapsPerSlot=slotDuration/snapDuration;input=this.opt('slotLabelFormat');if($.isArray(input)){input=input[input.length-1];}this.labelFormat=input||this.opt('smallTimeFormat');input=this.opt('slotLabelInterval');this.labelInterval=input?moment.duration(input):this.computeLabelInterval(slotDuration);};TimeGrid.prototype.computeLabelInterval=function(slotDuration){var i;var labelInterval;var slotsPerLabel;for(i=AGENDA_STOCK_SUB_DURATIONS.length-1;i>=0;i--){labelInterval=moment.duration(AGENDA_STOCK_SUB_DURATIONS[i]);slotsPerLabel=util_1.divideDurationByDuration(labelInterval,slotDuration);if(util_1.isInt(slotsPerLabel)&&slotsPerLabel>1){return labelInterval;}}return moment.duration(slotDuration);};TimeGrid.prototype.renderDates=function(dateProfile){this.dateProfile=dateProfile;this.updateDayTable();this.renderSlats();this.renderColumns();};TimeGrid.prototype.unrenderDates=function(){this.unrenderColumns();};TimeGrid.prototype.renderSkeleton=function(){var theme=this.view.calendar.theme;this.el.html('<div class="fc-bg"></div>'+'<div class="fc-slats"></div>'+'<hr class="fc-divider '+theme.getClass('widgetHeader')+'" style="display:none" />');this.bottomRuleEl=this.el.find('hr');};TimeGrid.prototype.renderSlats=function(){var theme=this.view.calendar.theme;this.slatContainerEl=this.el.find('> .fc-slats').html('<table class="'+theme.getClass('tableGrid')+'">'+this.renderSlatRowHtml()+'</table>');this.slatEls=this.slatContainerEl.find('tr');this.slatCoordCache=new CoordCache_1.default({els:this.slatEls,isVertical:true});};TimeGrid.prototype.renderSlatRowHtml=function(){var view=this.view;var calendar=view.calendar;var theme=calendar.theme;var isRTL=this.isRTL;var dateProfile=this.dateProfile;var html='';var slotTime=moment.duration(+dateProfile.minTime);var slotIterator=moment.duration(0);var slotDate;var isLabeled;var axisHtml;while(slotTime<dateProfile.maxTime){slotDate=calendar.msToUtcMoment(dateProfile.renderUnzonedRange.startMs).time(slotTime);isLabeled=util_1.isInt(util_1.divideDurationByDuration(slotIterator,this.labelInterval));axisHtml='<td class="fc-axis fc-time '+theme.getClass('widgetContent')+'" '+view.axisStyleAttr()+'>'+(isLabeled?'<span>'+util_1.htmlEscape(slotDate.format(this.labelFormat))+'</span>':'')+'</td>';html+='<tr data-time="'+slotDate.format('HH:mm:ss')+'"'+(isLabeled?'':' class="fc-minor"')+'>'+(!isRTL?axisHtml:'')+'<td class="'+theme.getClass('widgetContent')+'"/>'+(isRTL?axisHtml:'')+'</tr>';slotTime.add(this.slotDuration);slotIterator.add(this.slotDuration);}return html;};TimeGrid.prototype.renderColumns=function(){var dateProfile=this.dateProfile;var theme=this.view.calendar.theme;this.dayRanges=this.dayDates.map(function(dayDate){return new UnzonedRange_1.default(dayDate.clone().add(dateProfile.minTime),dayDate.clone().add(dateProfile.maxTime));});if(this.headContainerEl){this.headContainerEl.html(this.renderHeadHtml());}this.el.find('> .fc-bg').html('<table class="'+theme.getClass('tableGrid')+'">'+this.renderBgTrHtml(0)+'</table>');this.colEls=this.el.find('.fc-day, .fc-disabled-day');this.colCoordCache=new CoordCache_1.default({els:this.colEls,isHorizontal:true});this.renderContentSkeleton();};TimeGrid.prototype.unrenderColumns=function(){this.unrenderContentSkeleton();};TimeGrid.prototype.renderContentSkeleton=function(){var cellHtml='';var i;var skeletonEl;for(i=0;i<this.colCnt;i++){cellHtml+='<td>'+'<div class="fc-content-col">'+'<div class="fc-event-container fc-helper-container"></div>'+'<div class="fc-event-container"></div>'+'<div class="fc-highlight-container"></div>'+'<div class="fc-bgevent-container"></div>'+'<div class="fc-business-container"></div>'+'</div>'+'</td>';}skeletonEl=this.contentSkeletonEl=$('<div class="fc-content-skeleton">'+'<table>'+'<tr>'+cellHtml+'</tr>'+'</table>'+'</div>');this.colContainerEls=skeletonEl.find('.fc-content-col');this.helperContainerEls=skeletonEl.find('.fc-helper-container');this.fgContainerEls=skeletonEl.find('.fc-event-container:not(.fc-helper-container)');this.bgContainerEls=skeletonEl.find('.fc-bgevent-container');this.highlightContainerEls=skeletonEl.find('.fc-highlight-container');this.businessContainerEls=skeletonEl.find('.fc-business-container');this.bookendCells(skeletonEl.find('tr'));this.el.append(skeletonEl);};TimeGrid.prototype.unrenderContentSkeleton=function(){if(this.contentSkeletonEl){this.contentSkeletonEl.remove();this.contentSkeletonEl=null;this.colContainerEls=null;this.helperContainerEls=null;this.fgContainerEls=null;this.bgContainerEls=null;this.highlightContainerEls=null;this.businessContainerEls=null;}};TimeGrid.prototype.groupSegsByCol=function(segs){var segsByCol=[];var i;for(i=0;i<this.colCnt;i++){segsByCol.push([]);}for(i=0;i<segs.length;i++){segsByCol[segs[i].col].push(segs[i]);}return segsByCol;};TimeGrid.prototype.attachSegsByCol=function(segsByCol,containerEls){var col;var segs;var i;for(col=0;col<this.colCnt;col++){segs=segsByCol[col];for(i=0;i<segs.length;i++){containerEls.eq(col).append(segs[i].el);}}};TimeGrid.prototype.getNowIndicatorUnit=function(){return'minute';};TimeGrid.prototype.renderNowIndicator=function(date){if(!this.colContainerEls){return;}var segs=this.componentFootprintToSegs(new ComponentFootprint_1.default(new UnzonedRange_1.default(date,date.valueOf()+1),false));var top=this.computeDateTop(date,date);var nodes=[];var i;for(i=0;i<segs.length;i++){nodes.push($('<div class="fc-now-indicator fc-now-indicator-line"></div>').css('top',top).appendTo(this.colContainerEls.eq(segs[i].col))[0]);}if(segs.length>0){nodes.push($('<div class="fc-now-indicator fc-now-indicator-arrow"></div>').css('top',top).appendTo(this.el.find('.fc-content-skeleton'))[0]);}this.nowIndicatorEls=$(nodes);};TimeGrid.prototype.unrenderNowIndicator=function(){if(this.nowIndicatorEls){this.nowIndicatorEls.remove();this.nowIndicatorEls=null;}};TimeGrid.prototype.updateSize=function(totalHeight,isAuto,isResize){_super.prototype.updateSize.call(this,totalHeight,isAuto,isResize);this.slatCoordCache.build();if(isResize){this.updateSegVerticals([].concat(this.eventRenderer.getSegs(),this.businessSegs||[]));}};TimeGrid.prototype.getTotalSlatHeight=function(){return this.slatContainerEl.outerHeight();};TimeGrid.prototype.computeDateTop=function(ms,startOfDayDate){return this.computeTimeTop(moment.duration(ms-startOfDayDate.clone().stripTime()));};TimeGrid.prototype.computeTimeTop=function(time){var len=this.slatEls.length;var dateProfile=this.dateProfile;var slatCoverage=(time-dateProfile.minTime)/this.slotDuration;var slatIndex;var slatRemainder;slatCoverage=Math.max(0,slatCoverage);slatCoverage=Math.min(len,slatCoverage);slatIndex=Math.floor(slatCoverage);slatIndex=Math.min(slatIndex,len-1);slatRemainder=slatCoverage-slatIndex;return this.slatCoordCache.getTopPosition(slatIndex)+this.slatCoordCache.getHeight(slatIndex)*slatRemainder;};TimeGrid.prototype.updateSegVerticals=function(segs){this.computeSegVerticals(segs);this.assignSegVerticals(segs);};TimeGrid.prototype.computeSegVerticals=function(segs){var eventMinHeight=this.opt('agendaEventMinHeight');var i;var seg;var dayDate;for(i=0;i<segs.length;i++){seg=segs[i];dayDate=this.dayDates[seg.dayIndex];seg.top=this.computeDateTop(seg.startMs,dayDate);seg.bottom=Math.max(seg.top+eventMinHeight,this.computeDateTop(seg.endMs,dayDate));}};TimeGrid.prototype.assignSegVerticals=function(segs){var i;var seg;for(i=0;i<segs.length;i++){seg=segs[i];seg.el.css(this.generateSegVerticalCss(seg));}};TimeGrid.prototype.generateSegVerticalCss=function(seg){return{top:seg.top,bottom:-seg.bottom};};TimeGrid.prototype.prepareHits=function(){this.colCoordCache.build();this.slatCoordCache.build();};TimeGrid.prototype.releaseHits=function(){this.colCoordCache.clear();};TimeGrid.prototype.queryHit=function(leftOffset,topOffset){var snapsPerSlot=this.snapsPerSlot;var colCoordCache=this.colCoordCache;var slatCoordCache=this.slatCoordCache;if(colCoordCache.isLeftInBounds(leftOffset)&&slatCoordCache.isTopInBounds(topOffset)){var colIndex=colCoordCache.getHorizontalIndex(leftOffset);var slatIndex=slatCoordCache.getVerticalIndex(topOffset);if(colIndex!=null&&slatIndex!=null){var slatTop=slatCoordCache.getTopOffset(slatIndex);var slatHeight=slatCoordCache.getHeight(slatIndex);var partial=(topOffset-slatTop)/slatHeight;var localSnapIndex=Math.floor(partial*snapsPerSlot);var snapIndex=slatIndex*snapsPerSlot+localSnapIndex;var snapTop=slatTop+localSnapIndex/snapsPerSlot*slatHeight;var snapBottom=slatTop+(localSnapIndex+1)/snapsPerSlot*slatHeight;return{col:colIndex,snap:snapIndex,component:this,left:colCoordCache.getLeftOffset(colIndex),right:colCoordCache.getRightOffset(colIndex),top:snapTop,bottom:snapBottom};}}};TimeGrid.prototype.getHitFootprint=function(hit){var start=this.getCellDate(0,hit.col);var time=this.computeSnapTime(hit.snap);var end;start.time(time);end=start.clone().add(this.snapDuration);return new ComponentFootprint_1.default(new UnzonedRange_1.default(start,end),false);};TimeGrid.prototype.computeSnapTime=function(snapIndex){return moment.duration(this.dateProfile.minTime+this.snapDuration*snapIndex);};TimeGrid.prototype.getHitEl=function(hit){return this.colEls.eq(hit.col);};TimeGrid.prototype.renderDrag=function(eventFootprints,seg,isTouch){var i;if(seg){if(eventFootprints.length){this.helperRenderer.renderEventDraggingFootprints(eventFootprints,seg,isTouch);return true;}}else{for(i=0;i<eventFootprints.length;i++){this.renderHighlight(eventFootprints[i].componentFootprint);}}};TimeGrid.prototype.unrenderDrag=function(){this.unrenderHighlight();this.helperRenderer.unrender();};TimeGrid.prototype.renderEventResize=function(eventFootprints,seg,isTouch){this.helperRenderer.renderEventResizingFootprints(eventFootprints,seg,isTouch);};TimeGrid.prototype.unrenderEventResize=function(){this.helperRenderer.unrender();};TimeGrid.prototype.renderSelectionFootprint=function(componentFootprint){if(this.opt('selectHelper')){this.helperRenderer.renderComponentFootprint(componentFootprint);}else{this.renderHighlight(componentFootprint);}};TimeGrid.prototype.unrenderSelection=function(){this.helperRenderer.unrender();this.unrenderHighlight();};return TimeGrid;}(InteractiveDateComponent_1.default);exports.default=TimeGrid;TimeGrid.prototype.eventRendererClass=TimeGridEventRenderer_1.default;TimeGrid.prototype.businessHourRendererClass=BusinessHourRenderer_1.default;TimeGrid.prototype.helperRendererClass=TimeGridHelperRenderer_1.default;TimeGrid.prototype.fillRendererClass=TimeGridFillRenderer_1.default;StandardInteractionsMixin_1.default.mixInto(TimeGrid);DayTableMixin_1.default.mixInto(TimeGrid);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var UnzonedRange_1=__webpack_require__(5);var DateProfileGenerator_1=__webpack_require__(221);var BasicViewDateProfileGenerator=function(_super){tslib_1.__extends(BasicViewDateProfileGenerator,_super);function BasicViewDateProfileGenerator(){return _super!==null&&_super.apply(this,arguments)||this;}BasicViewDateProfileGenerator.prototype.buildRenderRange=function(currentUnzonedRange,currentRangeUnit,isRangeAllDay){var renderUnzonedRange=_super.prototype.buildRenderRange.call(this,currentUnzonedRange,currentRangeUnit,isRangeAllDay);var start=this.msToUtcMoment(renderUnzonedRange.startMs,isRangeAllDay);var end=this.msToUtcMoment(renderUnzonedRange.endMs,isRangeAllDay);if(/^(year|month)$/.test(currentRangeUnit)){start.startOf('week');if(end.weekday()){end.add(1,'week').startOf('week');}}return new UnzonedRange_1.default(start,end);};return BasicViewDateProfileGenerator;}(DateProfileGenerator_1.default);exports.default=BasicViewDateProfileGenerator;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var moment=__webpack_require__(0);var util_1=__webpack_require__(4);var BasicView_1=__webpack_require__(62);var MonthViewDateProfileGenerator_1=__webpack_require__(253);var MonthView=function(_super){tslib_1.__extends(MonthView,_super);function MonthView(){return _super!==null&&_super.apply(this,arguments)||this;}MonthView.prototype.setGridHeight=function(height,isAuto){if(isAuto){height*=this.dayGrid.rowCnt/6;}util_1.distributeHeight(this.dayGrid.rowEls,height,!isAuto);};MonthView.prototype.isDateInOtherMonth=function(date,dateProfile){return date.month()!==moment.utc(dateProfile.currentUnzonedRange.startMs).month();};return MonthView;}(BasicView_1.default);exports.default=MonthView;MonthView.prototype.dateProfileGeneratorClass=MonthViewDateProfileGenerator_1.default;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var UnzonedRange_1=__webpack_require__(5);var View_1=__webpack_require__(41);var Scroller_1=__webpack_require__(39);var ListEventRenderer_1=__webpack_require__(254);var ListEventPointing_1=__webpack_require__(255);var ListView=function(_super){tslib_1.__extends(ListView,_super);function ListView(calendar,viewSpec){var _this=_super.call(this,calendar,viewSpec)||this;_this.segSelector='.fc-list-item';_this.scroller=new Scroller_1.default({overflowX:'hidden',overflowY:'auto'});return _this;}ListView.prototype.renderSkeleton=function(){this.el.addClass('fc-list-view '+this.calendar.theme.getClass('listView'));this.scroller.render();this.scroller.el.appendTo(this.el);this.contentEl=this.scroller.scrollEl;};ListView.prototype.unrenderSkeleton=function(){this.scroller.destroy();};ListView.prototype.updateSize=function(totalHeight,isAuto,isResize){_super.prototype.updateSize.call(this,totalHeight,isAuto,isResize);this.scroller.clear();if(!isAuto){this.scroller.setHeight(this.computeScrollerHeight(totalHeight));}};ListView.prototype.computeScrollerHeight=function(totalHeight){return totalHeight-util_1.subtractInnerElHeight(this.el,this.scroller.el);};ListView.prototype.renderDates=function(dateProfile){var calendar=this.calendar;var dayStart=calendar.msToUtcMoment(dateProfile.renderUnzonedRange.startMs,true);var viewEnd=calendar.msToUtcMoment(dateProfile.renderUnzonedRange.endMs,true);var dayDates=[];var dayRanges=[];while(dayStart<viewEnd){dayDates.push(dayStart.clone());dayRanges.push(new UnzonedRange_1.default(dayStart,dayStart.clone().add(1,'day')));dayStart.add(1,'day');}this.dayDates=dayDates;this.dayRanges=dayRanges;};ListView.prototype.componentFootprintToSegs=function(footprint){var dayRanges=this.dayRanges;var dayIndex;var segRange;var seg;var segs=[];for(dayIndex=0;dayIndex<dayRanges.length;dayIndex++){segRange=footprint.unzonedRange.intersect(dayRanges[dayIndex]);if(segRange){seg={startMs:segRange.startMs,endMs:segRange.endMs,isStart:segRange.isStart,isEnd:segRange.isEnd,dayIndex:dayIndex};segs.push(seg);if(!seg.isEnd&&!footprint.isAllDay&&dayIndex+1<dayRanges.length&&footprint.unzonedRange.endMs<dayRanges[dayIndex+1].startMs+this.nextDayThreshold){seg.endMs=footprint.unzonedRange.endMs;seg.isEnd=true;break;}}}return segs;};ListView.prototype.renderEmptyMessage=function(){this.contentEl.html('<div class="fc-list-empty-wrap2">'+'<div class="fc-list-empty-wrap1">'+'<div class="fc-list-empty">'+util_1.htmlEscape(this.opt('noEventsMessage'))+'</div>'+'</div>'+'</div>');};ListView.prototype.renderSegList=function(allSegs){var segsByDay=this.groupSegsByDay(allSegs);var dayIndex;var daySegs;var i;var tableEl=$('<table class="fc-list-table '+this.calendar.theme.getClass('tableList')+'"><tbody/></table>');var tbodyEl=tableEl.find('tbody');for(dayIndex=0;dayIndex<segsByDay.length;dayIndex++){daySegs=segsByDay[dayIndex];if(daySegs){tbodyEl.append(this.dayHeaderHtml(this.dayDates[dayIndex]));this.eventRenderer.sortEventSegs(daySegs);for(i=0;i<daySegs.length;i++){tbodyEl.append(daySegs[i].el);}}}this.contentEl.empty().append(tableEl);};ListView.prototype.groupSegsByDay=function(segs){var segsByDay=[];var i;var seg;for(i=0;i<segs.length;i++){seg=segs[i];(segsByDay[seg.dayIndex]||(segsByDay[seg.dayIndex]=[])).push(seg);}return segsByDay;};ListView.prototype.dayHeaderHtml=function(dayDate){var mainFormat=this.opt('listDayFormat');var altFormat=this.opt('listDayAltFormat');return'<tr class="fc-list-heading" data-date="'+dayDate.format('YYYY-MM-DD')+'">'+'<td class="'+(this.calendar.theme.getClass('tableListHeading')||this.calendar.theme.getClass('widgetHeader'))+'" colspan="3">'+(mainFormat?this.buildGotoAnchorHtml(dayDate,{'class':'fc-list-heading-main'},util_1.htmlEscape(dayDate.format(mainFormat))):'')+(altFormat?this.buildGotoAnchorHtml(dayDate,{'class':'fc-list-heading-alt'},util_1.htmlEscape(dayDate.format(altFormat))):'')+'</td>'+'</tr>';};return ListView;}(View_1.default);exports.default=ListView;ListView.prototype.eventRendererClass=ListEventRenderer_1.default;ListView.prototype.eventPointingClass=ListEventPointing_1.default;},,,,,,function(module,exports,__webpack_require__){var $=__webpack_require__(3);var exportHooks=__webpack_require__(16);var util_1=__webpack_require__(4);var Calendar_1=__webpack_require__(220);__webpack_require__(10);__webpack_require__(47);__webpack_require__(256);__webpack_require__(257);__webpack_require__(260);__webpack_require__(261);__webpack_require__(262);__webpack_require__(263);$.fullCalendar=exportHooks;$.fn.fullCalendar=function(options){var args=Array.prototype.slice.call(arguments,1);var res=this;this.each(function(i,_element){var element=$(_element);var calendar=element.data('fullCalendar');var singleRes;if(typeof options==='string'){if(options==='getCalendar'){if(!i){res=calendar;}}else if(options==='destroy'){if(calendar){calendar.destroy();element.removeData('fullCalendar');}}else if(!calendar){util_1.warn('Attempting to call a FullCalendar method on an element with no calendar.');}else if($.isFunction(calendar[options])){singleRes=calendar[options].apply(calendar,args);if(!i){res=singleRes;}if(options==='destroy'){element.removeData('fullCalendar');}}else{util_1.warn("'"+options+"' is an unknown FullCalendar method.");}}else if(!calendar){calendar=new Calendar_1.default(element,options);element.data('fullCalendar',calendar);calendar.render();}});return res;};module.exports=exportHooks;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var Model_1=__webpack_require__(48);var Component=function(_super){tslib_1.__extends(Component,_super);function Component(){return _super!==null&&_super.apply(this,arguments)||this;}Component.prototype.setElement=function(el){this.el=el;this.bindGlobalHandlers();this.renderSkeleton();this.set('isInDom',true);};Component.prototype.removeElement=function(){this.unset('isInDom');this.unrenderSkeleton();this.unbindGlobalHandlers();this.el.remove();};Component.prototype.bindGlobalHandlers=function(){};Component.prototype.unbindGlobalHandlers=function(){};Component.prototype.renderSkeleton=function(){};Component.prototype.unrenderSkeleton=function(){};return Component;}(Model_1.default);exports.default=Component;},function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var Iterator=function(){function Iterator(items){this.items=items||[];}Iterator.prototype.proxyCall=function(methodName){var args=[];for(var _i=1;_i<arguments.length;_i++){args[_i-1]=arguments[_i];}var results=[];this.items.forEach(function(item){results.push(item[methodName].apply(item,args));});return results;};return Iterator;}();exports.default=Iterator;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var util_1=__webpack_require__(4);var Toolbar=function(){function Toolbar(calendar,toolbarOptions){this.el=null;this.viewsWithButtons=[];this.calendar=calendar;this.toolbarOptions=toolbarOptions;}Toolbar.prototype.setToolbarOptions=function(newToolbarOptions){this.toolbarOptions=newToolbarOptions;};Toolbar.prototype.render=function(){var sections=this.toolbarOptions.layout;var el=this.el;if(sections){if(!el){el=this.el=$("<div class='fc-toolbar "+this.toolbarOptions.extraClasses+"'/>");}else{el.empty();}el.append(this.renderSection('left')).append(this.renderSection('right')).append(this.renderSection('center')).append('<div class="fc-clear"/>');}else{this.removeElement();}};Toolbar.prototype.removeElement=function(){if(this.el){this.el.remove();this.el=null;}};Toolbar.prototype.renderSection=function(position){var _this=this;var calendar=this.calendar;var theme=calendar.theme;var optionsManager=calendar.optionsManager;var viewSpecManager=calendar.viewSpecManager;var sectionEl=$('<div class="fc-'+position+'"/>');var buttonStr=this.toolbarOptions.layout[position];var calendarCustomButtons=optionsManager.get('customButtons')||{};var calendarButtonTextOverrides=optionsManager.overrides.buttonText||{};var calendarButtonText=optionsManager.get('buttonText')||{};if(buttonStr){$.each(buttonStr.split(' '),function(i,buttonGroupStr){var groupChildren=$();var isOnlyButtons=true;var groupEl;$.each(buttonGroupStr.split(','),function(j,buttonName){var customButtonProps;var viewSpec;var buttonClick;var buttonIcon;var buttonText;var buttonInnerHtml;var buttonClasses;var buttonEl;var buttonAriaAttr;if(buttonName==='title'){groupChildren=groupChildren.add($('<h2>&nbsp;</h2>'));isOnlyButtons=false;}else{if(customButtonProps=calendarCustomButtons[buttonName]){buttonClick=function buttonClick(ev){if(customButtonProps.click){customButtonProps.click.call(buttonEl[0],ev);}};(buttonIcon=theme.getCustomButtonIconClass(customButtonProps))||(buttonIcon=theme.getIconClass(buttonName))||(buttonText=customButtonProps.text);}else if(viewSpec=viewSpecManager.getViewSpec(buttonName)){_this.viewsWithButtons.push(buttonName);buttonClick=function buttonClick(){calendar.changeView(buttonName);};(buttonText=viewSpec.buttonTextOverride)||(buttonIcon=theme.getIconClass(buttonName))||(buttonText=viewSpec.buttonTextDefault);}else if(calendar[buttonName]){buttonClick=function buttonClick(){calendar[buttonName]();};(buttonText=calendarButtonTextOverrides[buttonName])||(buttonIcon=theme.getIconClass(buttonName))||(buttonText=calendarButtonText[buttonName]);}if(buttonClick){buttonClasses=['fc-'+buttonName+'-button',theme.getClass('button'),theme.getClass('stateDefault')];if(buttonText){buttonInnerHtml=util_1.htmlEscape(buttonText);buttonAriaAttr='';}else if(buttonIcon){buttonInnerHtml="<span class='"+buttonIcon+"'></span>";buttonAriaAttr=' aria-label="'+buttonName+'"';}buttonEl=$('<button type="button" class="'+buttonClasses.join(' ')+'"'+buttonAriaAttr+'>'+buttonInnerHtml+'</button>').click(function(ev){if(!buttonEl.hasClass(theme.getClass('stateDisabled'))){buttonClick(ev);if(buttonEl.hasClass(theme.getClass('stateActive'))||buttonEl.hasClass(theme.getClass('stateDisabled'))){buttonEl.removeClass(theme.getClass('stateHover'));}}}).mousedown(function(){buttonEl.not('.'+theme.getClass('stateActive')).not('.'+theme.getClass('stateDisabled')).addClass(theme.getClass('stateDown'));}).mouseup(function(){buttonEl.removeClass(theme.getClass('stateDown'));}).hover(function(){buttonEl.not('.'+theme.getClass('stateActive')).not('.'+theme.getClass('stateDisabled')).addClass(theme.getClass('stateHover'));},function(){buttonEl.removeClass(theme.getClass('stateHover')).removeClass(theme.getClass('stateDown'));});groupChildren=groupChildren.add(buttonEl);}}});if(isOnlyButtons){groupChildren.first().addClass(theme.getClass('cornerLeft')).end().last().addClass(theme.getClass('cornerRight')).end();}if(groupChildren.length>1){groupEl=$('<div/>');if(isOnlyButtons){groupEl.addClass(theme.getClass('buttonGroup'));}groupEl.append(groupChildren);sectionEl.append(groupEl);}else{sectionEl.append(groupChildren);}});}return sectionEl;};Toolbar.prototype.updateTitle=function(text){if(this.el){this.el.find('h2').text(text);}};Toolbar.prototype.activateButton=function(buttonName){if(this.el){this.el.find('.fc-'+buttonName+'-button').addClass(this.calendar.theme.getClass('stateActive'));}};Toolbar.prototype.deactivateButton=function(buttonName){if(this.el){this.el.find('.fc-'+buttonName+'-button').removeClass(this.calendar.theme.getClass('stateActive'));}};Toolbar.prototype.disableButton=function(buttonName){if(this.el){this.el.find('.fc-'+buttonName+'-button').prop('disabled',true).addClass(this.calendar.theme.getClass('stateDisabled'));}};Toolbar.prototype.enableButton=function(buttonName){if(this.el){this.el.find('.fc-'+buttonName+'-button').prop('disabled',false).removeClass(this.calendar.theme.getClass('stateDisabled'));}};Toolbar.prototype.getViewsWithButtons=function(){return this.viewsWithButtons;};return Toolbar;}();exports.default=Toolbar;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var options_1=__webpack_require__(32);var locale_1=__webpack_require__(31);var Model_1=__webpack_require__(48);var OptionsManager=function(_super){tslib_1.__extends(OptionsManager,_super);function OptionsManager(_calendar,overrides){var _this=_super.call(this)||this;_this._calendar=_calendar;_this.overrides=$.extend({},overrides);_this.dynamicOverrides={};_this.compute();return _this;}OptionsManager.prototype.add=function(newOptionHash){var optionCnt=0;var optionName;this.recordOverrides(newOptionHash);for(optionName in newOptionHash){optionCnt++;}if(optionCnt===1){if(optionName==='height'||optionName==='contentHeight'||optionName==='aspectRatio'){this._calendar.updateViewSize(true);return;}else if(optionName==='defaultDate'){return;}else if(optionName==='businessHours'){return;}else if(/^(event|select)(Overlap|Constraint|Allow)$/.test(optionName)){return;}else if(optionName==='timezone'){this._calendar.view.flash('initialEvents');return;}}this._calendar.renderHeader();this._calendar.renderFooter();this._calendar.viewsByType={};this._calendar.reinitView();};OptionsManager.prototype.compute=function(){var locale;var localeDefaults;var isRTL;var dirDefaults;var rawOptions;locale=util_1.firstDefined(this.dynamicOverrides.locale,this.overrides.locale);localeDefaults=locale_1.localeOptionHash[locale];if(!localeDefaults){locale=options_1.globalDefaults.locale;localeDefaults=locale_1.localeOptionHash[locale]||{};}isRTL=util_1.firstDefined(this.dynamicOverrides.isRTL,this.overrides.isRTL,localeDefaults.isRTL,options_1.globalDefaults.isRTL);dirDefaults=isRTL?options_1.rtlDefaults:{};this.dirDefaults=dirDefaults;this.localeDefaults=localeDefaults;rawOptions=options_1.mergeOptions([options_1.globalDefaults,dirDefaults,localeDefaults,this.overrides,this.dynamicOverrides]);locale_1.populateInstanceComputableOptions(rawOptions);this.reset(rawOptions);};OptionsManager.prototype.recordOverrides=function(newOptionHash){var optionName;for(optionName in newOptionHash){this.dynamicOverrides[optionName]=newOptionHash[optionName];}this._calendar.viewSpecManager.clearCache();this.compute();};return OptionsManager;}(Model_1.default);exports.default=OptionsManager;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var moment=__webpack_require__(0);var $=__webpack_require__(3);var ViewRegistry_1=__webpack_require__(22);var util_1=__webpack_require__(4);var options_1=__webpack_require__(32);var locale_1=__webpack_require__(31);var ViewSpecManager=function(){function ViewSpecManager(optionsManager,_calendar){this.optionsManager=optionsManager;this._calendar=_calendar;this.clearCache();}ViewSpecManager.prototype.clearCache=function(){this.viewSpecCache={};};ViewSpecManager.prototype.getViewSpec=function(viewType){var cache=this.viewSpecCache;return cache[viewType]||(cache[viewType]=this.buildViewSpec(viewType));};ViewSpecManager.prototype.getUnitViewSpec=function(unit){var viewTypes;var i;var spec;if($.inArray(unit,util_1.unitsDesc)!==-1){viewTypes=this._calendar.header.getViewsWithButtons();$.each(ViewRegistry_1.viewHash,function(viewType){viewTypes.push(viewType);});for(i=0;i<viewTypes.length;i++){spec=this.getViewSpec(viewTypes[i]);if(spec){if(spec.singleUnit===unit){return spec;}}}}};ViewSpecManager.prototype.buildViewSpec=function(requestedViewType){var viewOverrides=this.optionsManager.overrides.views||{};var specChain=[];var defaultsChain=[];var overridesChain=[];var viewType=requestedViewType;var spec;var overrides;var durationInput;var duration;var unit;while(viewType){spec=ViewRegistry_1.viewHash[viewType];overrides=viewOverrides[viewType];viewType=null;if(typeof spec==='function'){spec={'class':spec};}if(spec){specChain.unshift(spec);defaultsChain.unshift(spec.defaults||{});durationInput=durationInput||spec.duration;viewType=viewType||spec.type;}if(overrides){overridesChain.unshift(overrides);durationInput=durationInput||overrides.duration;viewType=viewType||overrides.type;}}spec=util_1.mergeProps(specChain);spec.type=requestedViewType;if(!spec['class']){return false;}durationInput=durationInput||this.optionsManager.dynamicOverrides.duration||this.optionsManager.overrides.duration;if(durationInput){duration=moment.duration(durationInput);if(duration.valueOf()){unit=util_1.computeDurationGreatestUnit(duration,durationInput);spec.duration=duration;spec.durationUnit=unit;if(duration.as(unit)===1){spec.singleUnit=unit;overridesChain.unshift(viewOverrides[unit]||{});}}}spec.defaults=options_1.mergeOptions(defaultsChain);spec.overrides=options_1.mergeOptions(overridesChain);this.buildViewSpecOptions(spec);this.buildViewSpecButtonText(spec,requestedViewType);return spec;};ViewSpecManager.prototype.buildViewSpecOptions=function(spec){var optionsManager=this.optionsManager;spec.options=options_1.mergeOptions([options_1.globalDefaults,spec.defaults,optionsManager.dirDefaults,optionsManager.localeDefaults,optionsManager.overrides,spec.overrides,optionsManager.dynamicOverrides]);locale_1.populateInstanceComputableOptions(spec.options);};ViewSpecManager.prototype.buildViewSpecButtonText=function(spec,requestedViewType){var optionsManager=this.optionsManager;function queryButtonText(options){var buttonText=options.buttonText||{};return buttonText[requestedViewType]||(spec.buttonTextKey?buttonText[spec.buttonTextKey]:null)||(spec.singleUnit?buttonText[spec.singleUnit]:null);}spec.buttonTextOverride=queryButtonText(optionsManager.dynamicOverrides)||queryButtonText(optionsManager.overrides)||spec.overrides.buttonText;spec.buttonTextDefault=queryButtonText(optionsManager.localeDefaults)||queryButtonText(optionsManager.dirDefaults)||spec.defaults.buttonText||queryButtonText(options_1.globalDefaults)||(spec.duration?this._calendar.humanizeDuration(spec.duration):null)||requestedViewType;};return ViewSpecManager;}();exports.default=ViewSpecManager;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var util_1=__webpack_require__(4);var EventPeriod_1=__webpack_require__(243);var ArrayEventSource_1=__webpack_require__(52);var EventSource_1=__webpack_require__(6);var EventSourceParser_1=__webpack_require__(38);var SingleEventDef_1=__webpack_require__(13);var EventInstanceGroup_1=__webpack_require__(18);var EmitterMixin_1=__webpack_require__(11);var ListenerMixin_1=__webpack_require__(7);var EventManager=function(){function EventManager(calendar){this.calendar=calendar;this.stickySource=new ArrayEventSource_1.default(calendar);this.otherSources=[];}EventManager.prototype.requestEvents=function(start,end,timezone,force){if(force||!this.currentPeriod||!this.currentPeriod.isWithinRange(start,end)||timezone!==this.currentPeriod.timezone){this.setPeriod(new EventPeriod_1.default(start,end,timezone));}return this.currentPeriod.whenReleased();};EventManager.prototype.addSource=function(eventSource){this.otherSources.push(eventSource);if(this.currentPeriod){this.currentPeriod.requestSource(eventSource);}};EventManager.prototype.removeSource=function(doomedSource){util_1.removeExact(this.otherSources,doomedSource);if(this.currentPeriod){this.currentPeriod.purgeSource(doomedSource);}};EventManager.prototype.removeAllSources=function(){this.otherSources=[];if(this.currentPeriod){this.currentPeriod.purgeAllSources();}};EventManager.prototype.refetchSource=function(eventSource){var currentPeriod=this.currentPeriod;if(currentPeriod){currentPeriod.freeze();currentPeriod.purgeSource(eventSource);currentPeriod.requestSource(eventSource);currentPeriod.thaw();}};EventManager.prototype.refetchAllSources=function(){var currentPeriod=this.currentPeriod;if(currentPeriod){currentPeriod.freeze();currentPeriod.purgeAllSources();currentPeriod.requestSources(this.getSources());currentPeriod.thaw();}};EventManager.prototype.getSources=function(){return[this.stickySource].concat(this.otherSources);};EventManager.prototype.multiQuerySources=function(matchInputs){if(!matchInputs){matchInputs=[];}else if(!$.isArray(matchInputs)){matchInputs=[matchInputs];}var matchingSources=[];var i;for(i=0;i<matchInputs.length;i++){matchingSources.push.apply(matchingSources,this.querySources(matchInputs[i]));}return matchingSources;};EventManager.prototype.querySources=function(matchInput){var sources=this.otherSources;var i;var source;for(i=0;i<sources.length;i++){source=sources[i];if(source===matchInput){return[source];}}source=this.getSourceById(EventSource_1.default.normalizeId(matchInput));if(source){return[source];}matchInput=EventSourceParser_1.default.parse(matchInput,this.calendar);if(matchInput){return $.grep(sources,function(source){return isSourcesEquivalent(matchInput,source);});}};EventManager.prototype.getSourceById=function(id){return $.grep(this.otherSources,function(source){return source.id&&source.id===id;})[0];};EventManager.prototype.setPeriod=function(eventPeriod){if(this.currentPeriod){this.unbindPeriod(this.currentPeriod);this.currentPeriod=null;}this.currentPeriod=eventPeriod;this.bindPeriod(eventPeriod);eventPeriod.requestSources(this.getSources());};EventManager.prototype.bindPeriod=function(eventPeriod){this.listenTo(eventPeriod,'release',function(eventsPayload){this.trigger('release',eventsPayload);});};EventManager.prototype.unbindPeriod=function(eventPeriod){this.stopListeningTo(eventPeriod);};EventManager.prototype.getEventDefByUid=function(uid){if(this.currentPeriod){return this.currentPeriod.getEventDefByUid(uid);}};EventManager.prototype.addEventDef=function(eventDef,isSticky){if(isSticky){this.stickySource.addEventDef(eventDef);}if(this.currentPeriod){this.currentPeriod.addEventDef(eventDef);}};EventManager.prototype.removeEventDefsById=function(eventId){this.getSources().forEach(function(eventSource){eventSource.removeEventDefsById(eventId);});if(this.currentPeriod){this.currentPeriod.removeEventDefsById(eventId);}};EventManager.prototype.removeAllEventDefs=function(){this.getSources().forEach(function(eventSource){eventSource.removeAllEventDefs();});if(this.currentPeriod){this.currentPeriod.removeAllEventDefs();}};EventManager.prototype.mutateEventsWithId=function(eventDefId,eventDefMutation){var currentPeriod=this.currentPeriod;var eventDefs;var undoFuncs=[];if(currentPeriod){currentPeriod.freeze();eventDefs=currentPeriod.getEventDefsById(eventDefId);eventDefs.forEach(function(eventDef){currentPeriod.removeEventDef(eventDef);undoFuncs.push(eventDefMutation.mutateSingle(eventDef));currentPeriod.addEventDef(eventDef);});currentPeriod.thaw();return function(){currentPeriod.freeze();for(var i=0;i<eventDefs.length;i++){currentPeriod.removeEventDef(eventDefs[i]);undoFuncs[i]();currentPeriod.addEventDef(eventDefs[i]);}currentPeriod.thaw();};}return function(){};};EventManager.prototype.buildMutatedEventInstanceGroup=function(eventDefId,eventDefMutation){var eventDefs=this.getEventDefsById(eventDefId);var i;var defCopy;var allInstances=[];for(i=0;i<eventDefs.length;i++){defCopy=eventDefs[i].clone();if(defCopy instanceof SingleEventDef_1.default){eventDefMutation.mutateSingle(defCopy);allInstances.push.apply(allInstances,defCopy.buildInstances());}}return new EventInstanceGroup_1.default(allInstances);};EventManager.prototype.freeze=function(){if(this.currentPeriod){this.currentPeriod.freeze();}};EventManager.prototype.thaw=function(){if(this.currentPeriod){this.currentPeriod.thaw();}};EventManager.prototype.getEventDefsById=function(eventDefId){return this.currentPeriod.getEventDefsById(eventDefId);};EventManager.prototype.getEventInstances=function(){return this.currentPeriod.getEventInstances();};EventManager.prototype.getEventInstancesWithId=function(eventDefId){return this.currentPeriod.getEventInstancesWithId(eventDefId);};EventManager.prototype.getEventInstancesWithoutId=function(eventDefId){return this.currentPeriod.getEventInstancesWithoutId(eventDefId);};return EventManager;}();exports.default=EventManager;EmitterMixin_1.default.mixInto(EventManager);ListenerMixin_1.default.mixInto(EventManager);function isSourcesEquivalent(source0,source1){return source0.getPrimitive()===source1.getPrimitive();}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var util_1=__webpack_require__(4);var Promise_1=__webpack_require__(20);var EmitterMixin_1=__webpack_require__(11);var UnzonedRange_1=__webpack_require__(5);var EventInstanceGroup_1=__webpack_require__(18);var EventPeriod=function(){function EventPeriod(start,end,timezone){this.pendingCnt=0;this.freezeDepth=0;this.stuntedReleaseCnt=0;this.releaseCnt=0;this.start=start;this.end=end;this.timezone=timezone;this.unzonedRange=new UnzonedRange_1.default(start.clone().stripZone(),end.clone().stripZone());this.requestsByUid={};this.eventDefsByUid={};this.eventDefsById={};this.eventInstanceGroupsById={};}EventPeriod.prototype.isWithinRange=function(start,end){return!start.isBefore(this.start)&&!end.isAfter(this.end);};EventPeriod.prototype.requestSources=function(sources){this.freeze();for(var i=0;i<sources.length;i++){this.requestSource(sources[i]);}this.thaw();};EventPeriod.prototype.requestSource=function(source){var _this=this;var request={source:source,status:'pending',eventDefs:null};this.requestsByUid[source.uid]=request;this.pendingCnt+=1;source.fetch(this.start,this.end,this.timezone).then(function(eventDefs){if(request.status!=='cancelled'){request.status='completed';request.eventDefs=eventDefs;_this.addEventDefs(eventDefs);_this.pendingCnt--;_this.tryRelease();}},function(){if(request.status!=='cancelled'){request.status='failed';_this.pendingCnt--;_this.tryRelease();}});};EventPeriod.prototype.purgeSource=function(source){var request=this.requestsByUid[source.uid];if(request){delete this.requestsByUid[source.uid];if(request.status==='pending'){request.status='cancelled';this.pendingCnt--;this.tryRelease();}else if(request.status==='completed'){request.eventDefs.forEach(this.removeEventDef.bind(this));}}};EventPeriod.prototype.purgeAllSources=function(){var requestsByUid=this.requestsByUid;var uid;var request;var completedCnt=0;for(uid in requestsByUid){request=requestsByUid[uid];if(request.status==='pending'){request.status='cancelled';}else if(request.status==='completed'){completedCnt++;}}this.requestsByUid={};this.pendingCnt=0;if(completedCnt){this.removeAllEventDefs();}};EventPeriod.prototype.getEventDefByUid=function(eventDefUid){return this.eventDefsByUid[eventDefUid];};EventPeriod.prototype.getEventDefsById=function(eventDefId){var a=this.eventDefsById[eventDefId];if(a){return a.slice();}return[];};EventPeriod.prototype.addEventDefs=function(eventDefs){for(var i=0;i<eventDefs.length;i++){this.addEventDef(eventDefs[i]);}};EventPeriod.prototype.addEventDef=function(eventDef){var eventDefsById=this.eventDefsById;var eventDefId=eventDef.id;var eventDefs=eventDefsById[eventDefId]||(eventDefsById[eventDefId]=[]);var eventInstances=eventDef.buildInstances(this.unzonedRange);var i;eventDefs.push(eventDef);this.eventDefsByUid[eventDef.uid]=eventDef;for(i=0;i<eventInstances.length;i++){this.addEventInstance(eventInstances[i],eventDefId);}};EventPeriod.prototype.removeEventDefsById=function(eventDefId){var _this=this;this.getEventDefsById(eventDefId).forEach(function(eventDef){_this.removeEventDef(eventDef);});};EventPeriod.prototype.removeAllEventDefs=function(){var isEmpty=$.isEmptyObject(this.eventDefsByUid);this.eventDefsByUid={};this.eventDefsById={};this.eventInstanceGroupsById={};if(!isEmpty){this.tryRelease();}};EventPeriod.prototype.removeEventDef=function(eventDef){var eventDefsById=this.eventDefsById;var eventDefs=eventDefsById[eventDef.id];delete this.eventDefsByUid[eventDef.uid];if(eventDefs){util_1.removeExact(eventDefs,eventDef);if(!eventDefs.length){delete eventDefsById[eventDef.id];}this.removeEventInstancesForDef(eventDef);}};EventPeriod.prototype.getEventInstances=function(){var eventInstanceGroupsById=this.eventInstanceGroupsById;var eventInstances=[];var id;for(id in eventInstanceGroupsById){eventInstances.push.apply(eventInstances,eventInstanceGroupsById[id].eventInstances);}return eventInstances;};EventPeriod.prototype.getEventInstancesWithId=function(eventDefId){var eventInstanceGroup=this.eventInstanceGroupsById[eventDefId];if(eventInstanceGroup){return eventInstanceGroup.eventInstances.slice();}return[];};EventPeriod.prototype.getEventInstancesWithoutId=function(eventDefId){var eventInstanceGroupsById=this.eventInstanceGroupsById;var matchingInstances=[];var id;for(id in eventInstanceGroupsById){if(id!==eventDefId){matchingInstances.push.apply(matchingInstances,eventInstanceGroupsById[id].eventInstances);}}return matchingInstances;};EventPeriod.prototype.addEventInstance=function(eventInstance,eventDefId){var eventInstanceGroupsById=this.eventInstanceGroupsById;var eventInstanceGroup=eventInstanceGroupsById[eventDefId]||(eventInstanceGroupsById[eventDefId]=new EventInstanceGroup_1.default());eventInstanceGroup.eventInstances.push(eventInstance);this.tryRelease();};EventPeriod.prototype.removeEventInstancesForDef=function(eventDef){var eventInstanceGroupsById=this.eventInstanceGroupsById;var eventInstanceGroup=eventInstanceGroupsById[eventDef.id];var removeCnt;if(eventInstanceGroup){removeCnt=util_1.removeMatching(eventInstanceGroup.eventInstances,function(currentEventInstance){return currentEventInstance.def===eventDef;});if(!eventInstanceGroup.eventInstances.length){delete eventInstanceGroupsById[eventDef.id];}if(removeCnt){this.tryRelease();}}};EventPeriod.prototype.tryRelease=function(){if(!this.pendingCnt){if(!this.freezeDepth){this.release();}else{this.stuntedReleaseCnt++;}}};EventPeriod.prototype.release=function(){this.releaseCnt++;this.trigger('release',this.eventInstanceGroupsById);};EventPeriod.prototype.whenReleased=function(){var _this=this;if(this.releaseCnt){return Promise_1.default.resolve(this.eventInstanceGroupsById);}else{return Promise_1.default.construct(function(onResolve){_this.one('release',onResolve);});}};EventPeriod.prototype.freeze=function(){if(!this.freezeDepth++){this.stuntedReleaseCnt=0;}};EventPeriod.prototype.thaw=function(){if(! --this.freezeDepth&&this.stuntedReleaseCnt&&!this.pendingCnt){this.release();}};return EventPeriod;}();exports.default=EventPeriod;EmitterMixin_1.default.mixInto(EventPeriod);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var util_1=__webpack_require__(4);var ListenerMixin_1=__webpack_require__(7);var MouseFollower=function(){function MouseFollower(sourceEl,options){this.isFollowing=false;this.isHidden=false;this.isAnimating=false;this.options=options=options||{};this.sourceEl=sourceEl;this.parentEl=options.parentEl?$(options.parentEl):sourceEl.parent();}MouseFollower.prototype.start=function(ev){if(!this.isFollowing){this.isFollowing=true;this.y0=util_1.getEvY(ev);this.x0=util_1.getEvX(ev);this.topDelta=0;this.leftDelta=0;if(!this.isHidden){this.updatePosition();}if(util_1.getEvIsTouch(ev)){this.listenTo($(document),'touchmove',this.handleMove);}else{this.listenTo($(document),'mousemove',this.handleMove);}}};MouseFollower.prototype.stop=function(shouldRevert,callback){var _this=this;var revertDuration=this.options.revertDuration;var complete=function complete(){_this.isAnimating=false;_this.removeElement();_this.top0=_this.left0=null;if(callback){callback();}};if(this.isFollowing&&!this.isAnimating){this.isFollowing=false;this.stopListeningTo($(document));if(shouldRevert&&revertDuration&&!this.isHidden){this.isAnimating=true;this.el.animate({top:this.top0,left:this.left0},{duration:revertDuration,complete:complete});}else{complete();}}};MouseFollower.prototype.getEl=function(){var el=this.el;if(!el){el=this.el=this.sourceEl.clone().addClass(this.options.additionalClass||'').css({position:'absolute',visibility:'',display:this.isHidden?'none':'',margin:0,right:'auto',bottom:'auto',width:this.sourceEl.width(),height:this.sourceEl.height(),opacity:this.options.opacity||'',zIndex:this.options.zIndex});el.addClass('fc-unselectable');el.appendTo(this.parentEl);}return el;};MouseFollower.prototype.removeElement=function(){if(this.el){this.el.remove();this.el=null;}};MouseFollower.prototype.updatePosition=function(){var sourceOffset;var origin;this.getEl();if(this.top0==null){sourceOffset=this.sourceEl.offset();origin=this.el.offsetParent().offset();this.top0=sourceOffset.top-origin.top;this.left0=sourceOffset.left-origin.left;}this.el.css({top:this.top0+this.topDelta,left:this.left0+this.leftDelta});};MouseFollower.prototype.handleMove=function(ev){this.topDelta=util_1.getEvY(ev)-this.y0;this.leftDelta=util_1.getEvX(ev)-this.x0;if(!this.isHidden){this.updatePosition();}};MouseFollower.prototype.hide=function(){if(!this.isHidden){this.isHidden=true;if(this.el){this.el.hide();}}};MouseFollower.prototype.show=function(){if(this.isHidden){this.isHidden=false;this.updatePosition();this.getEl().show();}};return MouseFollower;}();exports.default=MouseFollower;ListenerMixin_1.default.mixInto(MouseFollower);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var HitDragListener_1=__webpack_require__(23);var Interaction_1=__webpack_require__(15);var DateClicking=function(_super){tslib_1.__extends(DateClicking,_super);function DateClicking(component){var _this=_super.call(this,component)||this;_this.dragListener=_this.buildDragListener();return _this;}DateClicking.prototype.end=function(){this.dragListener.endInteraction();};DateClicking.prototype.bindToEl=function(el){var component=this.component;var dragListener=this.dragListener;component.bindDateHandlerToEl(el,'mousedown',function(ev){if(!component.shouldIgnoreMouse()){dragListener.startInteraction(ev);}});component.bindDateHandlerToEl(el,'touchstart',function(ev){if(!component.shouldIgnoreTouch()){dragListener.startInteraction(ev);}});};DateClicking.prototype.buildDragListener=function(){var _this=this;var component=this.component;var dayClickHit;var dragListener=new HitDragListener_1.default(component,{scroll:this.opt('dragScroll'),interactionStart:function interactionStart(){dayClickHit=dragListener.origHit;},hitOver:function hitOver(hit,isOrig,origHit){if(!isOrig){dayClickHit=null;}},hitOut:function hitOut(){dayClickHit=null;},interactionEnd:function interactionEnd(ev,isCancelled){var componentFootprint;if(!isCancelled&&dayClickHit){componentFootprint=component.getSafeHitFootprint(dayClickHit);if(componentFootprint){_this.view.triggerDayClick(componentFootprint,component.getHitEl(dayClickHit),ev);}}}});dragListener.shouldCancelTouchScroll=false;dragListener.scrollAlwaysKills=true;return dragListener;};return DateClicking;}(Interaction_1.default);exports.default=DateClicking;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var util_1=__webpack_require__(4);var EventRenderer_1=__webpack_require__(42);var TimeGridEventRenderer=function(_super){tslib_1.__extends(TimeGridEventRenderer,_super);function TimeGridEventRenderer(timeGrid,fillRenderer){var _this=_super.call(this,timeGrid,fillRenderer)||this;_this.timeGrid=timeGrid;return _this;}TimeGridEventRenderer.prototype.renderFgSegs=function(segs){this.renderFgSegsIntoContainers(segs,this.timeGrid.fgContainerEls);};TimeGridEventRenderer.prototype.renderFgSegsIntoContainers=function(segs,containerEls){var segsByCol;var col;segsByCol=this.timeGrid.groupSegsByCol(segs);for(col=0;col<this.timeGrid.colCnt;col++){this.updateFgSegCoords(segsByCol[col]);}this.timeGrid.attachSegsByCol(segsByCol,containerEls);};TimeGridEventRenderer.prototype.unrenderFgSegs=function(){if(this.fgSegs){this.fgSegs.forEach(function(seg){seg.el.remove();});}};TimeGridEventRenderer.prototype.computeEventTimeFormat=function(){return this.opt('noMeridiemTimeFormat');};TimeGridEventRenderer.prototype.computeDisplayEventEnd=function(){return true;};TimeGridEventRenderer.prototype.fgSegHtml=function(seg,disableResizing){var view=this.view;var calendar=view.calendar;var componentFootprint=seg.footprint.componentFootprint;var isAllDay=componentFootprint.isAllDay;var eventDef=seg.footprint.eventDef;var isDraggable=view.isEventDefDraggable(eventDef);var isResizableFromStart=!disableResizing&&seg.isStart&&view.isEventDefResizableFromStart(eventDef);var isResizableFromEnd=!disableResizing&&seg.isEnd&&view.isEventDefResizableFromEnd(eventDef);var classes=this.getSegClasses(seg,isDraggable,isResizableFromStart||isResizableFromEnd);var skinCss=util_1.cssToStr(this.getSkinCss(eventDef));var timeText;var fullTimeText;var startTimeText;classes.unshift('fc-time-grid-event','fc-v-event');if(view.isMultiDayRange(componentFootprint.unzonedRange)){if(seg.isStart||seg.isEnd){var zonedStart=calendar.msToMoment(seg.startMs);var zonedEnd=calendar.msToMoment(seg.endMs);timeText=this._getTimeText(zonedStart,zonedEnd,isAllDay);fullTimeText=this._getTimeText(zonedStart,zonedEnd,isAllDay,'LT');startTimeText=this._getTimeText(zonedStart,zonedEnd,isAllDay,null,false);}}else{timeText=this.getTimeText(seg.footprint);fullTimeText=this.getTimeText(seg.footprint,'LT');startTimeText=this.getTimeText(seg.footprint,null,false);}return'<a class="'+classes.join(' ')+'"'+(eventDef.url?' href="'+util_1.htmlEscape(eventDef.url)+'"':'')+(skinCss?' style="'+skinCss+'"':'')+'>'+'<div class="fc-content">'+(timeText?'<div class="fc-time"'+' data-start="'+util_1.htmlEscape(startTimeText)+'"'+' data-full="'+util_1.htmlEscape(fullTimeText)+'"'+'>'+'<span>'+util_1.htmlEscape(timeText)+'</span>'+'</div>':'')+(eventDef.title?'<div class="fc-title">'+util_1.htmlEscape(eventDef.title)+'</div>':'')+'</div>'+'<div class="fc-bg"/>'+(isResizableFromEnd?'<div class="fc-resizer fc-end-resizer" />':'')+'</a>';};TimeGridEventRenderer.prototype.updateFgSegCoords=function(segs){this.timeGrid.computeSegVerticals(segs);this.computeFgSegHorizontals(segs);this.timeGrid.assignSegVerticals(segs);this.assignFgSegHorizontals(segs);};TimeGridEventRenderer.prototype.computeFgSegHorizontals=function(segs){var levels;var level0;var i;this.sortEventSegs(segs);levels=buildSlotSegLevels(segs);computeForwardSlotSegs(levels);if(level0=levels[0]){for(i=0;i<level0.length;i++){computeSlotSegPressures(level0[i]);}for(i=0;i<level0.length;i++){this.computeFgSegForwardBack(level0[i],0,0);}}};TimeGridEventRenderer.prototype.computeFgSegForwardBack=function(seg,seriesBackwardPressure,seriesBackwardCoord){var forwardSegs=seg.forwardSegs;var i;if(seg.forwardCoord===undefined){if(!forwardSegs.length){seg.forwardCoord=1;}else{this.sortForwardSegs(forwardSegs);this.computeFgSegForwardBack(forwardSegs[0],seriesBackwardPressure+1,seriesBackwardCoord);seg.forwardCoord=forwardSegs[0].backwardCoord;}seg.backwardCoord=seg.forwardCoord-(seg.forwardCoord-seriesBackwardCoord)/(seriesBackwardPressure+1);for(i=0;i<forwardSegs.length;i++){this.computeFgSegForwardBack(forwardSegs[i],0,seg.forwardCoord);}}};TimeGridEventRenderer.prototype.sortForwardSegs=function(forwardSegs){forwardSegs.sort(util_1.proxy(this,'compareForwardSegs'));};TimeGridEventRenderer.prototype.compareForwardSegs=function(seg1,seg2){return seg2.forwardPressure-seg1.forwardPressure||(seg1.backwardCoord||0)-(seg2.backwardCoord||0)||this.compareEventSegs(seg1,seg2);};TimeGridEventRenderer.prototype.assignFgSegHorizontals=function(segs){var i;var seg;for(i=0;i<segs.length;i++){seg=segs[i];seg.el.css(this.generateFgSegHorizontalCss(seg));if(seg.bottom-seg.top<30){seg.el.addClass('fc-short');}}};TimeGridEventRenderer.prototype.generateFgSegHorizontalCss=function(seg){var shouldOverlap=this.opt('slotEventOverlap');var backwardCoord=seg.backwardCoord;var forwardCoord=seg.forwardCoord;var props=this.timeGrid.generateSegVerticalCss(seg);var isRTL=this.timeGrid.isRTL;var left;var right;if(shouldOverlap){forwardCoord=Math.min(1,backwardCoord+(forwardCoord-backwardCoord)*2);}if(isRTL){left=1-forwardCoord;right=backwardCoord;}else{left=backwardCoord;right=1-forwardCoord;}props.zIndex=seg.level+1;props.left=left*100+'%';props.right=right*100+'%';if(shouldOverlap&&seg.forwardPressure){props[isRTL?'marginLeft':'marginRight']=10*2;}return props;};return TimeGridEventRenderer;}(EventRenderer_1.default);exports.default=TimeGridEventRenderer;function buildSlotSegLevels(segs){var levels=[];var i;var seg;var j;for(i=0;i<segs.length;i++){seg=segs[i];for(j=0;j<levels.length;j++){if(!computeSlotSegCollisions(seg,levels[j]).length){break;}}seg.level=j;(levels[j]||(levels[j]=[])).push(seg);}return levels;}function computeForwardSlotSegs(levels){var i;var level;var j;var seg;var k;for(i=0;i<levels.length;i++){level=levels[i];for(j=0;j<level.length;j++){seg=level[j];seg.forwardSegs=[];for(k=i+1;k<levels.length;k++){computeSlotSegCollisions(seg,levels[k],seg.forwardSegs);}}}}function computeSlotSegPressures(seg){var forwardSegs=seg.forwardSegs;var forwardPressure=0;var i;var forwardSeg;if(seg.forwardPressure===undefined){for(i=0;i<forwardSegs.length;i++){forwardSeg=forwardSegs[i];computeSlotSegPressures(forwardSeg);forwardPressure=Math.max(forwardPressure,1+forwardSeg.forwardPressure);}seg.forwardPressure=forwardPressure;}}function computeSlotSegCollisions(seg,otherSegs,results){if(results===void 0){results=[];}for(var i=0;i<otherSegs.length;i++){if(isSlotSegCollision(seg,otherSegs[i])){results.push(otherSegs[i]);}}return results;}function isSlotSegCollision(seg1,seg2){return seg1.bottom>seg2.top&&seg1.top<seg2.bottom;}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var HelperRenderer_1=__webpack_require__(58);var TimeGridHelperRenderer=function(_super){tslib_1.__extends(TimeGridHelperRenderer,_super);function TimeGridHelperRenderer(){return _super!==null&&_super.apply(this,arguments)||this;}TimeGridHelperRenderer.prototype.renderSegs=function(segs,sourceSeg){var helperNodes=[];var i;var seg;var sourceEl;this.eventRenderer.renderFgSegsIntoContainers(segs,this.component.helperContainerEls);for(i=0;i<segs.length;i++){seg=segs[i];if(sourceSeg&&sourceSeg.col===seg.col){sourceEl=sourceSeg.el;seg.el.css({left:sourceEl.css('left'),right:sourceEl.css('right'),'margin-left':sourceEl.css('margin-left'),'margin-right':sourceEl.css('margin-right')});}helperNodes.push(seg.el[0]);}return $(helperNodes);};return TimeGridHelperRenderer;}(HelperRenderer_1.default);exports.default=TimeGridHelperRenderer;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var FillRenderer_1=__webpack_require__(57);var TimeGridFillRenderer=function(_super){tslib_1.__extends(TimeGridFillRenderer,_super);function TimeGridFillRenderer(){return _super!==null&&_super.apply(this,arguments)||this;}TimeGridFillRenderer.prototype.attachSegEls=function(type,segs){var timeGrid=this.component;var containerEls;if(type==='bgEvent'){containerEls=timeGrid.bgContainerEls;}else if(type==='businessHours'){containerEls=timeGrid.businessContainerEls;}else if(type==='highlight'){containerEls=timeGrid.highlightContainerEls;}timeGrid.updateSegVerticals(segs);timeGrid.attachSegsByCol(timeGrid.groupSegsByCol(segs),containerEls);return segs.map(function(seg){return seg.el[0];});};return TimeGridFillRenderer;}(FillRenderer_1.default);exports.default=TimeGridFillRenderer;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var $=__webpack_require__(3);var util_1=__webpack_require__(4);var ListenerMixin_1=__webpack_require__(7);var Popover=function(){function Popover(options){this.isHidden=true;this.margin=10;this.options=options||{};}Popover.prototype.show=function(){if(this.isHidden){if(!this.el){this.render();}this.el.show();this.position();this.isHidden=false;this.trigger('show');}};Popover.prototype.hide=function(){if(!this.isHidden){this.el.hide();this.isHidden=true;this.trigger('hide');}};Popover.prototype.render=function(){var _this=this;var options=this.options;this.el=$('<div class="fc-popover"/>').addClass(options.className||'').css({top:0,left:0}).append(options.content).appendTo(options.parentEl);this.el.on('click','.fc-close',function(){_this.hide();});if(options.autoHide){this.listenTo($(document),'mousedown',this.documentMousedown);}};Popover.prototype.documentMousedown=function(ev){if(this.el&&!$(ev.target).closest(this.el).length){this.hide();}};Popover.prototype.removeElement=function(){this.hide();if(this.el){this.el.remove();this.el=null;}this.stopListeningTo($(document),'mousedown');};Popover.prototype.position=function(){var options=this.options;var origin=this.el.offsetParent().offset();var width=this.el.outerWidth();var height=this.el.outerHeight();var windowEl=$(window);var viewportEl=util_1.getScrollParent(this.el);var viewportTop;var viewportLeft;var viewportOffset;var top;var left;top=options.top||0;if(options.left!==undefined){left=options.left;}else if(options.right!==undefined){left=options.right-width;}else{left=0;}if(viewportEl.is(window)||viewportEl.is(document)){viewportEl=windowEl;viewportTop=0;viewportLeft=0;}else{viewportOffset=viewportEl.offset();viewportTop=viewportOffset.top;viewportLeft=viewportOffset.left;}viewportTop+=windowEl.scrollTop();viewportLeft+=windowEl.scrollLeft();if(options.viewportConstrain!==false){top=Math.min(top,viewportTop+viewportEl.outerHeight()-height-this.margin);top=Math.max(top,viewportTop+this.margin);left=Math.min(left,viewportLeft+viewportEl.outerWidth()-width-this.margin);left=Math.max(left,viewportLeft+this.margin);}this.el.css({top:top-origin.top,left:left-origin.left});};Popover.prototype.trigger=function(name){if(this.options[name]){this.options[name].apply(this,Array.prototype.slice.call(arguments,1));}};return Popover;}();exports.default=Popover;ListenerMixin_1.default.mixInto(Popover);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var util_1=__webpack_require__(4);var EventRenderer_1=__webpack_require__(42);var DayGridEventRenderer=function(_super){tslib_1.__extends(DayGridEventRenderer,_super);function DayGridEventRenderer(dayGrid,fillRenderer){var _this=_super.call(this,dayGrid,fillRenderer)||this;_this.dayGrid=dayGrid;return _this;}DayGridEventRenderer.prototype.renderBgRanges=function(eventRanges){eventRanges=$.grep(eventRanges,function(eventRange){return eventRange.eventDef.isAllDay();});_super.prototype.renderBgRanges.call(this,eventRanges);};DayGridEventRenderer.prototype.renderFgSegs=function(segs){var rowStructs=this.rowStructs=this.renderSegRows(segs);this.dayGrid.rowEls.each(function(i,rowNode){$(rowNode).find('.fc-content-skeleton > table').append(rowStructs[i].tbodyEl);});};DayGridEventRenderer.prototype.unrenderFgSegs=function(){var rowStructs=this.rowStructs||[];var rowStruct;while(rowStruct=rowStructs.pop()){rowStruct.tbodyEl.remove();}this.rowStructs=null;};DayGridEventRenderer.prototype.renderSegRows=function(segs){var rowStructs=[];var segRows;var row;segRows=this.groupSegRows(segs);for(row=0;row<segRows.length;row++){rowStructs.push(this.renderSegRow(row,segRows[row]));}return rowStructs;};DayGridEventRenderer.prototype.renderSegRow=function(row,rowSegs){var colCnt=this.dayGrid.colCnt;var segLevels=this.buildSegLevels(rowSegs);var levelCnt=Math.max(1,segLevels.length);var tbody=$('<tbody/>');var segMatrix=[];var cellMatrix=[];var loneCellMatrix=[];var i;var levelSegs;var col;var tr;var j;var seg;var td;function emptyCellsUntil(endCol){while(col<endCol){td=(loneCellMatrix[i-1]||[])[col];if(td){td.attr('rowspan',parseInt(td.attr('rowspan')||1,10)+1);}else{td=$('<td/>');tr.append(td);}cellMatrix[i][col]=td;loneCellMatrix[i][col]=td;col++;}}for(i=0;i<levelCnt;i++){levelSegs=segLevels[i];col=0;tr=$('<tr/>');segMatrix.push([]);cellMatrix.push([]);loneCellMatrix.push([]);if(levelSegs){for(j=0;j<levelSegs.length;j++){seg=levelSegs[j];emptyCellsUntil(seg.leftCol);td=$('<td class="fc-event-container"/>').append(seg.el);if(seg.leftCol!==seg.rightCol){td.attr('colspan',seg.rightCol-seg.leftCol+1);}else{loneCellMatrix[i][col]=td;}while(col<=seg.rightCol){cellMatrix[i][col]=td;segMatrix[i][col]=seg;col++;}tr.append(td);}}emptyCellsUntil(colCnt);this.dayGrid.bookendCells(tr);tbody.append(tr);}return{row:row,tbodyEl:tbody,cellMatrix:cellMatrix,segMatrix:segMatrix,segLevels:segLevels,segs:rowSegs};};DayGridEventRenderer.prototype.buildSegLevels=function(segs){var levels=[];var i;var seg;var j;this.sortEventSegs(segs);for(i=0;i<segs.length;i++){seg=segs[i];for(j=0;j<levels.length;j++){if(!isDaySegCollision(seg,levels[j])){break;}}seg.level=j;(levels[j]||(levels[j]=[])).push(seg);}for(j=0;j<levels.length;j++){levels[j].sort(compareDaySegCols);}return levels;};DayGridEventRenderer.prototype.groupSegRows=function(segs){var segRows=[];var i;for(i=0;i<this.dayGrid.rowCnt;i++){segRows.push([]);}for(i=0;i<segs.length;i++){segRows[segs[i].row].push(segs[i]);}return segRows;};DayGridEventRenderer.prototype.computeEventTimeFormat=function(){return this.opt('extraSmallTimeFormat');};DayGridEventRenderer.prototype.computeDisplayEventEnd=function(){return this.dayGrid.colCnt===1;};DayGridEventRenderer.prototype.fgSegHtml=function(seg,disableResizing){var view=this.view;var eventDef=seg.footprint.eventDef;var isAllDay=seg.footprint.componentFootprint.isAllDay;var isDraggable=view.isEventDefDraggable(eventDef);var isResizableFromStart=!disableResizing&&isAllDay&&seg.isStart&&view.isEventDefResizableFromStart(eventDef);var isResizableFromEnd=!disableResizing&&isAllDay&&seg.isEnd&&view.isEventDefResizableFromEnd(eventDef);var classes=this.getSegClasses(seg,isDraggable,isResizableFromStart||isResizableFromEnd);var skinCss=util_1.cssToStr(this.getSkinCss(eventDef));var timeHtml='';var timeText;var titleHtml;classes.unshift('fc-day-grid-event','fc-h-event');if(seg.isStart){timeText=this.getTimeText(seg.footprint);if(timeText){timeHtml='<span class="fc-time">'+util_1.htmlEscape(timeText)+'</span>';}}titleHtml='<span class="fc-title">'+(util_1.htmlEscape(eventDef.title||'')||'&nbsp;')+'</span>';return'<a class="'+classes.join(' ')+'"'+(eventDef.url?' href="'+util_1.htmlEscape(eventDef.url)+'"':'')+(skinCss?' style="'+skinCss+'"':'')+'>'+'<div class="fc-content">'+(this.dayGrid.isRTL?titleHtml+' '+timeHtml:timeHtml+' '+titleHtml)+'</div>'+(isResizableFromStart?'<div class="fc-resizer fc-start-resizer" />':'')+(isResizableFromEnd?'<div class="fc-resizer fc-end-resizer" />':'')+'</a>';};return DayGridEventRenderer;}(EventRenderer_1.default);exports.default=DayGridEventRenderer;function isDaySegCollision(seg,otherSegs){var i;var otherSeg;for(i=0;i<otherSegs.length;i++){otherSeg=otherSegs[i];if(otherSeg.leftCol<=seg.rightCol&&otherSeg.rightCol>=seg.leftCol){return true;}}return false;}function compareDaySegCols(a,b){return a.leftCol-b.leftCol;}},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var HelperRenderer_1=__webpack_require__(58);var DayGridHelperRenderer=function(_super){tslib_1.__extends(DayGridHelperRenderer,_super);function DayGridHelperRenderer(){return _super!==null&&_super.apply(this,arguments)||this;}DayGridHelperRenderer.prototype.renderSegs=function(segs,sourceSeg){var helperNodes=[];var rowStructs;rowStructs=this.eventRenderer.renderSegRows(segs);this.component.rowEls.each(function(row,rowNode){var rowEl=$(rowNode);var skeletonEl=$('<div class="fc-helper-skeleton"><table/></div>');var skeletonTopEl;var skeletonTop;if(sourceSeg&&sourceSeg.row===row){skeletonTop=sourceSeg.el.position().top;}else{skeletonTopEl=rowEl.find('.fc-content-skeleton tbody');if(!skeletonTopEl.length){skeletonTopEl=rowEl.find('.fc-content-skeleton table');}skeletonTop=skeletonTopEl.position().top;}skeletonEl.css('top',skeletonTop).find('table').append(rowStructs[row].tbodyEl);rowEl.append(skeletonEl);helperNodes.push(skeletonEl[0]);});return $(helperNodes);};return DayGridHelperRenderer;}(HelperRenderer_1.default);exports.default=DayGridHelperRenderer;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var FillRenderer_1=__webpack_require__(57);var DayGridFillRenderer=function(_super){tslib_1.__extends(DayGridFillRenderer,_super);function DayGridFillRenderer(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.fillSegTag='td';return _this;}DayGridFillRenderer.prototype.attachSegEls=function(type,segs){var nodes=[];var i;var seg;var skeletonEl;for(i=0;i<segs.length;i++){seg=segs[i];skeletonEl=this.renderFillRow(type,seg);this.component.rowEls.eq(seg.row).append(skeletonEl);nodes.push(skeletonEl[0]);}return nodes;};DayGridFillRenderer.prototype.renderFillRow=function(type,seg){var colCnt=this.component.colCnt;var startCol=seg.leftCol;var endCol=seg.rightCol+1;var className;var skeletonEl;var trEl;if(type==='businessHours'){className='bgevent';}else{className=type.toLowerCase();}skeletonEl=$('<div class="fc-'+className+'-skeleton">'+'<table><tr/></table>'+'</div>');trEl=skeletonEl.find('tr');if(startCol>0){trEl.append('<td colspan="'+startCol+'"/>');}trEl.append(seg.el.attr('colspan',endCol-startCol));if(endCol<colCnt){trEl.append('<td colspan="'+(colCnt-endCol)+'"/>');}this.component.bookendCells(trEl);return skeletonEl;};return DayGridFillRenderer;}(FillRenderer_1.default);exports.default=DayGridFillRenderer;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var BasicViewDateProfileGenerator_1=__webpack_require__(228);var UnzonedRange_1=__webpack_require__(5);var MonthViewDateProfileGenerator=function(_super){tslib_1.__extends(MonthViewDateProfileGenerator,_super);function MonthViewDateProfileGenerator(){return _super!==null&&_super.apply(this,arguments)||this;}MonthViewDateProfileGenerator.prototype.buildRenderRange=function(currentUnzonedRange,currentRangeUnit,isRangeAllDay){var renderUnzonedRange=_super.prototype.buildRenderRange.call(this,currentUnzonedRange,currentRangeUnit,isRangeAllDay);var start=this.msToUtcMoment(renderUnzonedRange.startMs,isRangeAllDay);var end=this.msToUtcMoment(renderUnzonedRange.endMs,isRangeAllDay);var rowCnt;if(this.opt('fixedWeekCount')){rowCnt=Math.ceil(end.diff(start,'weeks',true));end.add(6-rowCnt,'weeks');}return new UnzonedRange_1.default(start,end);};return MonthViewDateProfileGenerator;}(BasicViewDateProfileGenerator_1.default);exports.default=MonthViewDateProfileGenerator;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var util_1=__webpack_require__(4);var EventRenderer_1=__webpack_require__(42);var ListEventRenderer=function(_super){tslib_1.__extends(ListEventRenderer,_super);function ListEventRenderer(){return _super!==null&&_super.apply(this,arguments)||this;}ListEventRenderer.prototype.renderFgSegs=function(segs){if(!segs.length){this.component.renderEmptyMessage();}else{this.component.renderSegList(segs);}};ListEventRenderer.prototype.fgSegHtml=function(seg){var view=this.view;var calendar=view.calendar;var theme=calendar.theme;var eventFootprint=seg.footprint;var eventDef=eventFootprint.eventDef;var componentFootprint=eventFootprint.componentFootprint;var url=eventDef.url;var classes=['fc-list-item'].concat(this.getClasses(eventDef));var bgColor=this.getBgColor(eventDef);var timeHtml;if(componentFootprint.isAllDay){timeHtml=view.getAllDayHtml();}else if(view.isMultiDayRange(componentFootprint.unzonedRange)){if(seg.isStart||seg.isEnd){timeHtml=util_1.htmlEscape(this._getTimeText(calendar.msToMoment(seg.startMs),calendar.msToMoment(seg.endMs),componentFootprint.isAllDay));}else{timeHtml=view.getAllDayHtml();}}else{timeHtml=util_1.htmlEscape(this.getTimeText(eventFootprint));}if(url){classes.push('fc-has-url');}return'<tr class="'+classes.join(' ')+'">'+(this.displayEventTime?'<td class="fc-list-item-time '+theme.getClass('widgetContent')+'">'+(timeHtml||'')+'</td>':'')+'<td class="fc-list-item-marker '+theme.getClass('widgetContent')+'">'+'<span class="fc-event-dot"'+(bgColor?' style="background-color:'+bgColor+'"':'')+'></span>'+'</td>'+'<td class="fc-list-item-title '+theme.getClass('widgetContent')+'">'+'<a'+(url?' href="'+util_1.htmlEscape(url)+'"':'')+'>'+util_1.htmlEscape(eventDef.title||'')+'</a>'+'</td>'+'</tr>';};ListEventRenderer.prototype.computeEventTimeFormat=function(){return this.opt('mediumTimeFormat');};return ListEventRenderer;}(EventRenderer_1.default);exports.default=ListEventRenderer;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var $=__webpack_require__(3);var EventPointing_1=__webpack_require__(59);var ListEventPointing=function(_super){tslib_1.__extends(ListEventPointing,_super);function ListEventPointing(){return _super!==null&&_super.apply(this,arguments)||this;}ListEventPointing.prototype.handleClick=function(seg,ev){var url;_super.prototype.handleClick.call(this,seg,ev);if(!$(ev.target).closest('a[href]').length){url=seg.footprint.eventDef.url;if(url&&!ev.isDefaultPrevented()){window.location.href=url;}}};return ListEventPointing;}(EventPointing_1.default);exports.default=ListEventPointing;},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var EventSourceParser_1=__webpack_require__(38);var ArrayEventSource_1=__webpack_require__(52);var FuncEventSource_1=__webpack_require__(215);var JsonFeedEventSource_1=__webpack_require__(216);EventSourceParser_1.default.registerClass(ArrayEventSource_1.default);EventSourceParser_1.default.registerClass(FuncEventSource_1.default);EventSourceParser_1.default.registerClass(JsonFeedEventSource_1.default);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var ThemeRegistry_1=__webpack_require__(51);var StandardTheme_1=__webpack_require__(213);var JqueryUiTheme_1=__webpack_require__(214);var Bootstrap3Theme_1=__webpack_require__(258);var Bootstrap4Theme_1=__webpack_require__(259);ThemeRegistry_1.defineThemeSystem('standard',StandardTheme_1.default);ThemeRegistry_1.defineThemeSystem('jquery-ui',JqueryUiTheme_1.default);ThemeRegistry_1.defineThemeSystem('bootstrap3',Bootstrap3Theme_1.default);ThemeRegistry_1.defineThemeSystem('bootstrap4',Bootstrap4Theme_1.default);},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var Theme_1=__webpack_require__(19);var Bootstrap3Theme=function(_super){tslib_1.__extends(Bootstrap3Theme,_super);function Bootstrap3Theme(){return _super!==null&&_super.apply(this,arguments)||this;}return Bootstrap3Theme;}(Theme_1.default);exports.default=Bootstrap3Theme;Bootstrap3Theme.prototype.classes={widget:'fc-bootstrap3',tableGrid:'table-bordered',tableList:'table',tableListHeading:'active',buttonGroup:'btn-group',button:'btn btn-default',stateActive:'active',stateDisabled:'disabled',today:'alert alert-info',popover:'panel panel-default',popoverHeader:'panel-heading',popoverContent:'panel-body',headerRow:'panel-default',dayRow:'panel-default',listView:'panel panel-default'};Bootstrap3Theme.prototype.baseIconClass='glyphicon';Bootstrap3Theme.prototype.iconClasses={close:'glyphicon-remove',prev:'glyphicon-chevron-left',next:'glyphicon-chevron-right',prevYear:'glyphicon-backward',nextYear:'glyphicon-forward'};Bootstrap3Theme.prototype.iconOverrideOption='bootstrapGlyphicons';Bootstrap3Theme.prototype.iconOverrideCustomButtonOption='bootstrapGlyphicon';Bootstrap3Theme.prototype.iconOverridePrefix='glyphicon-';},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=__webpack_require__(2);var Theme_1=__webpack_require__(19);var Bootstrap4Theme=function(_super){tslib_1.__extends(Bootstrap4Theme,_super);function Bootstrap4Theme(){return _super!==null&&_super.apply(this,arguments)||this;}return Bootstrap4Theme;}(Theme_1.default);exports.default=Bootstrap4Theme;Bootstrap4Theme.prototype.classes={widget:'fc-bootstrap4',tableGrid:'table-bordered',tableList:'table',tableListHeading:'table-active',buttonGroup:'btn-group',button:'btn btn-primary',stateActive:'active',stateDisabled:'disabled',today:'alert alert-info',popover:'card card-primary',popoverHeader:'card-header',popoverContent:'card-body',headerRow:'table-bordered',dayRow:'table-bordered',listView:'card card-primary'};Bootstrap4Theme.prototype.baseIconClass='fa';Bootstrap4Theme.prototype.iconClasses={close:'fa-times',prev:'fa-chevron-left',next:'fa-chevron-right',prevYear:'fa-angle-double-left',nextYear:'fa-angle-double-right'};Bootstrap4Theme.prototype.iconOverrideOption='bootstrapFontAwesome';Bootstrap4Theme.prototype.iconOverrideCustomButtonOption='bootstrapFontAwesome';Bootstrap4Theme.prototype.iconOverridePrefix='fa-';},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var ViewRegistry_1=__webpack_require__(22);var BasicView_1=__webpack_require__(62);var MonthView_1=__webpack_require__(229);ViewRegistry_1.defineView('basic',{'class':BasicView_1.default});ViewRegistry_1.defineView('basicDay',{type:'basic',duration:{days:1}});ViewRegistry_1.defineView('basicWeek',{type:'basic',duration:{weeks:1}});ViewRegistry_1.defineView('month',{'class':MonthView_1.default,duration:{months:1},defaults:{fixedWeekCount:true}});},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var ViewRegistry_1=__webpack_require__(22);var AgendaView_1=__webpack_require__(226);ViewRegistry_1.defineView('agenda',{'class':AgendaView_1.default,defaults:{allDaySlot:true,slotDuration:'00:30:00',slotEventOverlap:true}});ViewRegistry_1.defineView('agendaDay',{type:'agenda',duration:{days:1}});ViewRegistry_1.defineView('agendaWeek',{type:'agenda',duration:{weeks:1}});},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var ViewRegistry_1=__webpack_require__(22);var ListView_1=__webpack_require__(230);ViewRegistry_1.defineView('list',{'class':ListView_1.default,buttonTextKey:'list',defaults:{buttonText:'list',listDayFormat:'LL',noEventsMessage:'No events to display'}});ViewRegistry_1.defineView('listDay',{type:'list',duration:{days:1},defaults:{listDayFormat:'dddd'}});ViewRegistry_1.defineView('listWeek',{type:'list',duration:{weeks:1},defaults:{listDayFormat:'dddd',listDayAltFormat:'LL'}});ViewRegistry_1.defineView('listMonth',{type:'list',duration:{month:1},defaults:{listDayAltFormat:'dddd'}});ViewRegistry_1.defineView('listYear',{type:'list',duration:{year:1},defaults:{listDayAltFormat:'dddd'}});},function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});}]);});
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(3)(module)))

/***/ }),

/***/ 769:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 619,
	"./af.js": 619,
	"./ar": 620,
	"./ar-dz": 621,
	"./ar-dz.js": 621,
	"./ar-kw": 622,
	"./ar-kw.js": 622,
	"./ar-ly": 623,
	"./ar-ly.js": 623,
	"./ar-ma": 624,
	"./ar-ma.js": 624,
	"./ar-sa": 625,
	"./ar-sa.js": 625,
	"./ar-tn": 626,
	"./ar-tn.js": 626,
	"./ar.js": 620,
	"./az": 627,
	"./az.js": 627,
	"./be": 628,
	"./be.js": 628,
	"./bg": 629,
	"./bg.js": 629,
	"./bm": 630,
	"./bm.js": 630,
	"./bn": 631,
	"./bn.js": 631,
	"./bo": 632,
	"./bo.js": 632,
	"./br": 633,
	"./br.js": 633,
	"./bs": 634,
	"./bs.js": 634,
	"./ca": 635,
	"./ca.js": 635,
	"./cs": 636,
	"./cs.js": 636,
	"./cv": 637,
	"./cv.js": 637,
	"./cy": 638,
	"./cy.js": 638,
	"./da": 639,
	"./da.js": 639,
	"./de": 640,
	"./de-at": 641,
	"./de-at.js": 641,
	"./de-ch": 642,
	"./de-ch.js": 642,
	"./de.js": 640,
	"./dv": 643,
	"./dv.js": 643,
	"./el": 644,
	"./el.js": 644,
	"./en-au": 645,
	"./en-au.js": 645,
	"./en-ca": 646,
	"./en-ca.js": 646,
	"./en-gb": 647,
	"./en-gb.js": 647,
	"./en-ie": 648,
	"./en-ie.js": 648,
	"./en-il": 649,
	"./en-il.js": 649,
	"./en-nz": 650,
	"./en-nz.js": 650,
	"./eo": 651,
	"./eo.js": 651,
	"./es": 652,
	"./es-do": 653,
	"./es-do.js": 653,
	"./es-us": 654,
	"./es-us.js": 654,
	"./es.js": 652,
	"./et": 655,
	"./et.js": 655,
	"./eu": 656,
	"./eu.js": 656,
	"./fa": 657,
	"./fa.js": 657,
	"./fi": 658,
	"./fi.js": 658,
	"./fo": 659,
	"./fo.js": 659,
	"./fr": 660,
	"./fr-ca": 661,
	"./fr-ca.js": 661,
	"./fr-ch": 662,
	"./fr-ch.js": 662,
	"./fr.js": 660,
	"./fy": 663,
	"./fy.js": 663,
	"./gd": 664,
	"./gd.js": 664,
	"./gl": 665,
	"./gl.js": 665,
	"./gom-latn": 666,
	"./gom-latn.js": 666,
	"./gu": 667,
	"./gu.js": 667,
	"./he": 668,
	"./he.js": 668,
	"./hi": 669,
	"./hi.js": 669,
	"./hr": 670,
	"./hr.js": 670,
	"./hu": 671,
	"./hu.js": 671,
	"./hy-am": 672,
	"./hy-am.js": 672,
	"./id": 673,
	"./id.js": 673,
	"./is": 674,
	"./is.js": 674,
	"./it": 675,
	"./it.js": 675,
	"./ja": 676,
	"./ja.js": 676,
	"./jv": 677,
	"./jv.js": 677,
	"./ka": 678,
	"./ka.js": 678,
	"./kk": 679,
	"./kk.js": 679,
	"./km": 680,
	"./km.js": 680,
	"./kn": 681,
	"./kn.js": 681,
	"./ko": 682,
	"./ko.js": 682,
	"./ky": 683,
	"./ky.js": 683,
	"./lb": 684,
	"./lb.js": 684,
	"./lo": 685,
	"./lo.js": 685,
	"./lt": 686,
	"./lt.js": 686,
	"./lv": 687,
	"./lv.js": 687,
	"./me": 688,
	"./me.js": 688,
	"./mi": 689,
	"./mi.js": 689,
	"./mk": 690,
	"./mk.js": 690,
	"./ml": 691,
	"./ml.js": 691,
	"./mn": 692,
	"./mn.js": 692,
	"./mr": 693,
	"./mr.js": 693,
	"./ms": 694,
	"./ms-my": 695,
	"./ms-my.js": 695,
	"./ms.js": 694,
	"./mt": 696,
	"./mt.js": 696,
	"./my": 697,
	"./my.js": 697,
	"./nb": 698,
	"./nb.js": 698,
	"./ne": 699,
	"./ne.js": 699,
	"./nl": 700,
	"./nl-be": 701,
	"./nl-be.js": 701,
	"./nl.js": 700,
	"./nn": 702,
	"./nn.js": 702,
	"./pa-in": 703,
	"./pa-in.js": 703,
	"./pl": 704,
	"./pl.js": 704,
	"./pt": 705,
	"./pt-br": 706,
	"./pt-br.js": 706,
	"./pt.js": 705,
	"./ro": 707,
	"./ro.js": 707,
	"./ru": 708,
	"./ru.js": 708,
	"./sd": 709,
	"./sd.js": 709,
	"./se": 710,
	"./se.js": 710,
	"./si": 711,
	"./si.js": 711,
	"./sk": 712,
	"./sk.js": 712,
	"./sl": 713,
	"./sl.js": 713,
	"./sq": 714,
	"./sq.js": 714,
	"./sr": 715,
	"./sr-cyrl": 716,
	"./sr-cyrl.js": 716,
	"./sr.js": 715,
	"./ss": 717,
	"./ss.js": 717,
	"./sv": 718,
	"./sv.js": 718,
	"./sw": 719,
	"./sw.js": 719,
	"./ta": 720,
	"./ta.js": 720,
	"./te": 721,
	"./te.js": 721,
	"./tet": 722,
	"./tet.js": 722,
	"./tg": 723,
	"./tg.js": 723,
	"./th": 724,
	"./th.js": 724,
	"./tl-ph": 725,
	"./tl-ph.js": 725,
	"./tlh": 726,
	"./tlh.js": 726,
	"./tr": 727,
	"./tr.js": 727,
	"./tzl": 728,
	"./tzl.js": 728,
	"./tzm": 729,
	"./tzm-latn": 730,
	"./tzm-latn.js": 730,
	"./tzm.js": 729,
	"./ug-cn": 731,
	"./ug-cn.js": 731,
	"./uk": 732,
	"./uk.js": 732,
	"./ur": 733,
	"./ur.js": 733,
	"./uz": 734,
	"./uz-latn": 735,
	"./uz-latn.js": 735,
	"./uz.js": 734,
	"./vi": 736,
	"./vi.js": 736,
	"./x-pseudo": 737,
	"./x-pseudo.js": 737,
	"./yo": 738,
	"./yo.js": 738,
	"./zh-cn": 739,
	"./zh-cn.js": 739,
	"./zh-hk": 740,
	"./zh-hk.js": 740,
	"./zh-tw": 741,
	"./zh-tw.js": 741
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 769;

/***/ }),

/***/ 770:
/***/ (function(module, exports, __webpack_require__) {

var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "container-fluid" }, [
      _c("div", { staticClass: "row" }, [
        _c("div", { staticClass: "col-md-10 col-md-offset-1" }, [
          _c("div", { staticClass: "card card-calendar" }, [
            _c("div", { staticClass: "card-content" }, [
              _c("div", { attrs: { id: "fullCalendar" } })
            ])
          ])
        ])
      ])
    ])
  }
]
render._withStripped = true
module.exports = { render: render, staticRenderFns: staticRenderFns }
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-hot-reload-api")      .rerender("data-v-39eba39d", module.exports)
  }
}

/***/ })

});